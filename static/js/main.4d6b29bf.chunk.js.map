{"version":3,"sources":["pages/Home.js","utils/hexstring.js","pacer/index.js","utils/sysex.js","utils/ports.js","components/DumpSysex.js","components/Midi.js","components/MidiPort.js","pages/TestSender.js","components/PresetSelectors.js","components/Controls.js","components/ControlStepsEditor.js","pages/Presets.js","pages/Monitor.js","components/Footer.js","pages/Global.js","pages/DumpDecoder.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","Component","h","v","undefined","str","len","char","s","c","n","length","padZero","toString","toUpperCase","hs","data","Array","from","map","join","fromHexString","string","sep","replace","Uint8Array","i","parseInt","substr","SYSEX_HEADER","SYSEX_SIGNATURE","checksum","bytes","reduce","previousValue","currentValue","requestPresetObj","index","obj","msg","cs","push","concat","TARGETS","_TARGETS","Object","defineProperty","CONTROLS","1","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","54","55","126","127","STOMPSWITCHES_TOP","STOMPSWITCHES_BOTTOM","FOOTSWITCHES","EXPPEDALS","MSG_TYPES","_MSG_TYPES","MSG_TYPES_FULLNAME","_MSG_TYPES_FULLNAME","SYSEX_START","SYSEX_END","CMD","TGT","IDX","OBJ","ELM","isObject","item","isArray","mergeDeep","target","_len","arguments","sources","_key","source","shift","key","assign","apply","isSysexData","byteLength","parseSysexMessage","obj_type","message","cmd","tgt","idx","console","warn","log","steps","e","config","channel","msg_type","active","getControlStep","slice","error","midi","on_color","off_color","getControlLED","parseSysexDump","d","presets","indexOf","k","manufacturer_id","NEKTAR_TECHNOLOGY_INC","portById","id","p","WebMidi","inputs","find","outputs","outputById","Midis","_ref","midis","ControlTable","_ref2","colSpan","keys","Note","Controls","_ref3","controls","DumpSysex_ControlTable","Preset","_ref4","b","Math","floor","String","fromCharCode","presetIndexToXY","DumpSysex_Controls","DumpSysex_Midis","Presets","_ref5","DumpSysex_Preset","DumpSysex","_ref6","DumpSysex_Presets","Midi","state","input","output","connectInput","port","hasListener","_this","props","onMidiInputEvent","addListener","disconnectInput","removeListener","connectOutput","setState","setOutput","disconnectOutput","autoConnectInput","autoConnect","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","name","type","match","err","return","autoConnectOutput","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","registerInputs","registerOutputs","unRegisterInputs","unRegisterOutputs","handleMidiConnectEvent","group","groupEnd","togglePort","port_id","prev","midiOn","this","_this2","_this$state","inputRenderer","outputRenderer","MidiPorts","isSelected","selected","clickHandler","react_switch_default","onChange","checked","height","width","TestSender","messages","requestPreset","customMessage","updateCustomMessage","event","sendCustomMessage","sendSysex","handleMidiInputEvent","produce","draft","renderPort","components_MidiPort","out","sendMessage","components_Midi","onClick","disabled","size","placeholder","JSON","stringify","src_components_DumpSysex","PresetSelector","PresetSelectors","currentPreset","xy","charCodeAt","PresetSelectors_PresetSelector","Control","currentControl","Controls_Control","MidiNote","note","defaultValue","Step","d0","d1","d2","updateCallback","ControlStepsEditor_MidiNote","react","ControlStepsEditor","onStepUpdate","stepIndex","dataType","dataIndex","onUpdate","ControlStepsEditor_Step","presetIndex","controlId","selectPreset","selectControl","controlStepsUpdate","ok","updateMessages","showEditor","msgs","_arr","_i","step","changed","buildControlStepSysex","src_components_PresetSelectors","src_components_Controls","src_components_ControlStepsEditor","m","Monitor","parseMidi","Footer","href","rel","Global","DumpDecoder","onDrop","files","onBusy","readFiles","Promise","all","asyncToGenerator","regenerator_default","mark","_callee","file","wrap","_context","t0","Response","arrayBuffer","t1","sent","stop","_x2","es","MenuLink","label","to","activeOnlyWhenExact","Route","path","exact","children","Link","App","busy","HashRouter","App_MenuLink","Switch","render","src_pages_Home","pages_Presets","pages_Global","pages_Monitor","src_pages_DumpDecoder","src_pages_TestSender","src_components_Footer","Boolean","window","location","hostname","noop","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yeA0BeA,0LAjBP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEXH,EAAAC,EAAAC,cAAA,0BAEAF,EAAAC,EAAAC,cAAA,yBAEAF,EAAAC,EAAAC,cAAA,mBAEAF,EAAAC,EAAAC,cAAA,yBAdGE,6BCaNC,EAAI,SAAAC,GACb,OAAc,OAANA,QAAoBC,IAAND,EAAmB,GATtB,SAACE,EAAKC,EAAKC,GAI9B,IAHA,IAAIC,EAAI,GACJC,EAAIF,GAAQ,IACZG,GAAKJ,GAAO,GAAKD,EAAIM,OAClBH,EAAEG,OAASD,GAAGF,GAAKC,EAC1B,OAAOD,EAAIH,EAImCO,CAAQT,EAAEU,SAAS,IAAIC,cAAe,IAG3EC,EAAK,SAAAC,GAAI,OAAc,OAATA,QAA0BZ,IAATY,EAAsB,GAAMC,MAAMC,KAAKF,GAAMG,IAAI,SAAAT,GAAC,OAAIR,EAAEQ,KAAKU,KAAK,MASjGC,EAAgB,SAASC,EAAQC,GAC1C,IAAIf,EAAIe,EAAMD,EAAOE,QAAQD,EAAK,IAAMD,EACxC,GAAKd,EAAEG,OAAS,EAAK,EACjB,OAAO,KAEX,GAAiB,IAAbH,EAAEG,OAAc,OAAO,KAE3B,IADA,IAAIb,EAAI,IAAI2B,WAAWjB,EAAEG,OAAS,GACzBe,EAAE,EAAGA,EAAKlB,EAAEG,OAAS,EAAIe,IAC9B5B,EAAE4B,GAAKC,SAASnB,EAAEoB,OAAW,EAAJF,EAAO,GAAI,IAExC,OAAO5B,GCvCE+B,EAAe,CAAC,KAEhBC,EAAkB,CAAC,EAAM,EAAM,KAErC,SAASC,EAASC,GACrB,OAAc,OAAVA,QAA4B5B,IAAV4B,GAAwC,IAAjBA,EAAMrB,OAAqB,IAEjE,IADGc,WAAWP,KAAKc,GAAOC,OAAO,SAACC,EAAeC,GAAhB,OAAiCD,EAAgBC,IACrE,IAiBjB,SAASC,EAAiBC,EAAOC,GACpC,IAAIC,EAAM,CAAC,EAAM,EAAMF,EAAOC,GAC1BE,EAAKT,EAASQ,GAElB,OADAA,EAAIE,KAAKD,GACFX,EAAaa,OAAOH,GAUxB,IA4BMI,GAAOC,EAAA,GAAAC,OAAAC,EAAA,EAAAD,CAAAD,EAJS,EAKR,UADDC,OAAAC,EAAA,EAAAD,CAAAD,EAHS,EAKR,UAFDC,OAAAC,EAAA,EAAAD,CAAAD,EAFS,EAKR,eAHDA,GASPG,EAAW,CACpBC,EAAM,OACNC,GAAM,IACNC,GAAM,IACNC,GAAM,IACNC,GAAM,IACNC,GAAM,IACNC,GAAM,IACNC,GAAM,WACNC,GAAM,IACNC,GAAM,IACNC,GAAM,IACNC,GAAM,IACNC,GAAM,OACNC,GAAM,OACNC,GAAM,OACNC,GAAM,OACNC,GAAM,QACNC,GAAM,QACNC,IAAM,qBACNC,IAAM,OA4BGC,EAAoB,CAAC,GAAM,GAAM,GAAM,IACvCC,EAAuB,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,IACtDC,EAAe,CAAC,GAAM,GAAM,GAAM,IAClCC,EAAY,CAAC,GAAM,IA2CnBC,GAASC,EAAA,GAAA5B,OAAAC,EAAA,EAAAD,CAAA4B,EApCO,EAsCR,MAFC5B,OAAAC,EAAA,EAAAD,CAAA4B,EAnCM,EAsCR,UAHE5B,OAAAC,EAAA,EAAAD,CAAA4B,EAlCM,EAsCR,UAJE5B,OAAAC,EAAA,EAAAD,CAAA4B,EAjCM,EAsCR,SALE5B,OAAAC,EAAA,EAAAD,CAAA4B,EAhCO,EAsCR,WANC5B,OAAAC,EAAA,EAAAD,CAAA4B,EA/BK,IAsCR,YAPG5B,OAAAC,EAAA,EAAAD,CAAA4B,EA9BM,GAsCR,YARE5B,OAAAC,EAAA,EAAAD,CAAA4B,EA5Ba,GAsCR,aAVL5B,OAAAC,EAAA,EAAAD,CAAA4B,EA3BO,GAsCR,MAXC5B,OAAAC,EAAA,EAAAD,CAAA4B,EA1BY,GAsCR,WAZJ5B,OAAAC,EAAA,EAAAD,CAAA4B,EAzBK,GAsCR,QAbG5B,OAAAC,EAAA,EAAAD,CAAA4B,EAxBW,GAsCR,eAdH5B,OAAAC,EAAA,EAAAD,CAAA4B,EAvBQ,GAsCR,YAfA5B,OAAAC,EAAA,EAAAD,CAAA4B,EAtBS,GAsCR,YAhBD5B,OAAAC,EAAA,EAAAD,CAAA4B,EArBW,GAsCR,eAjBH5B,OAAAC,EAAA,EAAAD,CAAA4B,EApBS,GAsCR,aAlBD5B,OAAAC,EAAA,EAAAD,CAAA4B,EAnBI,GAsCR,OAnBI5B,OAAAC,EAAA,EAAAD,CAAA4B,EAlBM,GAsCR,SApBE5B,OAAAC,EAAA,EAAAD,CAAA4B,EAjBa,GAsCR,iBArBL5B,OAAAC,EAAA,EAAAD,CAAA4B,EAhBa,GAsCR,kBAtBL5B,OAAAC,EAAA,EAAAD,CAAA4B,EAfW,GAsCR,eAvBH5B,OAAAC,EAAA,EAAAD,CAAA4B,EAdW,IAsCR,gBAxBH5B,OAAAC,EAAA,EAAAD,CAAA4B,EAZI,GAsCR,MA1BI5B,OAAAC,EAAA,EAAAD,CAAA4B,EAXY,GAsCR,UA3BJ5B,OAAAC,EAAA,EAAAD,CAAA4B,EAVO,GAsCR,UA5BC5B,OAAAC,EAAA,EAAAD,CAAA4B,EATO,GAsCR,UA7BC5B,OAAAC,EAAA,EAAAD,CAAA4B,EARO,GAsCR,SA9BC5B,OAAAC,EAAA,EAAAD,CAAA4B,EAPQ,GAsCR,WA/BA5B,OAAAC,EAAA,EAAAD,CAAA4B,EANS,GAsCR,OAhCD5B,OAAAC,EAAA,EAAAD,CAAA4B,EALc,GAsCR,cAjCN5B,OAAAC,EAAA,EAAAD,CAAA4B,EAJY,GAsCR,YAlCJ5B,OAAAC,EAAA,EAAAD,CAAA4B,EAFK,IAsCR,MApCGA,GAwCTC,GAAkBC,EAAA,GAAA9B,OAAAC,EAAA,EAAAD,CAAA8B,EA5EF,EA8ER,WAFU9B,OAAAC,EAAA,EAAAD,CAAA8B,EA3EH,EA8ER,oBAHW9B,OAAAC,EAAA,EAAAD,CAAA8B,EA1EH,EA8ER,kBAJW9B,OAAAC,EAAA,EAAAD,CAAA8B,EAzEH,EA8ER,cALW9B,OAAAC,EAAA,EAAAD,CAAA8B,EAxEF,EA8ER,WANU9B,OAAAC,EAAA,EAAAD,CAAA8B,EAvEJ,IA8ER,YAPY9B,OAAAC,EAAA,EAAAD,CAAA8B,EAtEH,GA8ER,YARW9B,OAAAC,EAAA,EAAAD,CAAA8B,EApEI,GA8ER,kBAVI9B,OAAAC,EAAA,EAAAD,CAAA8B,EAnEF,GA8ER,MAXU9B,OAAAC,EAAA,EAAAD,CAAA8B,EAlEG,GA8ER,WAZK9B,OAAAC,EAAA,EAAAD,CAAA8B,EAjEJ,GA8ER,aAbY9B,OAAAC,EAAA,EAAAD,CAAA8B,EAhEE,GA8ER,oBAdM9B,OAAAC,EAAA,EAAAD,CAAA8B,EA/DD,GA8ER,YAfS9B,OAAAC,EAAA,EAAAD,CAAA8B,EA9DA,GA8ER,YAhBQ9B,OAAAC,EAAA,EAAAD,CAAA8B,EA7DE,GA8ER,oBAjBM9B,OAAAC,EAAA,EAAAD,CAAA8B,EA5DA,GA8ER,kBAlBQ9B,OAAAC,EAAA,EAAAD,CAAA8B,EA3DL,GA8ER,OAnBa9B,OAAAC,EAAA,EAAAD,CAAA8B,EA1DH,GA8ER,SApBW9B,OAAAC,EAAA,EAAAD,CAAA8B,EAzDI,GA8ER,iBArBI9B,OAAAC,EAAA,EAAAD,CAAA8B,EAxDI,GA8ER,kBAtBI9B,OAAAC,EAAA,EAAAD,CAAA8B,EAvDE,GA8ER,eAvBM9B,OAAAC,EAAA,EAAAD,CAAA8B,EAtDE,IA8ER,gBAxBM9B,OAAAC,EAAA,EAAAD,CAAA8B,EApDL,GA8ER,MA1Ba9B,OAAAC,EAAA,EAAAD,CAAA8B,EAnDG,GA8ER,UA3BK9B,OAAAC,EAAA,EAAAD,CAAA8B,EAlDF,GA8ER,oBA5BU9B,OAAAC,EAAA,EAAAD,CAAA8B,EAjDF,GA8ER,kBA7BU9B,OAAAC,EAAA,EAAAD,CAAA8B,EAhDF,GA8ER,cA9BU9B,OAAAC,EAAA,EAAAD,CAAA8B,EA/CD,GA8ER,WA/BS9B,OAAAC,EAAA,EAAAD,CAAA8B,EA9CA,GA8ER,OAhCQ9B,OAAAC,EAAA,EAAAD,CAAA8B,EA7CK,GA8ER,cAjCG9B,OAAAC,EAAA,EAAAD,CAAA8B,EA5CG,GA8ER,YAlCK9B,OAAAC,EAAA,EAAAD,CAAA8B,EA1CJ,IA8ER,MApCYA,GC/MlBC,EAAc,IACdC,EAAY,IAGnBC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EAQZ,SAASC,EAASC,GACd,OAAQA,GAAwB,kBAATA,IAAsBnE,MAAMoE,QAAQD,GASxD,SAASE,EAAUC,GAAoB,QAAAC,EAAAC,UAAA9E,OAAT+E,EAAS,IAAAzE,MAAAuE,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAATD,EAASC,EAAA,GAAAF,UAAAE,GAC1C,IAAKD,EAAQ/E,OAAQ,OAAO4E,EAC5B,IAAMK,EAASF,EAAQG,QAEvB,GAAIV,EAASI,IAAWJ,EAASS,GAC7B,IAAK,IAAME,KAAOF,EACVT,EAASS,EAAOE,KACXP,EAAOO,IAAMjD,OAAOkD,OAAOR,EAAd1C,OAAAC,EAAA,EAAAD,CAAA,GAAyBiD,EAAM,KACjDR,EAAUC,EAAOO,GAAMF,EAAOE,KAE9BjD,OAAOkD,OAAOR,EAAd1C,OAAAC,EAAA,EAAAD,CAAA,GAAyBiD,EAAMF,EAAOE,KAKlD,OAAOR,EAASU,WAAT,GAAUT,GAAV7C,OAAqBgD,IAOhC,SAASO,EAAYjF,GAIjB,OAAIA,EAAK,KAAO4D,GACZ5D,EAAKA,EAAKkF,WAAa,KAAOrB,EA+DtC,SAASsB,EAAkBnF,GAMvB,IAqCIoF,EArCEC,EAAU,GAEZC,EAAMtF,EAAK8D,GACXyB,EAAMvF,EAAK+D,GACXyB,EAAMxF,EAAKgE,GACX1C,EAAMtB,EAAKiE,GAEf,OAAQqB,GACJ,KAAK,EAGL,KAAK,EAED,MACJ,QAEI,OADAG,QAAQC,KAAR,uCAAAhE,OAAoDxC,EAAEoG,GAAtD,MACO,KAGf,KAAMC,KAAO5D,GAET,OADA8D,QAAQC,KAAK,oCAAqCxG,EAAEqG,GAAMA,EAAK5D,GACxD,KAWX,GARA0D,EAAQE,GAAO,GAEXC,GAAO,IAAQA,GAAO,KACtBC,QAAQC,KAAK,yCAA0CF,GAG3DH,EAAQE,GAAKC,GAAO,KAEdlE,KAAOS,GAET,OADA0D,QAAQC,KAAK,4CAA6CxG,EAAEoC,IACrD,KAIX,GAAY,IAARA,EACA8D,EAAW,YACR,GAAK9D,GAAO,IAAQA,GAAO,IAC7BA,GAAO,IAAQA,GAAO,IACtBA,GAAO,IAAQA,GAAO,GACvB8D,EAAW,cACR,IAAY,MAAR9D,EAIP,OADAmE,QAAQC,KAAK,iCAAkCpE,GACxC,KAHP8D,EAAW,OAaf,GANAK,QAAQE,IAAR,GAAAjE,OAAeC,EAAQ4D,GAAvB,KAAA7D,OAA+BxC,EAAEsG,GAAjC,OAAA9D,OAA2CK,EAAST,GAApD,KAAAI,OAA4D0D,IAM3C,YAAbA,EAAwB,CAExBC,EAAQE,GAAKC,GAAb,SAAA3D,OAAAC,EAAA,EAAAD,CAAA,GACKP,EAAM,CACHsE,MAAO,KAKf,IAAIC,EAAI7F,EAAKkE,GACb,GAAI2B,GAAK,GAAQA,GAAK,GAGlB,GAAI7F,EAAKL,OAASuE,EAAI,GAAI,CACtB,IAAI1E,EAnIpB,SAAwBQ,GAepB,MAAO,CACHqB,OAAQrB,EAAK,GAAK,GAAK,EAAI,EAC3B8F,OAAQ,CACJC,QAAS/F,EAAK,GACdgG,SAAUhG,EAAK,GACfA,KAAM,CAACA,EAAK,IAAKA,EAAK,IAAKA,EAAK,KAChCiG,OAAQjG,EAAK,MA8GDkG,CAAelG,EAAKmG,MAAMjC,EAAKA,EAAM,KAC7CmB,EAAQE,GAAKC,GAAb,SAA8BlE,GAA9B,MAA4C9B,EAAE6B,OAAS7B,EAAEsG,YAEzDL,QAAQC,KAAR,gEAAAhE,OAA6E1B,EAAKL,QAAUI,EAAGC,SAGhG,GAAU,KAAN6F,EAGPJ,QAAQE,IAAI,wCAET,GAAU,KAANE,EAGPJ,QAAQE,IAAI,yCAGT,GAAIE,GAAK,IAAQA,GAAK,GAGzBJ,QAAQW,MAAM,0BACdf,EAAQE,GAAKC,GAAb,SAA8BlE,GAA9B,IA7HZ,SAAuBtB,GAanB,MAAO,CACHqG,KAAMrG,EAAK,GACXsG,SAAUtG,EAAK,GACfuG,UAAWvG,EAAK,KA6GgCwG,CAAcxG,EAAKmG,MAAMjC,EAAKA,EAAM,QAE7E,IAAU,MAAN2B,EAOP,OADAJ,QAAQC,KAAR,uCAAAhE,OAAoDxC,EAAE2G,KAC/C,KAJPJ,QAAQE,IAAI,2BAepB,OAAON,EAUX,SAASoB,EAAezG,GAIpB,GAFAyF,QAAQE,IAAI,iBAAkB5F,EAAGC,IAEpB,OAATA,EAAe,OAAO,KAW1B,IARA,IAAI0G,EAAI1G,EACJ2G,EAAU,GAKVjG,EAAI,KAIJA,EAAIgG,EAAEE,QAAQhD,EAAalD,IACnB,IAHC,CAKTA,IAEA,IAAImG,EAAIH,EAAEE,QAAQ/C,EAAWnD,GAEzBoG,EAAmB7G,MAAMC,KAAKwG,EAAEP,MAAMzF,EAAGA,EAAE,IAAIP,IAAI,SAAAT,GAAC,OAAIR,EAAEQ,KAAKU,KAAK,KACxE,GAAI0G,IAAoBC,wBAEpB,OADAtB,QAAQE,IAAI,6DAA8DjF,EAAGmG,EAAGC,EAAiB,IAAK/G,EAAG2G,IAClG,KAGX,GAAe,MAAXA,EAAEhG,EAAE,GAEJ,OADA+E,QAAQC,KAAR,uDAAAhE,OAAoEgF,EAAEhG,EAAE,EAAG,KACpE,KAGX,IAAIoF,EAASX,EAAkBuB,EAAEP,MAAMzF,EAAGmG,IAEtCf,GACAxB,EAAUqC,EAASb,GAO3B,OAAOa,sBCnSX,SAASK,EAASC,GACd,IAAIC,EAAIC,IAAQC,OAAOC,KAAK,SAAAjD,GAAI,OAAIA,EAAK6C,KAAOA,IAChD,OAAIC,GAGOC,IAAQG,QAAQD,KAAK,SAAAjD,GAAI,OAAIA,EAAK6C,KAAOA,IAiBxD,SAASM,EAAWN,GAChB,OAAOE,IAAQG,QAAQD,KAAK,SAAAjD,GAAI,OAAIA,EAAK6C,KAAOA,uCCY9CO,GAAQ,SAAAC,GACV,OAAc,OADWA,EAAZC,MACc,KAEvB7I,EAAAC,EAAAC,cAAA,aAiCF4I,GAAe,SAAAC,GAAqB,IAAlBtG,EAAkBsG,EAAlBtG,IAAKwE,EAAa8B,EAAb9B,OACzB,OAAe,OAAXA,QAA8B1G,IAAX0G,EAA6B,KAEhDjH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAI8I,QAAS,EAAG7I,UAAU,QAAQ+C,EAAST,KAE9CO,OAAOiG,KAAKhC,EAAM,OAAW3F,IAAI,SAAAO,GAAC,OAC/B7B,EAAAC,EAAAC,cAAA,MAAI+F,IAAG,GAAApD,OAAKJ,EAAL,KAAAI,OAAYhB,IACf7B,EAAAC,EAAAC,cAAA,kBAAU2B,GACV7B,EAAAC,EAAAC,cAAA,iBAASG,EAAE4G,EAAM,MAAUpF,GAAhB,UACX7B,EAAAC,EAAAC,cAAA,iBAASG,EAAE4G,EAAM,MAAUpF,GAAhB,WACX7B,EAAAC,EAAAC,cAAA,UAAKyE,EAAUsC,EAAM,MAAUpF,GAAhB,WACf7B,EAAAC,EAAAC,cAAA,UAAKgB,EAAG+F,EAAM,MAAUpF,GAAhB,OACR7B,EAAAC,EAAAC,cAAA,UHwDD,KGxDM+G,EAAM,MAAUpF,GAAhB,SAAiDqH,KAAcjC,EAAM,MAAUpF,GAAhB,KAA2B,IAAI,GAAQ,MAC3G7B,EAAAC,EAAAC,cAAA,oBAAY+G,EAAM,MAAUpF,GAAhB,eASlCsH,GAAW,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAChB,OAAiB,OAAbA,QAAkC9I,IAAb8I,EAA+B,KAEpDrJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACV6C,OAAOiG,KAAKI,GAAU/H,IAAI,SAAAmB,GAAG,OAAIzC,EAAAC,EAAAC,cAACoJ,GAAD,CAAcrD,IAAKxD,EAAKA,IAAKA,EAAKwE,OAAQoC,EAAS5G,SAK3F8G,GAAS,SAAAC,GAAqB,IAAlBhH,EAAkBgH,EAAlBhH,MAAOrB,EAAWqI,EAAXrI,KACrB,OAAa,OAATA,QAA0BZ,IAATY,EAA2B,KAE5CnB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBHzEmB,SAAAsC,GAC3B,GAAc,IAAVA,EAAa,MAAO,MAExB,IAAIiH,EAAIC,KAAKC,OAAOnH,EAAQ,GAAK,GAC7BX,GAAKW,EAAQ,GAAK,EAAI,EAC1B,OAAOoH,OAAOC,aAAaJ,EAAI,IAAM5H,EAAEb,WGoEnB8I,CAAgBhI,SAASU,EAAO,KAA5C,MAAqDA,EAArD,KACAxC,EAAAC,EAAAC,cAAC6J,GAAD,CAAUV,SAAUlI,EAAI,WACxBnB,EAAAC,EAAAC,cAAC8J,GAAD,CAAOX,SAAUlI,EAAI,aAO3B8I,GAAU,SAAAC,GAAiB,IAAdpC,EAAcoC,EAAdpC,QACf,OAAgB,OAAZA,QAAgCvH,IAAZuH,EAA8B,KAElD9H,EAAAC,EAAAC,cAAA,WACK8C,OAAOiG,KAAKnB,GAASxG,IAAI,SAAAqF,GAAG,OAAI3G,EAAAC,EAAAC,cAACiK,GAAD,CAAQlE,IAAKU,EAAKnE,MAAOmE,EAAKxF,KAAM2G,EAAQnB,SAsB1EyD,GAjBG,SAAAC,GAAc,IAAXlJ,EAAWkJ,EAAXlJ,KACjB,OACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAGPgB,GAAQnB,EAAAC,EAAAC,cAACoK,GAAD,CAASxC,QAAS3G,EHxEb,OIyLdoJ,8MA3OXC,MAAQ,CACJjC,OAAQ,GACRE,QAAS,GACTgC,MAAO,KACPC,OAAQ,QAGZC,aAAe,SAAAC,GACPA,IACIA,EAAKC,YAAY,cAAe,MAAOC,EAAKC,MAAMC,kBAClDpE,QAAQC,KAAR,iFAEAD,QAAQE,IAAR,sEACA8D,EAAKK,YAAY,cAAe,MAAOH,EAAKC,MAAMC,uBAK9DE,gBAAkB,SAAAN,GACVA,IACAA,EAAKO,iBACLvE,QAAQE,IAAR,0BAAAjE,OAAsC+H,EAAKxC,GAA3C,sBAIRgD,cAAgB,SAAAR,GACRA,IACAE,EAAKO,SAAS,CAACX,OAAQE,EAAKxC,KAC5BxB,QAAQE,IAAR,wBAAAjE,OAAoC+H,EAAKxC,GAAzC,eACI0C,EAAKC,MAAMO,WACXR,EAAKC,MAAMO,UAAUV,EAAKxC,QAKtCmD,iBAAmB,WAEXT,EAAKO,SAAS,CAACX,OAAQ,OACvB9D,QAAQE,IAAR,wCACIgE,EAAKC,MAAMO,WACXR,EAAKC,MAAMO,UAAU,SAKjCE,iBAAmB,WAEf,GAAIV,EAAKC,MAAMU,YAIX,GAFA7E,QAAQE,IAAR,sCAAAjE,OAAkDiI,EAAKC,MAAMU,aAAeX,EAAKN,MAAMjC,QAE9D,OAArBuC,EAAKN,MAAMC,MAAgB,KAAAiB,GAAA,EAAAC,GAAA,EAAAC,OAAArL,EAAA,IAE3B,QAAAsL,EAAAC,EAAiBhB,EAAKN,MAAMjC,OAA5BwD,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAoC,KAA3Bd,EAA2BiB,EAAAM,MAIhC,GAFAvF,QAAQE,IAAR,+BAAAjE,OAA2C+H,EAAKwB,KAAhD,KAAAvJ,OAAwD+H,EAAKxC,KAE3C,UAAdwC,EAAKyB,MAAoBzB,EAAKwB,KAAKE,MAAMxB,EAAKC,MAAMU,aAAc,CAElE7E,QAAQE,IAAR,kCAAAjE,OAA8C+H,EAAKwB,OAEnDtB,EAAKO,SAAS,CAACZ,MAAOG,EAAKxC,KAE3B0C,EAAKH,aAAaC,GAQlB,QApBmB,MAAA2B,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAI,EAAAU,QAAAV,EAAAU,SAAA,WAAAb,EAAA,MAAAC,SAyB3BhF,QAAQE,IAAR,oEAKZ2F,kBAAoB,WAEhB,GAAI3B,EAAKC,MAAMU,YAIX,GAFA7E,QAAQE,IAAR,uCAAAjE,OAAmDiI,EAAKC,MAAMU,cAEpC,OAAtBX,EAAKN,MAAME,OAAiB,KAAAgC,GAAA,EAAAC,GAAA,EAAAC,OAAArM,EAAA,IAE5B,QAAAsM,EAAAC,EAAiBhC,EAAKN,MAAM/B,QAA5BsD,OAAAC,cAAAU,GAAAG,EAAAC,EAAAb,QAAAC,MAAAQ,GAAA,EAAqC,KAA5B9B,EAA4BiC,EAAAV,MAIjC,GAFAvF,QAAQE,IAAR,gCAAAjE,OAA4C+H,EAAKwB,KAAjD,KAAAvJ,OAAyD+H,EAAKxC,KAE5C,WAAdwC,EAAKyB,MAAqBzB,EAAKwB,KAAKE,MAAMxB,EAAKC,MAAMU,aAAc,CAEnE7E,QAAQE,IAAR,qDAAAjE,OAAiE+H,EAAKwB,OAGtEtB,EAAKM,cAAcR,GAEnB,QAboB,MAAA2B,GAAAI,GAAA,EAAAC,EAAAL,EAAA,YAAAG,GAAA,MAAAI,EAAAN,QAAAM,EAAAN,SAAA,WAAAG,EAAA,MAAAC,SAkB5BhG,QAAQE,IAAR,qEAKZiG,eAAiB,WACbnG,QAAQE,IAAI,uBACZgE,EAAKO,SAAS,CAAE9C,OAAQD,UAAkB,kBAAMwC,EAAKU,wBAGzDwB,gBAAkB,WACdpG,QAAQE,IAAI,wBACZgE,EAAKO,SAAS,CAAE5C,QAASH,WAAmB,kBAAMwC,EAAK2B,yBAG3DQ,iBAAmB,WACfrG,QAAQE,IAAI,uBACZgE,EAAKI,gBAAgB/C,EAAS2C,EAAKN,MAAMC,QACzCK,EAAKO,SAAS,CAAE9C,OAAQ,GAAIkC,MAAO,UAGvCyC,kBAAoB,WAChBtG,QAAQE,IAAI,wBACZgE,EAAKO,SAAS,CAAE5C,QAAS,GAAIiC,OAAQ,UAGzCyC,uBAAyB,SAAAnG,GAErBJ,QAAQwG,MAAR,iCAAAvK,OAA+CmE,EAAE4D,KAAKyB,KAAtD,KAAAxJ,OAA8DmE,EAAEqF,KAAhE,MAAAxJ,OAAyEmE,EAAE4D,KAAKwB,MAAQpF,GAUpE,UAAhBA,EAAE4D,KAAKyB,OAEPzF,QAAQE,IAAI,6BACZgE,EAAKiC,kBAGW,WAAhB/F,EAAE4D,KAAKyB,OACPzF,QAAQE,IAAI,8BACZgE,EAAKkC,mBAKTpG,QAAQyG,cAIZC,WAAa,SAACC,GACV,IFnKWnF,EEoKX,GAAe,UADPD,EAASoF,GACXlB,KAAkB,CACpBzF,QAAQE,IAAI,gBACZ,IAAI0G,EAAO1C,EAAKN,MAAMC,MAClBK,EAAKN,MAAMC,OACXK,EAAKI,gBAAgB/C,EAAS2C,EAAKN,MAAMC,QAGzC8C,IAAYC,GACZ1C,EAAKH,cF5KFvC,EE4KyBmF,EF3KjCjF,IAAQC,OAAOC,KAAK,SAAAjD,GAAI,OAAIA,EAAK6C,KAAOA,ME8KvC0C,EAAKO,SAAS,CAAEZ,MAAO8C,IAAYC,EAAO,KAAOD,SAEjD3G,QAAQE,IAAI,iBAGZgE,EAAKO,SAAS,CAAEX,OAAQ6C,IAAYzC,EAAKN,MAAME,OAAS,KAAO6C,OAIvEE,OAAS,SAAAlB,GACDA,EACA3F,QAAQC,KAAK,6CAA8C0F,IAE3D3F,QAAQE,IAAI,gCACZwB,cAAoB,YAAawC,EAAKqC,wBACtC7E,cAAoB,eAAgBwC,EAAKqC,6GAkB7CvG,QAAQE,IAAR,8CAAAjE,OAA0DyF,YACtDA,WACA1B,QAAQE,IAAR,8DACA4G,KAAKX,iBACLW,KAAKV,oBAELpG,QAAQE,IAAI,qDACZwB,SAAeoF,KAAKD,QAAQ,mDAKhC7G,QAAQE,IAAI,kDACZ4G,KAAKT,mBACLS,KAAKR,qDAGA,IAAAS,EAAAD,KAAAE,EACmBF,KAAKlD,MAAxBjC,EADAqF,EACArF,OAAQE,EADRmF,EACQnF,QACb,OACIzI,EAAAC,EAAAC,cAAA,OAAKC,UAAWuN,KAAK3C,MAAM5K,WACtBoI,EAAOjH,IAAI,SAAAsJ,GAAI,OAAI+C,EAAK5C,MAAM8C,cAAcjD,EAAMA,EAAKxC,KAAOuF,EAAKnD,MAAMC,MAAOkD,EAAKL,cACrF7E,EAAQnH,IAAI,SAAAsJ,GAAI,OAAI+C,EAAK5C,MAAM+C,eAAelD,EAAMA,EAAKxC,KAAOuF,EAAKnD,MAAME,OAAQiD,EAAKL,sBAxOtFlN,yCC+CJ2N,oLAhDP,IAAInD,EAAO8C,KAAK3C,MAAMH,KAClBoD,EAAaN,KAAK3C,MAAMkD,SACxBC,EAAeR,KAAK3C,MAAMmD,aAK9B,OAHAtH,QAAQE,IAAI,kBAAmB8D,EAAKyB,KAAMzB,EAAKwB,KAAM4B,GAIjDhO,EAAAC,EAAAC,cAAA,OAAK+F,IAAK2E,EAAKxC,GAAIjI,UAAW6N,EAAU,QAAAnL,OAAW+H,EAAKyB,KAAhB,oBAAAxJ,OAAyC+H,EAAKyB,OAClFrM,EAAAC,EAAAC,cAAA,OAAKC,UAAW,oBACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAsB,UAAdyK,EAAKyB,KAAmB,KAAO,MAAvD,MACArM,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAayK,EAAKwB,KAAlC,KACApM,EAAAC,EAAAC,cAACiO,GAAAlO,EAAD,CACImO,SAAU,kBAAMF,EAAatD,EAAKxC,KAClCiG,QAASL,EACT7N,UAAU,eACViI,GAAG,gBACHkG,OAAQ,GAAIC,MAAO,cArBnBnO,aCuJToO,8MA7IXhE,MAAQ,CACJE,OAAQ,KACRvJ,KAAM,KACNsN,SAAU,CNFX,SAAuBjM,GAC1B,IAAIE,EAAM,CAAC,EAAM,EAAMF,GACnBG,EAAKT,EAASQ,GAElB,OADAA,EAAIE,KAAKD,GACFX,EAAaa,OAAOH,GMDnBgM,CAAc,GACdnM,EAAiB,EAAG,KAExBoM,cAAe,GACfzM,SAAU,QAGd0M,oBAAsB,SAACC,GAGnB,IAFA,IAAIlO,GAAKkO,EAAMnJ,OAAOyG,MAAMG,MAAM,kBAAoB,IAAI/K,KAAK,IAC3DlB,EAAI,GACCwB,EAAE,EAAGA,EAAElB,EAAEG,OAAQe,IACjBA,EAAI,GAAOA,EAAI,IAAM,IAAIxB,GAAK,KACnCA,GAAKM,EAAEkB,GAEXiJ,EAAKO,SAAS,CACVsD,cAAetO,EACfsC,GAAIT,EAASV,EAAcnB,EAAG,YAItCyO,kBAAoB,WAChB,IAAI3N,EAAOK,EAAcsJ,EAAKN,MAAMmE,cAAe,MAC/CxN,GAAQA,EAAKL,OAAS,GAAGgK,EAAKiE,UAAU5N,MAGhD6N,qBAAuB,SAACH,GACpBjI,QAAQE,IAAI,kCAAmC+H,EAAOA,EAAM1N,MAExDiF,EAAYyI,EAAM1N,OAClByF,QAAQE,IAAI,iDACZgE,EAAKO,SACD4D,YAAQ,SAAAC,GACJA,EAAM/N,KAAOsE,EAAUyJ,EAAM/N,MAAQ,GAAIyG,EAAeiH,EAAM1N,WAKtEyF,QAAQE,IAAI,0CAKpBqI,WAAa,SAACvE,EAAMqD,EAAUC,GAC1B,YAAa3N,IAATqK,GAA+B,OAATA,EAAsB,KAE5C5K,EAAAC,EAAAC,cAACkP,GAAD,CAAUnJ,IAAK2E,EAAKxC,GAAIwC,KAAMA,EAAMqD,SAAUA,EAAUC,aAAcA,OAI9E5C,UAAY,SAACiC,GACT3G,QAAQE,IAAR,kBAAAjE,OAA8B0K,IAC9BzC,EAAKO,SAAS,CAACX,OAAQ6C,OAG3BwB,UAAY,SAAArM,GAER,GADAkE,QAAQE,IAAI,YAAapE,GACpBoI,EAAKN,MAAME,OAAhB,CACA,IAAI2E,EAAM3G,EAAWoC,EAAKN,MAAME,QAC3B2E,EAILvE,EAAKO,SACD,CAAClK,KAAM,MACP,kBAAMkO,EAAIN,UAAU9M,EAAiBS,KALrCkE,QAAQC,KAAR,gBAAAhE,OAA6BiI,EAAKN,MAAME,OAAxC,mBASR4E,YAAc,SAAC5M,GACXoI,EAAKiE,UAAUrM,4EAMV,IAAAiL,EAAAD,KAEL9G,QAAQE,IAAI,oBAAqB4G,KAAK3C,OAFjC,IAAA6C,EAIyCF,KAAKlD,MAA3CrJ,EAJHyM,EAIGzM,KAAMsN,EAJTb,EAISa,SAAUE,EAJnBf,EAImBe,cAAehM,EAJlCiL,EAIkCjL,GAIvC,OAFAiE,QAAQE,IAAI,oBAAqB2H,EAAUE,EAAc7N,OAAS,GAG9Dd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEXH,EAAAC,EAAAC,cAAA,yBAEAF,EAAAC,EAAAC,cAACqP,GAAD,CAAM1B,cAAeH,KAAKyB,WAAYrB,eAAgBJ,KAAKyB,WACrD1D,YAAa,eAAgBT,iBAAkB0C,KAAKsB,qBACpD1D,UAAWoC,KAAKpC,UAChBnL,UAAU,eAEhBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAEXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,WACKuO,EAASnN,IAAI,SAACoB,EAAKb,GAAN,OACV7B,EAAAC,EAAAC,cAAA,OAAK+F,IAAKpE,EAAG1B,UAAU,gBACnBH,EAAAC,EAAAC,cAAA,UAAQsP,QAAS,kBAAM7B,EAAK2B,YAAY5M,KAAxC,QACA1C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAce,EAAGe,GAAjC,KACAjC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQe,EAAGwB,IAC3B1C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,IAA+BE,EAAE6B,EAASQ,SAKtD1C,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,UAAQsP,QAAS9B,KAAKoB,kBAAmBW,SAAmC,IAAzBd,EAAc7N,QAAjE,QACAd,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAce,EAAGe,GAAjC,KACAjC,EAAAC,EAAAC,cAAA,SAAOmM,KAAK,OAAOlM,UAAU,OAAOuP,KAAK,KAAKvD,MAAOwC,EAAegB,YAAa,kBAAmBvB,SAAUV,KAAKkB,sBACnH5O,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,IAA+BE,EAAEsC,MAIzC3C,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACVgB,GAAQyO,KAAKC,UAAU1O,GACxBnB,EAAAC,EAAAC,cAAC4P,GAAD,CAAW3O,KAAMA,OAM7BnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,2BAtIKE,aCRnB2P,UAAiB,SAAAnH,GAAA,IAAGwD,EAAHxD,EAAGwD,KAAMhE,EAATQ,EAASR,GAAI6F,EAAbrF,EAAaqF,SAAUuB,EAAvB5G,EAAuB4G,QAAvB,OACnBxP,EAAAC,EAAAC,cAAA,OAAKC,UAAW8N,EAAW,WAAa,GAAIuB,QAAS,kBAAMA,EAAQpH,KAAMgE,KA8C9D4D,GA5CS,SAAAjH,GAAA,IAAGkH,EAAHlH,EAAGkH,cAAeT,EAAlBzG,EAAkByG,QAAlB,OACpBxP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEX,CAAC,IAAK,IAAK,IAAK,KAAKmB,IACjB,SAAA0F,GACI,OACIhH,EAAAC,EAAAC,cAAA,OAAK+F,IAAKe,GACN5F,MAAMC,KAAKD,MAAM,GAAG6H,QAAQ3H,IACxB,SAAAO,GACI,IPoCDqO,EOpCK9D,EAAOpF,GAAKnF,EAAI,GAChBuG,EPoCrB,SADgB8H,EOnC0B9D,GPoC5B,EAKX,GAFH8D,EAAGC,WAAW,GAAK,IACpBrO,SAASoO,EAAG,GAAI,IOvCE,OAAOlQ,EAAAC,EAAAC,cAACkQ,GAAD,CAAgBhE,KAAMA,EAAMhE,GAAIA,EAAI6F,SAAU7F,IAAO6H,EAAeT,QAASA,EAASvJ,IAAKmC,WCd5HiI,UAAU,SAAAzH,GAAA,IAAGwD,EAAHxD,EAAGwD,KAAMhE,EAATQ,EAASR,GAAI6F,EAAbrF,EAAaqF,SAAUuB,EAAvB5G,EAAuB4G,QAAvB,OACZxP,EAAAC,EAAAC,cAAA,OAAKC,UAAW8N,EAAW,WAAa,GAAIuB,QAAS,kBAAMA,EAAQpH,KAC/DpI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQiM,MA+BhBjD,GA3BE,SAAAJ,GAAA,IAAGuH,EAAHvH,EAAGuH,eAAgBd,EAAnBzG,EAAmByG,QAAnB,OACbxP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEPsE,EAAanD,IACT,SAAA2E,GAAG,OAAIjG,EAAAC,EAAAC,cAACqQ,GAAD,CAAStK,IAAKA,EAAKmG,KAAMlJ,EAAS+C,GAAMmC,GAAInC,EAAKgI,SAAUhI,IAAQqK,EAAgBd,QAASA,MAIvG9K,EAAUpD,IACN,SAAA2E,GAAG,OAAIjG,EAAAC,EAAAC,cAACqQ,GAAD,CAAStK,IAAKA,EAAKmG,KAAMlJ,EAAS+C,GAAMmC,GAAInC,EAAKgI,SAAUhI,IAAQqK,EAAgBd,QAASA,MAG3GxP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,QAEIoE,EAAkBjD,IACd,SAAA2E,GAAG,OAAIjG,EAAAC,EAAAC,cAACqQ,GAAD,CAAStK,IAAKA,EAAKmG,KAAMlJ,EAAS+C,GAAMmC,GAAInC,EAAKgI,SAAUhI,IAAQqK,EAAgBd,QAASA,MAG3GxP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,QAEIqE,EAAqBlD,IACjB,SAAA2E,GAAG,OAAIjG,EAAAC,EAAAC,cAACqQ,GAAD,CAAStK,IAAKA,EAAKmG,KAAMlJ,EAAS+C,GAAMmC,GAAInC,EAAKgI,SAAUhI,IAAQqK,EAAgBd,QAASA,QCzB7GgB,UAAW,SAAA5H,GAAwB,IAArB6H,EAAqB7H,EAArB6H,KAAMrC,EAAexF,EAAfwF,SAEtB,OADAxH,QAAQE,IAAR,YAAAjE,OAAwB4N,UAAeA,GAEnCzQ,EAAAC,EAAAC,cAAA,UAAQkO,SAAU,SAACS,GAAD,OAAWT,EAASS,EAAMnJ,OAAOyG,QAAQuE,aAAcD,GAEjErP,MAAMC,KAAKD,MAAM,KAAK6H,QAAQ3H,IAC1B,SAAAO,GACI,IAAIhB,EAAIqI,KAAcrH,GAAG,GACzB,OAAO7B,EAAAC,EAAAC,cAAA,UAAQ+F,IAAKpE,EAAGsK,MAAOtK,GAAIhB,QAOpD8P,GAAO,SAAA5H,GAAuC,IAE5C6H,EAAIC,EAAIC,EAFAtO,EAAoCuG,EAApCvG,MAAOyE,EAA6B8B,EAA7B9B,OAAQ8J,EAAqBhI,EAArBgI,eAc3B,OT8GuB,KSzHnB9J,EAAOE,UAEPyJ,EAAK5Q,EAAAC,EAAAC,cAAC8Q,GAAD,CAAUP,KAAMxJ,EAAO9F,KAAK,GAAIiN,SAAU,SAACjC,GAAD,OAAW4E,EAAe,OAAQ,EAAG5E,MACpF0E,EAAK7Q,EAAAC,EAAAC,cAAA,SAAOmM,KAAK,OAAOF,MAAOlF,EAAO9F,KAAK,GAAIuO,KAAK,IAAItB,SAAU,SAACS,GAAD,OAAWkC,EAAe,OAAQ,EAAGlC,EAAMnJ,OAAOyG,UACpH2E,EAAK,KAELF,EAAK5Q,EAAAC,EAAAC,cAAA,SAAOmM,KAAK,OAAOF,MAAOlF,EAAO9F,KAAK,GAAIuO,KAAK,IAAItB,SAAU,SAACS,GAAD,OAAWkC,EAAe,OAAQ,EAAGlC,EAAMnJ,OAAOyG,UACpH0E,EAAK7Q,EAAAC,EAAAC,cAAA,SAAOmM,KAAK,OAAOF,MAAOlF,EAAO9F,KAAK,GAAIuO,KAAK,IAAItB,SAAU,SAACS,GAAD,OAAWkC,EAAe,OAAQ,EAAGlC,EAAMnJ,OAAOyG,UACpH2E,EAAK9Q,EAAAC,EAAAC,cAAA,SAAOmM,KAAK,OAAOF,MAAOlF,EAAO9F,KAAK,GAAIuO,KAAK,IAAItB,SAAU,SAACS,GAAD,OAAWkC,EAAe,OAAQ,EAAGlC,EAAMnJ,OAAOyG,WAIpHnM,EAAAC,EAAAC,cAAC+Q,EAAA,SAAD,KACIjR,EAAAC,EAAAC,cAAA,mBAAWsC,EAAX,KACAxC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQkO,SAAU,SAACS,GAAD,OAAWkC,EAAe,WAAY,KAAMlC,EAAMnJ,OAAOyG,QAAQuE,aAAczJ,EAAOE,UAEpGnE,OAAOiG,KAAKpE,GAAoBvD,IAC5B,SAAA2E,GAEI,OAAOjG,EAAAC,EAAAC,cAAA,UAAQ+F,IAAKA,EAAKkG,MAAOlG,GAAMpB,EAAmBoB,QAKzEjG,EAAAC,EAAAC,cAAA,WAAM0Q,GACN5Q,EAAAC,EAAAC,cAAA,WAAM2Q,GACN7Q,EAAAC,EAAAC,cAAA,WAAM4Q,GACN9Q,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQkO,SAAU,SAACS,GAAD,OAAWkC,EAAe,UAAW,KAAMlC,EAAMnJ,OAAOyG,QAAQuE,aAAczJ,EAAOC,SAEnG9F,MAAMC,KAAKD,MAAM,IAAI6H,QAAQ3H,IAAI,SAAAO,GAAC,OAAI7B,EAAAC,EAAAC,cAAA,UAAQ+F,IAAKpE,EAAGsK,MAAOtK,GAAIA,SAmEtEqP,8MArDXC,aAAe,SAACC,EAAWC,EAAUC,EAAWnF,GAC5CvF,QAAQE,IAAR,kCAA+CsK,EAAWE,EAAWnF,GAOrErB,EAAKC,MAAMwG,SAASH,EAAWC,EAAUC,EAAWnF,4EAG/C,IAAAwB,EAAAD,KAOC3G,EAAQ2G,KAAK3C,MAAMhE,MAczB,OAZAH,QAAQE,IAAI,4BAA6BC,GAa7B/G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,2BACC8C,OAAOiG,KAAKlC,GAAOzF,IAAI,SAAAO,GAAC,OACrB7B,EAAAC,EAAAC,cAACsR,GAAD,CAAMvL,IAAKpE,EAAGW,MAAOX,EAAGoF,OAAQF,EAAMlF,GAAIkP,eAAgB,SAACM,EAAUC,EAAWnF,GAAtB,OAAgCwB,EAAKwD,aAAatP,EAAGwP,EAAUC,EAAWnF,gBA/C/H/L,aCwKlB6J,8MAzNXO,MAAQ,CACJE,OAAQ,KACR+G,YAAa,GACbC,UAAW,GACXvQ,KAAM,QAGVwQ,aAAe,SAACvJ,GACZxB,QAAQE,IAAR,gBAAAjE,OAA4BuF,IAC5B0C,EAAKO,SAAS,CACVoG,YAAarJ,IAEbA,GAAM0C,EAAKN,MAAMkH,WACjB5G,EAAKiE,UAAUxM,EAAiB6F,EAAI0C,EAAKN,MAAMkH,eAIvDE,cAAgB,SAACxJ,GACbxB,QAAQE,IAAR,iBAAAjE,OAA6BuF,IACnB7F,EAAiBuI,EAAKN,MAAMiH,YAAarJ,GACnD0C,EAAKO,SAAS,CACVqG,UAAWtJ,IAEX0C,EAAKN,MAAMiH,aAAerJ,GAC1B0C,EAAKiE,UAAUxM,EAAiBuI,EAAKN,MAAMiH,YAAarJ,OAOhEyJ,mBAAqB,SAACH,EAAWN,EAAWC,EAAUC,EAAWnF,GAC7DvF,QAAQE,IAAI,6BAA8B4K,EAAWN,EAAWE,EAAWnF,GAC3ErB,EAAKO,SACD4D,YAAQ,SAAAC,GACa,SAAbmC,EACAnC,EAAM/N,KAAK,GAAK+N,EAAMuC,aAAtB,SAA+CC,GAA/C,MAAmEN,GAAnE,KAAsFE,GAAaxP,SAASqK,EAAO,IAEnH+C,EAAM/N,KAAK,GAAK+N,EAAMuC,aAAtB,SAA+CC,GAA/C,MAAmEN,GAAWC,GAAYvP,SAASqK,EAAO,IAE9G+C,EAAM/N,KAAK,GAAK+N,EAAMuC,aAAtB,SAA+CC,GAA/C,MAAmEN,GAAnE,SAA2F,QAMvGrC,UAAY,SAAArM,GACRkE,QAAQE,IAAI,YAAapE,GACrBoI,EAAKN,MAAME,QACXI,EAAKO,SACD,CAAClK,KAAM,MACP,kBAAMuH,EAAWoC,EAAKN,MAAME,QAAQqE,UAAU9M,EAAiBS,QAK3EsM,qBAAuB,SAACH,GACpBjI,QAAQE,IAAI,+BAAgC+H,EAAOA,EAAM1N,MAErDiF,EAAYyI,EAAM1N,MAClB2J,EAAKO,SACD4D,YAAQ,SAAAC,GACJA,EAAM/N,KAAOsE,EAAUyJ,EAAM/N,MAAQ,GAAIyG,EAAeiH,EAAM1N,UAKtEyF,QAAQE,IAAI,0CAKpBqI,WAAa,SAACvE,EAAMqD,EAAUC,GAC1B,YAAa3N,IAATqK,GAA+B,OAATA,EAAsB,KAE5C5K,EAAAC,EAAAC,cAACkP,GAAD,CAAUnJ,IAAK2E,EAAKxC,GAAIwC,KAAMA,EAAMqD,SAAUA,EAAUC,aAAcA,OAI9E5C,UAAY,SAACiC,GACT3G,QAAQE,IAAR,kBAAAjE,OAA8B0K,IAC9BzC,EAAKO,SAAS,CAACX,OAAQ6C,OAG3BwB,UAAY,SAAArM,GAER,GADAkE,QAAQE,IAAI,YAAapE,GACpBoI,EAAKN,MAAME,OAAhB,CACA,IAAI2E,EAAM3G,EAAWoC,EAAKN,MAAME,QAC3B2E,EAILvE,EAAKO,SACD,CAAClK,KAAM,MACP,kBAAMkO,EAAIN,UAAU9M,EAAiBS,KALrCkE,QAAQC,KAAR,gBAAAhE,OAA6BiI,EAAKN,MAAME,OAAxC,yFAUC,IAAAiD,EAAAD,KAAAE,EACoCF,KAAKlD,MAAtCiH,EADH7D,EACG6D,YAAaC,EADhB9D,EACgB8D,UAAWvQ,EAD3ByM,EAC2BzM,KAE5B2Q,GAAK,EAEL3Q,IAEA2Q,GAAK,EAEC,MAAO3Q,IACTyF,QAAQE,IAAR,wBAAqC3F,GACrC2Q,GAAK,IAGLA,GAAQL,KAAetQ,EAAK,KAC5ByF,QAAQE,IAAR,mBAAAjE,OAA+B4O,EAA/B,uBACAK,GAAK,IAGLA,GAAQ,aAAc3Q,EAAK,GAAKsQ,KAChC7K,QAAQE,IAAR,uCACAgL,GAAK,IAGLA,GAAQJ,KAAavQ,EAAK,GAAKsQ,GAAV,WACrB7K,QAAQE,IAAR,oBAAAjE,OAAgC6O,EAAhC,uBACAI,GAAK,IAGLA,GAAQ,UAAW3Q,EAAK,GAAKsQ,GAAV,SAAmCC,KACtD9K,QAAQE,IAAR,oCACAgL,GAAK,IAITA,EACAlL,QAAQE,IAAI,iBAAkBgL,EAAI9O,OAAOiG,KAAK9H,EAAK,GAAKsQ,GAAV,SAAmCC,GAAnC,OAAwD5Q,OAAQK,GAE9GyF,QAAQE,IAAI,iBAAkBgL,GAKlC,IAEIC,EAFEC,EAFNF,EAAKA,GAAsF,IAA/E9O,OAAOiG,KAAK9H,EAAK,GAAKsQ,GAAV,SAAmCC,GAAnC,OAAwD5Q,OAShF,OAJIgR,IACAC,ETiJZ,SAA+BN,EAAaC,EAAW3K,GAiBnD,IAFA,IAAIkL,EAAO,GAf+CC,EAiB5ClP,OAAOiG,KAAKlC,GAA1BoL,EAAA,EAAAA,EAAAD,EAAApR,OAAAqR,IAAkC,CAA7B,IAAItQ,EAACqQ,EAAAC,GAEFC,EAAOrL,EAAMlF,GAEjB,GAAKuQ,EAAKC,QAAV,CAEA,IAAI3P,EAAM,CACN,EACA,EACA+O,EACAC,GAEJhP,EAAIE,KAAO,EAAFf,EAAM,EAAM,EAAMuQ,EAAKlL,QAAS,GACzCxE,EAAIE,KAAO,EAAFf,EAAM,EAAM,EAAMuQ,EAAKjL,SAAU,GAC1CzE,EAAIE,KAAO,EAAFf,EAAM,EAAM,EAAMuQ,EAAKjR,KAAK,GAAI,GACzCuB,EAAIE,KAAO,EAAFf,EAAM,EAAM,EAAMuQ,EAAKjR,KAAK,GAAI,GACzCuB,EAAIE,KAAO,EAAFf,EAAM,EAAM,EAAMuQ,EAAKjR,KAAK,GAAI,GACzCuB,EAAIE,KAAO,EAAFf,EAAM,EAAM,EAAMuQ,EAAKhL,QAEhC,IAAIzE,EAAKT,EAASQ,GAClBA,EAAIE,KAAKD,GAETsP,EAAKrP,KAAKZ,EAAaa,OAAOH,KAKlC,OAFAkE,QAAQE,IAAImL,GAELA,ES7LkBK,CAAsBb,EAAaC,EAAWvQ,EAAK,GAAKsQ,GAAV,SAAmCC,GAAnC,QAI/D1R,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEXH,EAAAC,EAAAC,cAAA,6EAIIF,EAAAC,EAAAC,cAACqP,GAAD,CAAM1B,cAAeH,KAAKyB,WAAYrB,eAAgBJ,KAAKyB,WACrD1D,YAAa,eAAgBT,iBAAkB0C,KAAKsB,qBACpD1D,UAAWoC,KAAKpC,UAChBnL,UAAU,eAMpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAEXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,gEAEAF,EAAAC,EAAAC,cAACqS,GAAD,CAAiBtC,cAAewB,EAAajC,QAAS9B,KAAKiE,eAE1DF,GAAezR,EAAAC,EAAAC,cAACsS,GAAD,CAAUlC,eAAgBoB,EAAWlC,QAAS9B,KAAKkE,iBAiBtEI,GAAchS,EAAAC,EAAAC,cAACuS,GAAD,CAAoBf,UAAWA,EACX3K,MAAO5F,EAAK,GAAKsQ,GAAV,SAAmCC,GAAnC,MACPH,SAAU,SAACH,EAAWC,EAAUC,EAAWnF,GAAjC,OAA2CwB,EAAKkE,mBAAmBH,EAAWN,EAAWC,EAAUC,EAAWnF,MAG1J6F,GACDhS,EAAAC,EAAAC,cAAA,qCAEK6R,EAAezQ,IAAI,SAAAoR,GAAC,OAAI1S,EAAAC,EAAAC,cAAA,WAAMgB,EAAGwR,OAItC1S,EAAAC,EAAAC,cAAA,WAAM0P,KAAKC,UAAU1O,EAAM,KAAM,MAKzCnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,2BAlNEE,sBCuDPuS,8MA3DXnI,MAAQ,CACJiE,SAAU,MAGdO,qBAAuB,SAACH,GACpBjI,QAAQE,IAAI,+BAAgC+H,EAAOA,EAAMxC,KAAMwC,EAAM1N,MAErE2J,EAAKO,SACD4D,YAAQ,SAAAC,GAAWA,EAAMT,SAAS7L,KAAKiM,EAAM1N,YAKrDgO,WAAa,SAACvE,EAAMqD,EAAUC,GAC1B,YAAa3N,IAATqK,GAA+B,OAATA,EAAsB,KAE5C5K,EAAAC,EAAAC,cAACkP,GAAD,CAAUnJ,IAAK2E,EAAKxC,GAAIwC,KAAMA,EAAMqD,SAAUA,EAAUC,aAAcA,6EAM1E,OAEIlO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAACqP,GAAD,CAAM1B,cAAeH,KAAKyB,WAAYrB,eAAgBJ,KAAKyB,WACrD1D,YAAa,eAAgBT,iBAAkB0C,KAAKsB,qBAEpD7O,UAAU,eAEhBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,gCAEJF,EAAAC,EAAAC,cAAA,WACKwN,KAAKlD,MAAMiE,SAASnN,IAAI,SAACoB,EAAKb,GAC3B,IAAI6Q,EAAIE,aAAUlQ,GAElB,OADAkE,QAAQE,IAAI4L,GACL1S,EAAAC,EAAAC,cAAA,OAAK+F,IAAKpE,GAAImB,OAAOiG,KAAKyJ,GAAGpR,IAAI,SAAA0G,GAAC,OAAIhI,EAAAC,EAAAC,cAAA,eAAA2C,OAAUmF,EAAV,MAAAnF,OAAgB6P,EAAE1K,IAAlB,cASjEhI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,2BArDEE,aCSPyS,UAZA,WACX,OACI7S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,sMAEAF,EAAAC,EAAAC,cAAA,wJACqCF,EAAAC,EAAAC,cAAA,KAAG4S,KAAK,+CAA+CpN,OAAO,SAASqN,IAAI,uBAA3E,qCC8BlCC,oLAjCP,OAEIhT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,2DAoBJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,2BA7BCE,mDC2HN6S,qNA/GXzI,MAAQ,CACJrJ,KAAM,QAoCV+R,OAAS,SAACC,GACNvM,QAAQE,IAAI,OAAQqM,GACpBrI,EAAKC,MAAMqI,QAAO,GAClBtI,EAAKuI,UAAUF,MAGnBnE,qBAAuB,SAACH,GACpBjI,QAAQE,IAAI,mCAAoC+H,EAAOA,EAAM1N,MAEzDiF,EAAYyI,EAAM1N,OAClByF,QAAQE,IAAI,mDACZgE,EAAKO,SACD4D,YAAQ,SAAAC,GACJA,EAAM/N,KAAOsE,EAAUyJ,EAAM/N,MAAQ,GAAIyG,EAAeiH,EAAM1N,WAKtEyF,QAAQE,IAAI,0CAKpBqI,WAAa,SAACvE,EAAMqD,EAAUC,GAC1B,YAAa3N,IAATqK,GAA+B,OAATA,EAAsB,KAE5C5K,EAAAC,EAAAC,cAACkP,GAAD,CAAUnJ,IAAK2E,EAAKxC,GAAIwC,KAAMA,EAAMqD,SAAUA,EAAUC,aAAcA,wHAtD9DiF,+FACNG,QAAQC,IAAIJ,EAAM7R,IAAN,eAAAsH,EAAA5F,OAAAwQ,GAAA,EAAAxQ,CAAAyQ,GAAAxT,EAAAyT,KACd,SAAAC,EAAMC,GAAN,IAAAzS,EAAA,OAAAsS,GAAAxT,EAAA4T,KAAA,SAAAC,GAAA,cAAAA,EAAAtG,KAAAsG,EAAA7H,MAAA,YACQ2H,EAAKlE,KAhBH,SAeV,CAAAoE,EAAA7H,KAAA,QAEQrF,QAAQC,KAAR,GAAAhE,OAAgB+Q,EAAKxH,KAArB,oBAAAvJ,OAA4C+Q,EAAKlE,OAFzDoE,EAAA7H,KAAA,uBAAA6H,EAAAC,GAIyBnS,WAJzBkS,EAAA7H,KAAA,EAI0C,IAAI+H,SAASJ,GAAMK,cAJ7D,OAAAH,EAAAI,GAAAJ,EAAAK,KAKY/N,EADEjF,EAJd,IAAA2S,EAAAC,GAAAD,EAAAI,KAMYvG,EAAKtC,SACD4D,YAAQ,SAAAC,GACJA,EAAM/N,KAAOsE,EAAUyJ,EAAM/N,MAAQ,GAAIyG,EAAezG,IACxDwM,EAAK5C,MAAMqI,QAAO,MAI1BxM,QAAQE,IAAI,2BAA4B5F,EAAGC,EAAKmG,MAAM,EAAG,KAbrE,yBAAAwM,EAAAM,SAAAT,EAAAjG,SADc,gBAAA2G,GAAA,OAAAzL,EAAAzC,MAAAuH,KAAA9H,YAAA,yIA6Db,IAEGzE,EAASuM,KAAKlD,MAAdrJ,KAIR,OAFAyF,QAAQE,IAAI,qBAAsB4G,KAAK3C,OAGnC/K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEXH,EAAAC,EAAAC,cAAA,iEAGAF,EAAAC,EAAAC,cAACqP,GAAD,CAAM1B,cAAeH,KAAKyB,WAAYrB,eAAgBJ,KAAKyB,WACrD1D,YAAa,eAAgBT,iBAAkB0C,KAAKsB,qBACpD7O,UAAU,eAEhBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAEXH,EAAAC,EAAAC,cAAA,gEAEAF,EAAAC,EAAAC,cAACoU,GAAA,EAAD,CAAUpB,OAAQxF,KAAKwF,OAAQ/S,UAAU,aAAzC,kEAIAH,EAAAC,EAAAC,cAAC4P,GAAD,CAAW3O,KAAMA,MAKzBnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,2BAxGME,cCApBmU,GAAW,SAAA3L,GAAA,IAAG4L,EAAH5L,EAAG4L,MAAOC,EAAV7L,EAAU6L,GAAIC,EAAd9L,EAAc8L,oBAAd,OACb1U,EAAAC,EAAAC,cAACyU,EAAA,EAAD,CACIC,KAAMH,EACNI,MAAOH,EACPI,SAAU,SAAA/L,GAAA,IAAGuD,EAAHvD,EAAGuD,MAAH,OACNtM,EAAAC,EAAAC,cAAA,QAAMC,UAAWmM,EAAQ,qBAAuB,eAC5CtM,EAAAC,EAAAC,cAAC6U,EAAA,EAAD,CAAMN,GAAIA,GAAKD,QA0FhBQ,8MAjFXxK,MAAQ,CACJyK,MAAM,KAOV7B,OAAS,SAAC6B,GACNnK,EAAKO,SAAS,CAAE4J,kFAOX,IAAAtH,EAAAD,KACGuH,EAASvH,KAAKlD,MAAdyK,KAER,OACIjV,EAAAC,EAAAC,cAACgV,EAAA,EAAD,KACIlV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAEdH,EAAAC,EAAAC,cAACiV,GAAD,CAAUT,qBAAqB,EAAMD,GAAG,IAAID,MAAM,SAClDxU,EAAAC,EAAAC,cAACiV,GAAD,CAAUV,GAAG,WAAWD,MAAM,YAC9BxU,EAAAC,EAAAC,cAACiV,GAAD,CAAUV,GAAG,UAAUD,MAAM,kBAC7BxU,EAAAC,EAAAC,cAACiV,GAAD,CAAUV,GAAG,WAAWD,MAAM,iBAC9BxU,EAAAC,EAAAC,cAACiV,GAAD,CAAUV,GAAG,eAAeD,MAAM,iBAClCxU,EAAAC,EAAAC,cAACiV,GAAD,CAAUV,GAAG,cAAcD,MAAM,UACjCxU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEd8U,GAAQjV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,SAKLH,EAAAC,EAAAC,cAACkV,EAAA,EAAD,KACIpV,EAAAC,EAAAC,cAACyU,EAAA,EAAD,CAAOE,OAAO,EAAMD,KAAK,IAAIS,OACzB,SAAAtK,GAAK,OACD/K,EAAAC,EAAAC,cAACoV,EAAD,SAGRtV,EAAAC,EAAAC,cAACyU,EAAA,EAAD,CAAOC,KAAK,WAAWS,OACnB,SAAAtK,GAAK,OACD/K,EAAAC,EAAAC,cAACqV,GAAD,CAASnC,OAAQzF,EAAKyF,YAG9BpT,EAAAC,EAAAC,cAACyU,EAAA,EAAD,CAAOC,KAAK,UAAUS,OAClB,SAAAtK,GAAK,OACD/K,EAAAC,EAAAC,cAACsV,GAAD,CAAQpC,OAAQzF,EAAKyF,YAG7BpT,EAAAC,EAAAC,cAACyU,EAAA,EAAD,CAAOC,KAAK,WAAWS,OACnB,SAAAtK,GAAK,OACD/K,EAAAC,EAAAC,cAACuV,GAAD,CAASrC,OAAQzF,EAAKyF,YAG9BpT,EAAAC,EAAAC,cAACyU,EAAA,EAAD,CAAOC,KAAK,eAAeS,OACvB,SAAAtK,GAAK,OACD/K,EAAAC,EAAAC,cAACwV,GAAD,CAAatC,OAAQzF,EAAKyF,YAGlCpT,EAAAC,EAAAC,cAACyU,EAAA,EAAD,CAAOC,KAAK,cAAcS,OACtB,SAAAtK,GAAK,OACD/K,EAAAC,EAAAC,cAACyV,GAAD,CAAYvC,OAAQzF,EAAKyF,aAO7CpT,EAAAC,EAAAC,cAAC0V,GAAD,eA3EFxV,aCbEyV,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1J,MACvB,2DCZN,SAAS2J,MAELrP,QAAQE,IAAMmP,GACdrP,QAAQC,KAAOoP,GACfrP,QAAQW,MAAQ0O,GAGpBC,IAASb,OAAOrV,EAAAC,EAAAC,cAACiW,GAAD,MAASC,SAASC,eAAe,SDgH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4d6b29bf.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport \"./Home.css\";\n\n\nclass Home extends Component {\n\n\n    render() {\n\n        return (\n            <div className=\"content\">\n\n                <h2>Requirements</h2>\n\n                <h2>Limitations</h2>\n\n                <h2>Usage</h2>\n\n                <h2>FAQ</h2>\n\n            </div>\n        );\n    }\n\n}\n\nexport default Home;\n","\n/*\nString.prototype.padZero = function (len, c) {\n    var s = '', c = c || '0', len = (len || 2) - this.length;\n    while (s.length < len) s += c;\n    return s + this;\n};\n*/\n\nexport const padZero = (str, len, char) => {\n    let s = '';\n    let c = char || '0';\n    let n = (len || 2) - str.length;\n    while (s.length < n) s += c;\n    return s + str;\n};\n\nexport const h = v => {\n    return (v === null || v === undefined) ? \"\" : padZero(v.toString(16).toUpperCase(), 2);\n};\n\nexport const hs = data => (data === null || data === undefined) ? \"\" : (Array.from(data).map(n => h(n))).join(\" \");    // Array.from() is necessary to get a non-typed array\n\n\n/**\n *\n * @param string\n * @param sep\n * @returns {*}\n */\nexport const fromHexString = function(string, sep) {\n    let s = sep ? string.replace(sep, '') : string;\n    if ((s.length % 2) > 0) {\n        return null;\n    }\n    if (s.length === 0) return null;\n    let a = new Uint8Array(s.length / 2);\n    for (let i=0; i < (s.length / 2); i++) {\n        a[i] = parseInt(s.substr(i * 2, 2), 16);\n    }\n    return a;\n};\n","\nexport const SYSEX_HEADER = [0x7F];\n\nexport const SYSEX_SIGNATURE = [0x00, 0x01, 0x77];\n\nexport function checksum(bytes) {\n    if (bytes === null || bytes === undefined || bytes.length === 0) return 128;\n    let sum = Uint8Array.from(bytes).reduce((previousValue, currentValue) => previousValue + currentValue);\n    return 128 - (sum % 128);\n}\n\n\n/**\n * return the sysex message to send to the Pacer to request some data\n */\nexport function requestPreset(index) {\n    let msg = [0x02, 0x01, index];      // TODO: replace numbers by constants\n    let cs = checksum(msg);\n    msg.push(cs);\n    return SYSEX_HEADER.concat(msg);\n}\n\n/**\n * return the sysex message to send to the Pacer to request some data\n */\nexport function requestPresetObj(index, obj) {\n    let msg = [0x02, 0x01, index, obj];             // TODO: replace numbers by constants\n    let cs = checksum(msg);\n    msg.push(cs);\n    return SYSEX_HEADER.concat(msg);\n}\n\n// ============================================================================\n\n/**\n * Example: 23 => \"D5\"\n * @param index\n * @returns {string}\n */\nexport const presetIndexToXY = index => {\n    if (index === 0) return \"CUR\";\n    //TODO: check valid range\n    let b = Math.floor((index - 1) / 6);\n    let i = (index - 1) % 6 + 1;\n    return String.fromCharCode(b + 65) + i.toString();\n};\n\n/**\n * Exampe: \"D5\" => 23\n * @param xy\n * @returns {number}\n */\nexport const presetXYToIndex = xy => {\n    if (xy === \"CUR\") return 0;\n    //TODO: check valid range\n    //TODO: convert to uppercase before parsing\n    let bank = xy.charCodeAt(0) - 65;\n    let num = parseInt(xy[1], 10);\n    return bank * 6 + num;\n};\n\n// ============================================================================\n\nexport const TARGET_PRESET = 0x01;\nexport const TARGET_GLOBAL = 0x05;\nexport const TARGET_BACKUP = 0x07;\n\nexport const TARGETS = {\n    [TARGET_PRESET]: \"preset\",\n    [TARGET_GLOBAL]: \"global\",\n    [TARGET_BACKUP]: \"full backup\"\n};\n\n// ============================================================================\n\n// objects:\nexport const CONTROLS = {\n    0x01: \"name\",\n    0x0D: \"1\",\n    0x0E: \"2\",\n    0x0F: \"3\",\n    0x10: \"4\",\n    0x11: \"5\",\n    0x12: \"6\",\n    0x13: \"RESERVED\",\n    0x14: \"A\",\n    0x15: \"B\",\n    0x16: \"C\",\n    0x17: \"D\",\n    0x18: \"FS 1\",\n    0x19: \"FS 2\",\n    0x1A: \"FS 3\",\n    0x1B: \"FS 4\",\n    0x36: \"EXP 1\",\n    0x37: \"EXP 2\",\n    0x7E: \"MIDI configuration\",\n    0x7F: \"ALL\"\n};\n\nexport const CONTROLS_FULLNAME = {\n    0x01: \"Preset Name\",\n    0x0D: \"Stompswitch 1\",\n    0x0E: \"Stompswitch 2\",\n    0x0F: \"Stompswitch 3\",\n    0x10: \"Stompswitch 4\",\n    0x11: \"Stompswitch 5\",\n    0x12: \"Stompswitch 6\",\n    0x13: \"RESERVED\",\n    0x14: \"Stompswitch A\",\n    0x15: \"Stompswitch B\",\n    0x16: \"Stompswitch C\",\n    0x17: \"Stompswitch D\",\n    0x18: \"Footswitch 1\",\n    0x19: \"Footswitch  2\",\n    0x1A: \"Footswitch  3\",\n    0x1B: \"Footswitch  4\",\n    0x36: \"Expression Pedal 1\",\n    0x37: \"Expression Pedal 2\",\n    0x7E: \"MIDI configuration\",\n    0x7F: \"ALL\"\n};\n\n// subsets of CONTROLS keys:\nexport const STOMPSWITCHES = [0x0D, 0x0E, 0x0F, 0x10, 0x11, 0x12, 0x14, 0x15, 0x16, 0x17];\nexport const STOMPSWITCHES_TOP = [0x14, 0x15, 0x16, 0x17];\nexport const STOMPSWITCHES_BOTTOM = [0x0D, 0x0E, 0x0F, 0x10, 0x11, 0x12];\nexport const FOOTSWITCHES = [0x18, 0x19, 0x1A, 0x1B];\nexport const EXPPEDALS = [0x36, 0x37];\n\n\n\n// ============================================================================\n// message types:\n\nexport const MSG_AD_MIDICC = 0x00;\nexport const MSG_AD_NRPNC = 0x03;\nexport const MSG_AD_NRPNF = 0x04;\nexport const MSG_AD_PITCH = 0x01;\nexport const MSG_AD_ATCHAN = 0x02;\nexport const MSG_DAWFUNC = 0x7E;\nexport const MSG_CTRL_OFF = 0x61;\n\nexport const MSG_SW_MIDICC_TGGLE = 0x47;\nexport const MSG_SW_MIDICC = 0x40;\nexport const MSG_SW_MIDICC_STEP = 0x48;\nexport const MSG_SW_NOTE = 0x43;\nexport const MSG_SW_NOTE_TGGLE = 0x44;\nexport const MSG_SW_PRGBANK = 0x45;\nexport const MSG_SW_PRG_STEP = 0x46;\nexport const MSG_SW_NRPNCOARSE = 0x57;\nexport const MSG_SW_NRPNFINE = 0x58;\nexport const MSG_SW_MMC = 0x55;\nexport const MSG_SW_RELAY = 0x59;\nexport const MSG_SW_PRESETSELECT = 0x62;\nexport const MSG_SW_PRESETINCDEC = 0x56;\nexport const MSG_SW_STEPSELECT = 0x63;\nexport const MSG_SW_STEPINCDEC = 0x64;\n\nexport const MSG_ENC_CC = 0x12;\nexport const MSG_ENC_MIDICC_REL = 0x11;\nexport const MSG_ENC_NRPNC = 0x15;\nexport const MSG_ENC_NRPNF = 0x16;\nexport const MSG_ENC_PITCH = 0x13;\nexport const MSG_ENC_ATCHAN = 0x14;\nexport const MSG_ENC_PROGRAM = 0x10;\nexport const MSG_ENC_PRESETSELECT = 0x17;\nexport const MSG_ENC_STEPSELECT = 0x18;\n\nexport const MSG_LOAD_CC = 0x65;\n\nexport const MSG_TYPES = {\n\n    [MSG_AD_MIDICC]: \"CC\",\n    [MSG_AD_NRPNC]: \"NRPN C\",\n    [MSG_AD_NRPNF]: \"NRPN F\",\n    [MSG_AD_PITCH]: \"PITCH\",\n    [MSG_AD_ATCHAN]: \"AT CHAN\",\n    [MSG_DAWFUNC]: \"DAW FUNC\",\n    [MSG_CTRL_OFF]: \"CTRL_OFF\",\n\n    [MSG_SW_MIDICC_TGGLE]: \"CC TOGGLE\",\n    [MSG_SW_MIDICC]: \"CC\",\n    [MSG_SW_MIDICC_STEP]: \"CC STEP\",\n    [MSG_SW_NOTE]: \"NOTE\",\n    [MSG_SW_NOTE_TGGLE]: \"NOTE TOGGLE\",\n    [MSG_SW_PRGBANK]: \"PRG BANK\",\n    [MSG_SW_PRG_STEP]: \"PRG STEP\",\n    [MSG_SW_NRPNCOARSE]: \"NRPN COARSE\",\n    [MSG_SW_NRPNFINE]: \"NRPN FINE\",\n    [MSG_SW_MMC]: \"MMC\",\n    [MSG_SW_RELAY]: \"RELAY\",\n    [MSG_SW_PRESETSELECT]: \"PRESET SELECT\",\n    [MSG_SW_PRESETINCDEC]: \"PRESET INC DEC\",\n    [MSG_SW_STEPSELECT]: \"STEP SELECT\",\n    [MSG_SW_STEPINCDEC]: \"STEP INC DEC\",\n\n    [MSG_ENC_CC]: \"CC\",\n    [MSG_ENC_MIDICC_REL]: \"CC REL\",\n    [MSG_ENC_NRPNC]: \"NRPN C\",\n    [MSG_ENC_NRPNF]: \"NRPN F\",\n    [MSG_ENC_PITCH]: \"PITCH\",\n    [MSG_ENC_ATCHAN]: \"AT CHAN\",\n    [MSG_ENC_PROGRAM]: \"PRG\",\n    [MSG_ENC_PRESETSELECT]: \"PRESET SEL\",\n    [MSG_ENC_STEPSELECT]: \"STEP SEL\",\n\n    [MSG_LOAD_CC]: \"CC\"\n\n};\n\nexport const MSG_TYPES_FULLNAME = {\n\n    [MSG_AD_MIDICC]: \"MIDI CC\",\n    [MSG_AD_NRPNC]: \"MIDI NRPN Coarse\",\n    [MSG_AD_NRPNF]: \"MIDI NRPN Fine\",\n    [MSG_AD_PITCH]: \"Pitch Bend\",\n    [MSG_AD_ATCHAN]: \"AT CHAN\",\n    [MSG_DAWFUNC]: \"DAW FUNC\",\n    [MSG_CTRL_OFF]: \"CTRL_OFF\",\n\n    [MSG_SW_MIDICC_TGGLE]: \"MIDI CC Toggle\",\n    [MSG_SW_MIDICC]: \"CC\",\n    [MSG_SW_MIDICC_STEP]: \"CC STEP\",\n    [MSG_SW_NOTE]: \"MIDI Note\",\n    [MSG_SW_NOTE_TGGLE]: \"MIDI Note Toggle\",\n    [MSG_SW_PRGBANK]: \"PRG BANK\",\n    [MSG_SW_PRG_STEP]: \"PRG STEP\",\n    [MSG_SW_NRPNCOARSE]: \"MIDI NRPN Coarse\",\n    [MSG_SW_NRPNFINE]: \"MIDI NRPN Fine\",\n    [MSG_SW_MMC]: \"MMC\",\n    [MSG_SW_RELAY]: \"RELAY\",\n    [MSG_SW_PRESETSELECT]: \"PRESET SELECT\",\n    [MSG_SW_PRESETINCDEC]: \"PRESET INC DEC\",\n    [MSG_SW_STEPSELECT]: \"STEP SELECT\",\n    [MSG_SW_STEPINCDEC]: \"STEP INC DEC\",\n\n    [MSG_ENC_CC]: \"CC\",\n    [MSG_ENC_MIDICC_REL]: \"CC REL\",\n    [MSG_ENC_NRPNC]: \"MIDI NRPN Coarse\",\n    [MSG_ENC_NRPNF]: \"MIDI NRPN Fine\",\n    [MSG_ENC_PITCH]: \"Pitch Bend\",\n    [MSG_ENC_ATCHAN]: \"AT CHAN\",\n    [MSG_ENC_PROGRAM]: \"PRG\",\n    [MSG_ENC_PRESETSELECT]: \"PRESET SEL\",\n    [MSG_ENC_STEPSELECT]: \"STEP SEL\",\n\n    [MSG_LOAD_CC]: \"CC\"\n\n};\n// ============================================================================\n\n\nexport const CONTROL_ELEMENT = {\n    // 0x00: \"\",\n\n    0x01: \"step 1: channel\",\n    0x02: \"step 1: message type\",\n    0x03: \"step 1: data 1\",\n    0x04: \"step 1: data 2\",\n    0x05: \"step 1: data 3\",\n    0x06: \"step 1: step active\",\n\n    0x07: \"step 2: channel\",\n    0x08: \"step 2: message type\",\n    0x09: \"step 2: data 1\",\n    0x0A: \"step 2: data 2\",\n    0x0B: \"step 2: data 3\",\n    0x0C: \"step 2: step active\",\n\n    0x0D: \"step 3: channel\",\n    0x0E: \"step 3: message type\",\n    0x0F: \"step 3: data 1\",\n    0x10: \"step 3: data 2\",\n    0x11: \"step 3: data 3\",\n    0x12: \"step 3: step active\",\n\n    0x13: \"step 4: channel\",\n    0x14: \"step 4: message type\",\n    0x15: \"step 4: data 1\",\n    0x16: \"step 4: data 2\",\n    0x17: \"step 4: data 3\",\n    0x18: \"step 4: step active\",\n\n    0x19: \"step 5: channel\",\n    0x1A: \"step 5: message type\",\n    0x1B: \"step 5: data 1\",\n    0x1C: \"step 5: data 2\",\n    0x1D: \"step 5: data 3\",\n    0x1E: \"step 5: step active\",\n\n    0x1F: \"step 6: channel\",\n    0x20: \"step 6: message type\",\n    0x21: \"step 6: data 1\",\n    0x22: \"step 6: data 2\",\n    0x23: \"step 6: data 3\",\n    0x24: \"step 6: step active\",\n\n    // 0x25: \"\",\n    // 0x26: \"\",\n    // 0x27: \"\",\n    // 0x28: \"\",\n    // 0x29: \"\",\n    // 0x2A: \"\",\n    // 0x2B: \"\",\n    // 0x2C: \"\",\n    // 0x2D: \"\",\n    // 0x2E: \"\",\n    // 0x2F: \"\",\n    // 0x30: \"\",\n    // 0x31: \"\",\n    // 0x32: \"\",\n    // 0x33: \"\",\n    // 0x34: \"\",\n    // 0x35: \"\",\n    // 0x36: \"\",\n    // 0x37: \"\",\n    // 0x38: \"\",\n    // 0x39: \"\",\n    // 0x3A: \"\",\n    // 0x3B: \"\",\n    // 0x3C: \"\",\n    // 0x3D: \"\",\n    // 0x3E: \"\",\n    // 0x3F: \"\",\n    // 0x40: \"\",\n    // 0x41: \"\",\n    // 0x42: \"\",\n    // 0x43: \"\",\n\n    0x40: \"control mode\",\n    0x41: \"LED MIDI Ctrl\",\n    0x42: \"LED On Color\",\n    0x43: \"LED Off Color\",\n\n    // 0x44: \"\",\n    // 0x45: \"\",\n    // 0x46: \"\",\n    // 0x47: \"\",\n    // 0x48: \"\",\n    // 0x49: \"\",\n    // 0x4A: \"\",\n    // 0x4B: \"\",\n    // 0x4C: \"\",\n    // 0x4D: \"\",\n    // 0x4E: \"\",\n    // 0x4F: \"\",\n    // 0x50: \"\",\n    // 0x51: \"\",\n    // 0x52: \"\",\n    // 0x53: \"\",\n    // 0x54: \"\",\n    // 0x55: \"\",\n    // 0x56: \"\",\n    // 0x57: \"\",\n    // 0x58: \"\",\n    // 0x59: \"\",\n    // 0x5A: \"\",\n    // 0x5B: \"\",\n    // 0x5C: \"\",\n    // 0x5D: \"\",\n    // 0x5E: \"\",\n    // 0x5F: \"\",\n\n    // 0x60: \"control mode\",\n    // 0x61: \"LED MIDI Ctrl\",\n    // 0x62: \"LED On Color\",\n    // 0x63: \"LED Off Color\",\n\n    // 0x64: \"\",\n    // 0x65: \"\",\n    // 0x66: \"\",\n    // 0x67: \"\",\n    // 0x68: \"\",\n    // 0x69: \"\",\n    // 0x6A: \"\",\n    // 0x6B: \"\",\n    // 0x6C: \"\",\n    // 0x6D: \"\",\n    // 0x6E: \"\",\n    // 0x6F: \"\",\n    // 0x70: \"\",\n    // 0x71: \"\",\n    // 0x72: \"\",\n    // 0x73: \"\",\n    // 0x74: \"\",\n    // 0x75: \"\",\n    // 0x76: \"\",\n    // 0x77: \"\",\n    // 0x78: \"\",\n    // 0x79: \"\",\n    // 0x7A: \"\",\n    // 0x7B: \"\",\n    // 0x7C: \"\",\n    // 0x7D: \"\",\n    // 0x7E: \"\",\n\n    0x7F: \"ALL\"\n};\n\nexport const MIDI_ELEMENT = {\n    // 0x00: \"\",\n    0x01: \"setting 1: channel\",\n    0x02: \"setting 1: message type\",\n    0x03: \"setting 1: data 1\",\n    0x04: \"setting 1: data 2\",\n    0x05: \"setting 1: data 3\",\n    // 0x06: \"\",\n\n    0x07: \"setting 2: channel\",\n    0x08: \"setting 2: message type\",\n    0x09: \"setting 2: data 1\",\n    0x0A: \"setting 2: data 2\",\n    0x0B: \"setting 2: data 3\",\n    // 0x0C: \"\",\n\n    0x0D: \"setting 3: channel\",\n    0x0E: \"setting 3: message type\",\n    0x0F: \"setting 3: data 1\",\n    0x10: \"setting 3: data 2\",\n    0x11: \"setting 3: data 3\",\n    // 0x12: \"\",\n\n    0x13: \"setting 4: channel\",\n    0x14: \"setting 4: message type\",\n    0x15: \"setting 4: data 1\",\n    0x16: \"setting 4: data 2\",\n    0x17: \"setting 4: data 3\",\n    // 0x18: \"\",\n\n    0x19: \"setting 5: channel\",\n    0x1A: \"setting 5: message type\",\n    0x1B: \"setting 5: data 1\",\n    0x1C: \"setting 5: data 2\",\n    0x1D: \"setting 5: data 3\",\n    // 0x1E: \"\",\n\n    0x1F: \"setting 6: channel\",\n    0x20: \"setting 6: message type\",\n    0x21: \"setting 6: data 1\",\n    0x22: \"setting 6: data 2\",\n    0x23: \"setting 6: data 3\",\n    // 0x24: \"\",\n\n    0x25: \"setting 7: channel\",\n    0x26: \"setting 7: message type\",\n    0x27: \"setting 7: data 1\",\n    0x28: \"setting 7: data 2\",\n    0x29: \"setting 7: data 3\",\n    // 0x2A: \"\",\n\n    0x2B: \"setting 8: channel\",\n    0x2C: \"setting 8: message type\",\n    0x2D: \"setting 8: data 1\",\n    0x2E: \"setting 8: data 2\",\n    0x2F: \"setting 8: data 3\",\n    0x30: \"\",\n\n    0x31: \"setting 9: channel\",\n    0x32: \"setting 9: message type\",\n    0x33: \"setting 9: data 1\",\n    0x34: \"setting 9: data 2\",\n    0x35: \"setting 9: data 3\",\n    // 0x36: \"\",\n\n    0x37: \"setting 10: channel\",\n    0x38: \"setting 10: message type\",\n    0x39: \"setting 10: data 1\",\n    0x3A: \"setting 10: data 2\",\n    0x3B: \"setting 10: data 3\",\n    // 0x3C: \"\",\n\n    0x3D: \"setting 11: channel\",\n    0x3E: \"setting 11: message type\",\n    0x3F: \"setting 11: data 1\",\n    0x40: \"setting 11: data 2\",\n    0x41: \"setting 11: data 3\",\n    // 0x42: \"\",\n\n    0x43: \"setting 12: channel\",\n    0x44: \"setting 12: message type\",\n    0x45: \"setting 12: data 1\",\n    0x46: \"setting 12: data 2\",\n    0x47: \"setting 12: data 3\",\n    // 0x48: \"\",\n\n    0x49: \"setting 13: channel\",\n    0x4A: \"setting 13: message type\",\n    0x4B: \"setting 13: data 1\",\n    0x4C: \"setting 13: data 2\",\n    0x4D: \"setting 13: data 3\",\n    // 0x4E: \"\",\n\n    0x4F: \"setting 14: channel\",\n    0x50: \"setting 14: message type\",\n    0x51: \"setting 14: data 1\",\n    0x52: \"setting 14: data 2\",\n    0x53: \"setting 14: data 3\",\n    // 0x54: \"\",\n\n    0x55: \"setting 15: channel\",\n    0x56: \"setting 15: message type\",\n    0x57: \"setting 15: data 1\",\n    0x58: \"setting 15: data 2\",\n    0x59: \"setting 15: data 3\",\n    // 0x5A: \"\",\n\n    0x5B: \"setting 16: channel\",\n    0x5C: \"setting 16: message type\",\n    0x5D: \"setting 16: data 1\",\n    0x5E: \"setting 16: data 2\",\n    0x5F: \"setting 16: data 3\",\n    // 0x60: \"\",\n\n    // 0x61: \"\",\n    // 0x62: \"\",\n    // 0x63: \"\",\n    // 0x64: \"\",\n    // 0x65: \"\",\n    // 0x66: \"\",\n    // 0x67: \"\",\n    // 0x68: \"\",\n    // 0x69: \"\",\n    // 0x6A: \"\",\n    // 0x6B: \"\",\n    // 0x6C: \"\",\n    // 0x6D: \"\",\n    // 0x6E: \"\",\n    // 0x6F: \"\",\n    // 0x70: \"\",\n    // 0x71: \"\",\n    // 0x72: \"\",\n    // 0x73: \"\",\n    // 0x74: \"\",\n    // 0x75: \"\",\n    // 0x76: \"\",\n    // 0x77: \"\",\n    // 0x78: \"\",\n    // 0x79: \"\",\n    // 0x7A: \"\",\n    // 0x7B: \"\",\n    // 0x7C: \"\",\n    // 0x7D: \"\",\n    // 0x7E: \"\",\n\n    0x7F: \"ALL\"\n};\n","import {NEKTAR_TECHNOLOGY_INC} from \"midi-manufacturers\";\nimport {h, hs} from \"./hexstring\";\nimport {TARGETS, CONTROLS, checksum, SYSEX_HEADER} from \"../pacer\";\nexport const SYSEX_START = 0xF0;\nexport const SYSEX_END = 0xF7;\n\n// offsets from start of sysex data, right after SYSEX_START\nconst CMD = 4;\nconst TGT = 5;\nconst IDX = 6;\nconst OBJ = 7;\nconst ELM = 8;\n\n/**\n * https://stackoverflow.com/questions/27936772/how-to-deep-merge-instead-of-shallow-merge/34749873#34749873\n * Simple object check.\n * @param item\n * @returns {boolean}\n */\nfunction isObject(item) {\n    return (item && typeof item === 'object' && !Array.isArray(item));\n}\n\n/**\n * https://stackoverflow.com/questions/27936772/how-to-deep-merge-instead-of-shallow-merge/34749873#34749873\n * Deep merge two objects.\n * @param target\n * @param ...sources\n */\nexport function mergeDeep(target, ...sources) {\n    if (!sources.length) return target;\n    const source = sources.shift();\n\n    if (isObject(target) && isObject(source)) {\n        for (const key in source) {\n            if (isObject(source[key])) {\n                if (!target[key]) Object.assign(target, { [key]: {} });\n                mergeDeep(target[key], source[key]);\n            } else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        }\n    }\n\n    return mergeDeep(target, ...sources);\n}\n\n/**\n *\n * @param data Uint8Array\n */\nfunction isSysexData(data) {\n    // let view = new Uint8Array(data);\n    // if (view[0] !== SYSEX_START) return false;\n    // if (view[view.byteLength - 1] !== SYSEX_END) return false;\n    if (data[0] !== SYSEX_START) return false;\n    if (data[data.byteLength - 1] !== SYSEX_END) return false;\n    return true;\n}\n\n/*\nfunction getManufacturerName(id) {\n    return id in midi_name ? midi_name[id] : \"manufacturer unknown\";\n}\n*/\n\nfunction getControlStep(data) {\n\n    // console.log(\"getControlStep\", hs(data));\n\n    // 01 01 0F 00      midi channel\n    // 02 01 47 00      message type\n    // 03 01 44 00      data 1\n    // 04 01 55 00      data 2\n    // 05 01 66 00      data 3\n    // 06 01 01         active\n\n    // the second byte is the length of the data that follows\n\n    //FIXME: use length\n\n    return {\n        index: (data[0] - 1) / 6 + 1,\n        config: {\n            channel: data[2],\n            msg_type: data[6],\n            data: [data[10], data[14], data[18]],\n            active: data[22]\n        }\n    };\n}\n\n\nfunction getControlLED(data) {\n\n    // console.log(\"getControlLED\", hs(data));\n\n    // 01 01 0F 00      midi channel\n    // 02 01 47 00      message type\n    // 03 01 44 00      data 1\n    // 04 01 55 00      data 2\n    // 05 01 66 00      data 3\n    // 06 01 01         active\n\n    // we ignore the first byte, which seems to always be 0x01\n\n    return {\n        midi: data[2],\n        on_color: data[6],\n        off_color: data[10]\n    };\n}\n\n\n/**\n * Parse a single sysex message\n * @param data\n * @returns {*}\n */\nfunction parseSysexMessage(data) {\n\n    // console.log(\"parseSysex\", hs(data));\n\n    //TODO: verify checksum\n\n    const message = {};\n\n    let cmd = data[CMD];\n    let tgt = data[TGT];\n    let idx = data[IDX];\n    let obj = data[OBJ];\n\n    switch (cmd) {\n        case 0x01:\n            // console.log(`command is set_data (${h(cmd)})`);\n            break;\n        case 0x02:\n            // console.log(`command is get_data (${h(cmd)})`);\n            break;\n        default:\n            console.warn(`parseSysexMessage: invalid command (${h(cmd)})`);\n            return null;\n    }\n\n    if (!(tgt in TARGETS)) {\n        console.warn(\"parseSysexMessage: invalid target\", h(tgt), tgt, TARGETS);\n        return null;\n    }\n\n    message[tgt] = {};\n\n    if (idx >= 0x19 && idx <= 0x7E) {\n        console.warn(\"parseSysexMessage: invalid/ignored idx\", idx);\n    }\n\n    message[tgt][idx] = {};\n\n    if (!(obj in CONTROLS)) {\n        console.warn(\"parseSysexMessage: invalid/ignored object\", h(obj));\n        return null;\n    }\n\n    let obj_type;\n    if (obj === 0x01) {\n        obj_type = \"name\";\n    } else if ((obj >= 0x0D && obj <= 0x12) ||\n        (obj >= 0x14 && obj <= 0x1B) ||\n        (obj >= 0x36 && obj <= 0x37)) {\n        obj_type = \"control\";\n    } else if (obj === 0x7E) {\n        obj_type = \"midi\";\n    } else {\n        console.warn('parseSysexMessage: invalid obj', obj);\n        return null;\n    }\n\n    // console.log(`target=${TARGET[tgt]} (${h(tgt)}), idx=${h(idx)}, object=${OBJECT[obj]} (${h(obj)}), type=${obj_type}`);\n    console.log(`${TARGETS[tgt]} ${h(idx)} : ${CONTROLS[obj]} ${obj_type}`);\n\n    if (obj_type === \"name\") {\n        //TODO: parse name\n    }\n\n    if (obj_type === \"control\") {\n\n        message[tgt][idx][\"controls\"] = {\n            [obj]: {\n                steps: {}\n            }\n        };\n\n        // which element?\n        let e = data[ELM];\n        if (e >= 0x01 && e <= 0x24) {\n\n            // STEPS\n            if (data.length > ELM+22) {\n                let s = getControlStep(data.slice(ELM, ELM + 23));\n                message[tgt][idx][\"controls\"][obj][\"steps\"][s.index] = s.config;\n            } else {\n                console.warn(`parseSysexMessage: data does not contains steps. data.length=${data.length}`, hs(data));\n            }\n\n        } else if (e === 0x60) {\n\n            // CONTROL MODE\n            console.log('parseSysexMessage: CONTROL MODE');\n\n        } else if (e === 0x40) {\n\n            // CONTROL MODE\n            console.log('parseSysexMessage: LED MIDI CTRL');\n\n        // } else if (e >= 0x61 && e <= 0x63) {\n        } else if (e >= 0x41 && e <= 0x43) {\n\n            // LED\n            console.error('parseSysexMessage: LED');\n            message[tgt][idx][\"controls\"][obj][\"led\"] = getControlLED(data.slice(ELM, ELM + 3));\n\n        } else if (e === 0x7F) {\n\n            // ALL\n            console.log('parseSysexMessage: ALL');\n\n        } else {\n            console.warn(`parseSysexMessage: unknown element: ${h(e)}`);\n            return null;\n        }\n\n    }\n\n    if (obj_type === \"midi\") {\n        //TODO: parse midi\n    }\n\n    // console.log('MESSAGE', message);\n\n    return message;\n\n} // parseSysex()\n\n\n/**\n * Parse a sysex dump. A dump can contains multiple sysex messages.\n * Return a array of presets.\n * @param data ArrayBuffer\n */\nfunction parseSysexDump(data) {\n\n    console.log(\"parseSysexDump\", hs(data));\n\n    if (data === null) return null;\n\n    // let d = new Uint8Array(data);\n    let d = data;   //TODO: use data variable\n    let presets = {};   // Collection of presets. The key is the preset's index. The value is the preset.\n    // let global = {};    // global conf\n\n    // let k = data[0] === SYSEX_START ? 1 : 0;\n\n    let i = 0;\n    let cont = true;\n    while (cont) {\n\n        i = d.indexOf(SYSEX_START, i);\n        if (i < 0) break;\n\n        i++;\n\n        let k = d.indexOf(SYSEX_END, i);\n\n        let manufacturer_id = (Array.from(d.slice(i, i+3)).map(n => h(n))).join(\" \");    // Array.from() is necessary to get a non-typed array\n        if (manufacturer_id !== NEKTAR_TECHNOLOGY_INC) {\n            console.log(\"parseSysexDump: file does not contain a Nektar Pacer patch\", i, k, manufacturer_id, \"-\", hs(d));\n            return null;\n        }\n\n        if (d[i+3] !== 0x7F) {\n            console.warn(`parseSysexDump: invalid byte after manufacturer id: ${d[i+1 +3]}`);\n            return null;\n        }\n\n        let config = parseSysexMessage(d.slice(i, k));  // d.slice(i, k) are the data between SYSEX_START and SYSEX_END\n\n        if (config) {\n            mergeDeep(presets, config);\n        }\n\n    }\n\n    // console.log(JSON.stringify(presets));\n\n    return presets;\n\n}\n\n\n/**\n * Return an array of sysex messages to update a control's steps.\n * @param presetIndex\n * @param controlId\n * @param steps\n * @returns {*}\n */\nfunction buildControlStepSysex(presetIndex, controlId, steps) {\n\n    // 00 01 77\n    // 7F SYSEX_HEADER\n    // 01 cmd\n    // 01 tgt\n    // 05 presetIndex\n    // 0D controlId\n    // 01 01 00 00      channel\n    // 02 01 43 00      msg type\n    // 03 01 34 00      data 1\n    // 04 01 7F 00      data 2\n    // 05 01 00 00      data 3\n    // 06 01 01         active\n\n    let msgs = [];\n\n    for (let i of Object.keys(steps)) {\n\n        let step = steps[i];\n\n        if (!step.changed) continue;\n\n        let msg = [\n            0x01,       // cmd                   // TODO: replace numbers by constants\n            0x01,       // tgt is preset\n            presetIndex,\n            controlId];\n\n        msg.push(i*6 + 0x01, 0x01, step.channel, 0x00);\n        msg.push(i*6 + 0x02, 0x01, step.msg_type, 0x00);\n        msg.push(i*6 + 0x03, 0x01, step.data[0], 0x00);\n        msg.push(i*6 + 0x04, 0x01, step.data[1], 0x00);\n        msg.push(i*6 + 0x05, 0x01, step.data[2], 0x00);\n        msg.push(i*6 + 0x06, 0x01, step.active);\n\n        let cs = checksum(msg);\n        msg.push(cs);\n\n        msgs.push(SYSEX_HEADER.concat(msg));\n    }\n\n    console.log(msgs);\n\n    return msgs;\n}\n\n\nexport {\n    isSysexData,\n    parseSysexDump,\n    buildControlStepSysex\n};\n\n","import WebMidi from \"webmidi\";\n\nfunction portById(id) {\n    let p = WebMidi.inputs.find(item => item.id === id);\n    if (p) {\n        return p;\n    } else {\n        return WebMidi.outputs.find(item => item.id === id);\n    }\n}\n\nfunction inputById(id) {\n    return WebMidi.inputs.find(item => item.id === id);\n}\n\n/**\n * Return webmidi input name from input id\n * @param id\n */\nfunction inputName(id) {\n    let i = WebMidi.inputs.find(item => item.id === id);\n    return i ? i.name : null;\n}\n\nfunction outputById(id) {\n    return WebMidi.outputs.find(item => item.id === id);\n}\n\nexport {\n    portById,\n    inputById,\n    inputName,\n    outputById\n}\n","import React from \"react\";\nimport \"./DumpSysex.css\";\nimport {\n    MSG_SW_NOTE,\n    CONTROLS,\n    TARGET_PRESET,\n    MSG_TYPES,\n    presetIndexToXY\n} from \"../pacer\";\nimport {h, hs} from \"../utils/hexstring\";\nimport \"./DumpSysex.css\";\nimport * as Note from \"tonal-note\";\n\n/*\nconst presetCoord = index => {\n    if (index === 0) return \"CUR\";\n    // 23 => D5\n    let b = Math.floor((index - 1) / 6);\n    let i = (index - 1) % 6 + 1;\n    return String.fromCharCode(b + 65) + i.toString();\n};\n*/\n\n/*\nconst ControlElement = ({ data }) => {\n    if (data.element === undefined) return null;\n    if (!(data.element in CONTROL_ELEMENT)) return null;\n    return <div>{CONTROL_ELEMENT[data.element]} = {h(data.element_data)}</div>;\n};\n*/\n\n/*\nconst MidiElement = ({ data }) => {\n    return <span>midi element</span>;\n};\n*/\n\nconst Midis = ({ midis }) => {\n    if (midis === null) return null;\n    return (\n        <div></div>\n    );\n};\n\n/*\nconst Control = ({ obj, config }) => {\n    if (config === null || config === undefined) return null;\n    return (\n        <div>\n            <h3>{CONTROLS[obj]}</h3>\n            <div>\n                <h4>steps</h4>\n                <div>\n                {Object.keys(config[\"steps\"]).map(i =>\n                    <div key={`${obj}.${i}`}>\n                        <div>step {i}</div>\n                        <ul>\n                            <li>MIDI channel: {h(config[\"steps\"][i][\"channel\"])}</li>\n                            <li>message type: {h(config[\"steps\"][i][\"msg_type\"])}</li>\n                            <li>data: {hs(config[\"steps\"][i][\"data\"])}</li>\n                            <li>active: {config[\"steps\"][i][\"active\"]}</li>\n                        </ul>\n                    </div>\n                )}\n                </div>\n                <h4>LED</h4>\n                <h4>control</h4>\n            </div>\n        </div>\n    );\n};\n*/\n\nconst ControlTable = ({ obj, config }) => {\n    if (config === null || config === undefined) return null;\n    return (\n        <div className=\"dump-control\">\n            <table>\n                <tbody>\n                    <tr>\n                        <td colSpan={7} className=\"name\">{CONTROLS[obj]}</td>\n                    </tr>\n                    {Object.keys(config[\"steps\"]).map(i =>\n                        <tr key={`${obj}.${i}`}>\n                            <td>step {i}</td>\n                            <td>ch. {h(config[\"steps\"][i][\"channel\"])}</td>\n                            <td>msg {h(config[\"steps\"][i][\"msg_type\"])}</td>\n                            <td>{MSG_TYPES[config[\"steps\"][i][\"msg_type\"]]}</td>\n                            <td>{hs(config[\"steps\"][i][\"data\"])}</td>\n                            <td>{config[\"steps\"][i][\"msg_type\"] === MSG_SW_NOTE ? Note.fromMidi(config[\"steps\"][i][\"data\"][0], true) : \"  \"}</td>\n                            <td>active {config[\"steps\"][i][\"active\"]}</td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nconst Controls = ({ controls }) => {\n    if (controls === null || controls === undefined) return null;\n    return (\n        <div className=\"dump-controls\">\n            {Object.keys(controls).map(obj => <ControlTable key={obj} obj={obj} config={controls[obj]} />)}\n        </div>\n    );\n};\n\nconst Preset = ({ index, data }) => {\n    if (data === null || data === undefined) return null;\n    return (\n        <div>\n            <h2>Preset {presetIndexToXY(parseInt(index, 10))} (#{index})</h2>\n            <Controls controls={data[\"controls\"]} />\n            <Midis controls={data[\"controls\"]} />\n            {/*<pre>{JSON.stringify(data, null, 4)}</pre>*/}\n            {/*<pre>{JSON.stringify(data, null, 4)}</pre>*/}\n        </div>\n    );\n};\n\nconst Presets = ({ presets }) => {\n    if (presets === null || presets === undefined) return null;\n    return (\n        <div>\n            {Object.keys(presets).map(idx => <Preset key={idx} index={idx} data={presets[idx]} />)}\n        </div>\n    );\n};\n\nconst DumpSysex = ({ data }) => {\n    return (\n        <div className=\"dump code\">\n            {\n                // _.map(data, (value, key) => <Preset name={key} data={value} />)\n                data && <Presets presets={data[TARGET_PRESET]} />\n            }\n{/*\n            {\n                JSON.stringify(data, null, 4)\n            }\n*/}\n        </div>\n    );\n};\n\n\nexport default DumpSysex;\n","import React, {Component} from 'react';\nimport * as WebMidi from \"webmidi\";\nimport {inputById, portById} from \"../utils/ports\";\n\n/**\n *\n * @param props\n * @constructor\n */\nclass Midi extends Component {\n\n    //TODO: allow specification of channel and message types to listen to\n\n    state = {\n        inputs: [],         // array of MIDI inputs (copied from WebMidi object)\n        outputs: [],        // array of MIDI outputs (copied from WebMidi object)\n        input: null,        // MIDI output port enabled\n        output: null,       // MIDI output port enabled\n    };\n\n    connectInput = port => {\n        if (port) {\n            if (port.hasListener('midimessage', 'all', this.props.onMidiInputEvent)) {\n                console.warn(`Midi.connectInput: sysex messages on all channels listener already connected`);\n            } else {\n                console.log(`Midi.connectInput: add listener for sysex messages on all channels`);\n                port.addListener('midimessage', 'all', this.props.onMidiInputEvent);\n            }\n        }\n    };\n\n    disconnectInput = port => {\n        if (port) {\n            port.removeListener();\n            console.log(`disconnectInput: input ${port.id} disconnected`);\n        }\n    };\n\n    connectOutput = port => {\n        if (port) {\n            this.setState({output: port.id});\n            console.log(`connectOutput: input ${port.id} connected`);\n            if (this.props.setOutput) {\n                this.props.setOutput(port.id);\n            }\n        }\n    };\n\n    disconnectOutput = () => {\n        // if (port) {\n            this.setState({output: null});\n            console.log(`disconnectInput: output disconnected`);\n            if (this.props.setOutput) {\n                this.props.setOutput(null);\n            // }\n        }\n    };\n\n    autoConnectInput = () => {\n\n        if (this.props.autoConnect) {\n\n            console.log(`Midi.autoConnectInput: autoConnect ${this.props.autoConnect}`, this.state.inputs);\n\n            if (this.state.input === null) {\n\n                for (let port of this.state.inputs) {      //WebMidi.inputs) {\n\n                    console.log(`Midi.autoConnectInput: port ${port.name} ${port.id}`);\n\n                    if (port.type === 'input' && port.name.match(this.props.autoConnect)) {  // TODO: check manufacturer too; TODO: match case insensitive\n\n                        console.log(`Midi.autoConnectInput: connect ${port.name}`);\n\n                        this.setState({input: port.id});\n\n                        this.connectInput(port);\n\n                        // if (port.hasListener('noteon', 'all', this.props.onMidiInputEvent)) {\n                        //     console.warn(`Midi.autoConnectInput: autoConnect: listener already connected`);\n                        // } else {\n                        //     console.log(`Midi.autoConnectInput: autoConnect: add listener`);\n                        //     port.addListener('noteon', 'all', this.props.onMidiInputEvent);\n                        // }\n                        break;\n                    }\n                }\n\n            } else {\n                console.log(`Midi.autoConnectInput: autoConnect skipped, already connected`);\n            }\n        }\n    };\n\n    autoConnectOutput = () => {\n\n        if (this.props.autoConnect) {\n\n            console.log(`Midi.autoConnectOutput: autoConnect ${this.props.autoConnect}`);\n\n            if (this.state.output === null) {\n\n                for (let port of this.state.outputs) {\n\n                    console.log(`Midi.autoConnectOutput: port ${port.name} ${port.id}`);\n\n                    if (port.type === 'output' && port.name.match(this.props.autoConnect)) {  // TODO: check manufacturer too; TODO: match case insensitive\n\n                        console.log(`Midi.autoConnectOutput: autoConnect: auto-connect ${port.name}`);\n\n                        // this.setState({output: port.id});\n                        this.connectOutput(port);\n\n                        break;\n                    }\n                }\n\n            } else {\n                console.log(`Midi.autoConnectOutput: autoConnect skipped, already connected`);\n            }\n        }\n    };\n\n    registerInputs = () => {\n        console.log(\"Midi.registerInputs\");\n        this.setState({ inputs: WebMidi.inputs }, () => this.autoConnectInput());\n    };\n\n    registerOutputs = () => {\n        console.log(\"Midi.registerOutputs\");\n        this.setState({ outputs: WebMidi.outputs }, () => this.autoConnectOutput());\n    };\n\n    unRegisterInputs = () => {\n        console.log(\"Midi.registerInputs\");\n        this.disconnectInput(portById(this.state.input));\n        this.setState({ inputs: [], input: null });\n    };\n\n    unRegisterOutputs = () => {\n        console.log(\"Midi.registerOutputs\");\n        this.setState({ outputs: [], output: null });\n    };\n\n    handleMidiConnectEvent = e => {\n\n        console.group(`Midi: handleMidiConnectEvent: ${e.port.type} ${e.type}: ${e.port.name}`, e);\n\n        // TODO: is disconnect event, remove the existing input listeners\n        /*\n        if (e.type === \"disconnected\") {\n            // console.log(`must disconnect ${e.port} ${e.port.id}`);\n            this.disconnectInput(e.port.id);\n        }\n        */\n\n        if (e.port.type === 'input') {\n            // console.log(`ignore MIDI input connect event`);\n            console.log(\"Midi: call registerInputs\");\n            this.registerInputs();\n        }\n\n        if (e.port.type === 'output') {\n            console.log(\"Midi: call registerOutputs\");\n            this.registerOutputs();\n        }\n\n        // Note: if we don't display the events, than the UI will not be updated if we don't update the state.\n\n        console.groupEnd();\n\n    };\n\n    togglePort = (port_id) => {\n        let p = portById(port_id);\n        if (p.type === 'input') {\n            console.log(\"toggle input\");\n            let prev = this.state.input;\n            if (this.state.input) {\n                this.disconnectInput(portById(this.state.input));\n                // this.setState({ input: null });\n            }\n            if (port_id !== prev) {\n                this.connectInput(inputById(port_id));\n                // this.setState({ input: port_id });\n            }\n            this.setState({ input: port_id === prev ? null : port_id });\n        } else {\n            console.log(\"toggle output\");\n            // There is nothing to \"connect\" for an output port since this type of port does not generate any event.\n            // if (this.state.output) this.disconnectOutput(this.state.output);\n            this.setState({ output: port_id === this.state.output ? null : port_id });\n        }\n    };\n\n    midiOn = err => {\n        if (err) {\n            console.warn(\"Midi.midiOn: WebMidi could not be enabled.\", err);\n        } else {\n            console.log(\"Midi.midiOn: WebMidi enabled\");\n            WebMidi.addListener(\"connected\", this.handleMidiConnectEvent);\n            WebMidi.addListener(\"disconnected\", this.handleMidiConnectEvent);\n\n            /*\n            if (WebMidi.hasListener(\"connected\", this.handleMidiConnectEvent)) {\n                console.log(\"MidiPorts.componentDidMount: handleMidiConnectEvent already set on 'connected' event\");\n            } else {\n                WebMidi.addListener(\"connected\", this.handleMidiConnectEvent);\n            }\n            if (WebMidi.hasListener(\"disconnected\", this.handleMidiConnectEvent)) {\n                console.log(\"MidiPorts.componentDidMount: handleMidiConnectEvent already set on 'disconnected' event\");\n            } else {\n                WebMidi.addListener(\"disconnected\", this.handleMidiConnectEvent);\n            }\n            */\n        }\n    };\n\n    componentDidMount() {\n        console.log(`Midi: component did mount: WebMidi.enabled=${WebMidi.enabled}`);\n        if (WebMidi.enabled) {\n            console.log(`Midi: component did mount: already enabled, register ports`);\n            this.registerInputs();\n            this.registerOutputs();\n        } else {\n            console.log(\"Midi: component did mount: Calling WebMidi.enable\");\n            WebMidi.enable(this.midiOn, true);  // true to enable sysex support\n        }\n    }\n\n    componentWillUnmount() {\n        console.log(\"Midi: component will unmount: unregister ports\");\n        this.unRegisterInputs();\n        this.unRegisterOutputs();\n    }\n\n    render() {\n        let {inputs, outputs} = this.state;\n        return (\n            <div className={this.props.className}>\n                {inputs.map(port => this.props.inputRenderer(port, port.id === this.state.input, this.togglePort))}\n                {outputs.map(port => this.props.outputRenderer(port, port.id === this.state.output, this.togglePort))}\n            </div>\n        );\n    }\n\n}\n\nexport default Midi;\n\n","import React, {Component} from \"react\";\nimport \"./MidiPort.css\";\nimport Switch from \"react-switch\";\n\nclass MidiPorts extends Component {\n\n    render() {\n\n        let port = this.props.port;\n        let isSelected = this.props.selected;\n        let clickHandler = this.props.clickHandler;\n\n        console.log(\"MidiPort.render\", port.type, port.name, isSelected);\n\n        //TODO: display MIDI channel when connected\n        return (\n            <div key={port.id} className={isSelected ? `port ${port.type} enabled` : `port ${port.type}`}>\n                <div className={\"port-description\"}>\n                    <span className=\"type\">{port.type === 'input' ? 'in' : 'out'}: </span>\n                    <span className=\"port-name\">{port.name} </span>\n                    <Switch\n                        onChange={() => clickHandler(port.id)}\n                        checked={isSelected}\n                        className=\"react-switch\"\n                        id=\"normal-switch\"\n                        height={20} width={42}\n                    />\n                </div>\n            </div>\n        );\n\n/*\n        return (\n            <div key={port.id} className={isSelected ? `port ${port.type} enabled` : `port ${port.type}`}>\n                <div className={\"port-description\"}>\n                    <div className=\"type\">{port.type} {port.type === 'input' ? 'from' : 'to'}</div>\n                    <div className=\"port-name\">{port.name}</div>\n                </div>\n                <div className={\"port-state\"}>\n                    <Switch\n                        onChange={() => clickHandler(port.id)}\n                        checked={isSelected}\n                        className=\"react-switch\"\n                        id=\"normal-switch\"\n                        height={20} width={42}\n                    />\n                    <span className={isSelected ? \"port-usage selected\" : \"port-usage\"}\n                          onClick={() => clickHandler(port.id)}>{isSelected ? \"enabled\" : \"disabled\"}</span>\n                </div>\n            </div>\n        );\n*/\n    }\n\n}\n\nexport default MidiPorts;\n","import React, {Component} from 'react';\nimport {isSysexData, mergeDeep, parseSysexDump} from \"../utils/sysex\";\nimport {requestPreset, requestPresetObj, SYSEX_SIGNATURE} from \"../pacer/index\";\nimport {outputById} from \"../utils/ports\";\nimport {fromHexString, h, hs} from \"../utils/hexstring\";\nimport \"./TestSender.css\";\nimport {produce} from \"immer\";\nimport DumpSysex from \"../components/DumpSysex\";\nimport {checksum} from \"../pacer\";\nimport Midi from \"../components/Midi\";\nimport MidiPort from \"../components/MidiPort\";\n\nclass TestSender extends Component {\n\n    state = {\n        output: null,           // MIDI output port used for output\n        data: null,\n        messages: [\n            requestPreset(5),\n            requestPresetObj(5, 0x0D)\n        ],\n        customMessage: \"\",\n        checksum: null\n    };\n\n    updateCustomMessage = (event) => {\n        let s = (event.target.value.match(/[0-9a-fA-F]+/g) || []).join('');\n        let h = '';\n        for (let i=0; i<s.length; i++) {\n            if ((i > 0) && (i % 2 === 0)) h += ' ';\n            h += s[i];\n        }\n        this.setState({\n            customMessage: h,\n            cs: checksum(fromHexString(h, / /g))\n        });\n    };\n\n    sendCustomMessage = () => {\n        let data = fromHexString(this.state.customMessage, / /g);\n        if (data && data.length > 0) this.sendSysex(data);\n    };\n\n    handleMidiInputEvent = (event) => {\n        console.log(\"TestSender.handleMidiInputEvent\", event, event.data);\n        // if (event instanceof MIDIMessageEvent) {\n        if (isSysexData(event.data)) {\n            console.log(\"TestSender.handleMidiInputEvent: update state\");\n            this.setState(\n                produce(draft => {\n                    draft.data = mergeDeep(draft.data || {}, parseSysexDump(event.data));\n                    // this.props.onBusy(false);\n                })\n            )\n        } else {\n            console.log(\"MIDI message is not a sysex message\")\n        }\n        // }\n    };\n\n    renderPort = (port, selected, clickHandler) => {\n        if (port === undefined || port === null) return null;\n        return (\n            <MidiPort key={port.id} port={port} selected={selected} clickHandler={clickHandler} />\n        )\n    };\n\n    setOutput = (port_id) => {\n        console.log(`Page.setOutput ${port_id}`);\n        this.setState({output: port_id});\n    };\n\n    sendSysex = msg => {\n        console.log(\"sendSysex\", msg);\n        if (!this.state.output) return;\n        let out = outputById(this.state.output);\n        if (!out) {\n            console.warn(`send: output ${this.state.output} not found`);\n            return;\n        }\n        this.setState(\n            {data: null},\n            () => out.sendSysex(SYSEX_SIGNATURE, msg)\n        );\n    };\n\n    sendMessage = (msg) => {\n        this.sendSysex(msg);\n    };\n\n    /**\n     * @returns {*}\n     */\n    render() {\n\n        console.log(\"SendTester.render\", this.props);\n\n        const { data, messages, customMessage, cs } = this.state;\n\n        console.log(\"SendTester.render\", messages, customMessage.length % 2);\n\n        return (\n            <div className=\"wrapper\">\n                <div className=\"content\">\n\n                    <h2>MIDI ports:</h2>\n\n                    <Midi inputRenderer={this.renderPort} outputRenderer={this.renderPort}\n                          autoConnect={/Pacer midi1/i} onMidiInputEvent={this.handleMidiInputEvent}\n                          setOutput={this.setOutput}\n                          className=\"sub-header\" />\n\n                    <div className=\"main\">\n\n                        <h2>Test messages:</h2>\n                        <div>\n                            {messages.map((msg, i) =>\n                                <div key={i} className=\"send-message\">\n                                    <button onClick={() => this.sendMessage(msg)}>send</button>\n                                    <span className=\"code light\">{hs(SYSEX_SIGNATURE)} </span>\n                                    <span className=\"code\">{hs(msg)}</span>\n                                    <span className=\"code light\"> {h(checksum(msg))}</span>\n                                </div>\n                            )}\n                        </div>\n\n                        <h2>Custom message:</h2>\n                        <div>\n                            <div className=\"send-message\">\n                                <button onClick={this.sendCustomMessage} disabled={customMessage.length === 0}>send</button>\n                                <span className=\"code light\">{hs(SYSEX_SIGNATURE)} </span>\n                                <input type=\"text\" className=\"code\" size=\"30\" value={customMessage} placeholder={\"hex digits only\"} onChange={this.updateCustomMessage} />\n                                <span className=\"code light\"> {h(cs)}</span>\n                            </div>\n                        </div>\n\n                        <h2>Response:</h2>\n                        <div className=\"message code\">\n                            {data && JSON.stringify(data)}\n                            <DumpSysex data={data} />\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className=\"help\">\n                    <h2>Help</h2>\n                </div>\n\n            </div>\n\n        );\n    }\n}\n\nexport default TestSender;\n","import React from \"react\";\nimport \"./PresetSelectors.css\";\nimport {presetXYToIndex} from \"../pacer\";\n\nconst PresetSelector = ({ name, id, selected, onClick }) =>\n    <div className={selected ? \"selected\" : \"\"} onClick={() => onClick(id)}>{name}</div>;\n\nconst PresetSelectors = ({ currentPreset, onClick }) =>\n    <div className=\"selectors\">\n    {\n        ['A', 'B', 'C', 'D'].map(\n            e => {\n                return (\n                    <div key={e}>{\n                        Array.from(Array(6).keys()).map(\n                            i => {\n                                let name = e + (i + 1);\n                                let id = presetXYToIndex(name);\n                                return <PresetSelector name={name} id={id} selected={id === currentPreset} onClick={onClick} key={id} />\n                            })\n                    }</div>)\n            }\n        )\n    }\n    </div>;\n\n/*\n\n    with CSS grid\n\nconst PresetSelectors = ({ currentPreset }) =>\n    <div>\n        <h2>Preset:</h2>\n        <div className=\"selectors\">\n            {\n                ['A', 'B', 'C', 'D'].map(\n                    e => {\n                        return Array.from(Array(6).keys()).map(\n                            i => {\n                                let id = e + (i+1);\n                                console.log(id, currentPreset);\n                                return <PresetSelector name={id} selected={id === currentPreset} />\n                            }\n                        )\n                    }\n                )\n            }\n        </div>\n    </div>;\n*/\n\nexport default PresetSelectors;\n","import React from \"react\";\nimport \"./Controls.css\";\nimport {FOOTSWITCHES, STOMPSWITCHES_TOP, STOMPSWITCHES_BOTTOM, EXPPEDALS, CONTROLS} from \"../pacer\";\n\nconst Control = ({ name, id, selected, onClick }) =>\n    <div className={selected ? \"selected\" : \"\"} onClick={() => onClick(id)}>\n        <div className=\"name\">{name}</div>\n    </div>;\n\n\nconst Controls = ({ currentControl, onClick }) =>\n    <div className=\"controls\">\n        {\n            FOOTSWITCHES.map(\n                key => <Control key={key} name={CONTROLS[key]} id={key} selected={key === currentControl} onClick={onClick} />\n            )\n        }\n        {\n            EXPPEDALS.map(\n                key => <Control key={key} name={CONTROLS[key]} id={key} selected={key === currentControl} onClick={onClick} />\n            )\n        }\n        <div className=\"empty\">&nbsp;</div>\n        {\n            STOMPSWITCHES_TOP.map(\n                key => <Control key={key} name={CONTROLS[key]} id={key} selected={key === currentControl} onClick={onClick} />\n            )\n        }\n        <div className=\"empty\">&nbsp;</div>\n        {\n            STOMPSWITCHES_BOTTOM.map(\n                key => <Control key={key} name={CONTROLS[key]} id={key} selected={key === currentControl} onClick={onClick} />\n            )\n        }\n    </div>;\n\n\nexport default Controls;\n","import React, {Component, Fragment} from 'react';\nimport {MSG_SW_NOTE, MSG_TYPES_FULLNAME} from \"../pacer\";\nimport * as Note from \"tonal-note\";\nimport \"./ControlStepsEditor.css\";\n\n\nconst MidiNote = ({ note, onChange }) => {\n    console.log(`MidiNote ${note}`, typeof note);\n    return (\n        <select onChange={(event) => onChange(event.target.value)} defaultValue={note}>\n            {\n                Array.from(Array(127).keys()).map(\n                    i => {\n                        let n = Note.fromMidi(i, true);\n                        return <option key={i} value={i}>{n}</option>\n                    })\n            }\n        </select>\n    );\n};\n\nconst Step = ({ index, config, updateCallback }) => {\n\n    let d0, d1, d2;\n    if (config.msg_type === MSG_SW_NOTE) {\n        // d0 = `note ${Note.fromMidi(config.data[0], true)}`;\n        d0 = <MidiNote note={config.data[0]} onChange={(value) => updateCallback(\"data\", 0, value)} />;\n        d1 = <input type=\"text\" value={config.data[1]} size=\"4\" onChange={(event) => updateCallback(\"data\", 1, event.target.value)} />;\n        d2 = '';\n    } else {\n        d0 = <input type=\"text\" value={config.data[0]} size=\"4\" onChange={(event) => updateCallback(\"data\", 0, event.target.value)} />;\n        d1 = <input type=\"text\" value={config.data[1]} size=\"4\" onChange={(event) => updateCallback(\"data\", 1, event.target.value)} />;\n        d2 = <input type=\"text\" value={config.data[2]} size=\"4\" onChange={(event) => updateCallback(\"data\", 2, event.target.value)} />;\n    }\n\n    return (\n        <Fragment>\n            <div>step {index}:</div>\n            <div>\n                <select onChange={(event) => updateCallback(\"msg_type\", null, event.target.value)} defaultValue={config.msg_type}>\n                {\n                    Object.keys(MSG_TYPES_FULLNAME).map(\n                        key => {\n                            // let n = Note.fromMidi(i, true);\n                            return <option key={key} value={key}>{MSG_TYPES_FULLNAME[key]}</option>\n                        })\n                }\n                </select>\n            </div>\n            <div>{d0}</div>\n            <div>{d1}</div>\n            <div>{d2}</div>\n            <div>\n                <select onChange={(event) => updateCallback(\"channel\", null, event.target.value)} defaultValue={config.channel}>\n                {\n                    Array.from(Array(16).keys()).map(i => <option key={i} value={i}>{i}</option>)\n                }\n                </select>\n            </div>\n        </Fragment>\n    );\n};\n\nclass ControlStepsEditor extends Component {\n\n    // state = {\n    //     config: this.props.config\n    // };\n\n    onStepUpdate = (stepIndex, dataType, dataIndex, value) => {\n        console.log(`ControlStepsEditor.onStepUpdate`, stepIndex, dataIndex, value);\n        //\n        // produce(draft => {\n        //     draft.config.steps[stepIndex].data[dataIndex] = value;\n        //     // this.props.onBusy(false);\n        // });\n        //\n        this.props.onUpdate(stepIndex, dataType, dataIndex, value);    // stepIndex, dataIndex, value\n    };\n\n    render() {\n\n        // const presetIndex = this.props.presetIndex;\n        // const controlId = this.props.controlId;\n\n        //config={data[\"1\"][\"5\"][\"controls\"][controlId]}\n\n        const steps = this.props.steps;\n\n        console.log(\"ControlStepsEditor.render\", steps);\n\n        // let c = config[\"1\"][presetIndex][\"controls\"][controlId];\n        /*\n            <div className=\"control-editor\">\n                <h2>{CONTROLS_FULLNAME[controlId]}</h2>\n                <div>\n                    <h3>setup</h3>\n                    <div></div>\n                    <h3>steps</h3>\n*/\n\n        return (\n                    <div className=\"steps\">\n                        <div></div>\n                        <div>Type</div>\n                        <div>Data 1</div>\n                        <div>Data 2</div>\n                        <div>Data 3</div>\n                        <div>MIDI Channel</div>\n                        {Object.keys(steps).map(i =>\n                            <Step key={i} index={i} config={steps[i]} updateCallback={(dataType, dataIndex, value) => this.onStepUpdate(i, dataType, dataIndex, value)} />\n                        )}\n                    </div>\n\n/*\n                </div>\n            </div>\n*/\n        );\n    }\n}\n\nexport default ControlStepsEditor;","import React, {Component} from 'react';\nimport PresetSelectors from \"../components/PresetSelectors\";\nimport {buildControlStepSysex, isSysexData, mergeDeep, parseSysexDump} from \"../utils/sysex\";\nimport Controls from \"../components/Controls\";\nimport {requestPresetObj, SYSEX_SIGNATURE} from \"../pacer\";\nimport {hs} from \"../utils/hexstring\";\nimport {produce} from \"immer\";\nimport {outputById} from \"../utils/ports\";\nimport ControlStepsEditor from \"../components/ControlStepsEditor\";\nimport Midi from \"../components/Midi\";\nimport MidiPort from \"../components/MidiPort\";    // DEBUG ONLY  //TODO: remove after debug\n\nclass Presets extends Component {\n\n    state = {\n        output: null,           // MIDI output port used for output\n        presetIndex: \"\",      // preset name, like \"B2\"\n        controlId: \"\",     //\n        data: null\n    };\n\n    selectPreset = (id) => {\n        console.log(`selectPreset ${id}`);\n        this.setState({\n            presetIndex: id\n        });\n        if (id && this.state.controlId) {\n            this.sendSysex(requestPresetObj(id, this.state.controlId));\n        }\n    };\n\n    selectControl = (id) => {\n        console.log(`selectControl ${id}`);\n        let msg = requestPresetObj(this.state.presetIndex, id);\n        this.setState({\n            controlId: id\n        });\n        if (this.state.presetIndex && id) {\n            this.sendSysex(requestPresetObj(this.state.presetIndex, id));\n        }\n    };\n\n    /**\n     * dataIndex is only used when dataType == \"data\"\n     */\n    controlStepsUpdate = (controlId, stepIndex, dataType, dataIndex, value) => {\n        console.log(\"Presets.controlStepsUpdate\", controlId, stepIndex, dataIndex, value);\n        this.setState(\n            produce(draft => {\n                if (dataType === \"data\") {\n                    draft.data[\"1\"][draft.presetIndex][\"controls\"][controlId][\"steps\"][stepIndex][\"data\"][dataIndex] = parseInt(value, 10);\n                } else {\n                    draft.data[\"1\"][draft.presetIndex][\"controls\"][controlId][\"steps\"][stepIndex][dataType] = parseInt(value, 10);\n                }\n                draft.data[\"1\"][draft.presetIndex][\"controls\"][controlId][\"steps\"][stepIndex][\"changed\"] = true;\n                // this.props.onBusy(false);\n            })\n        );\n    };\n\n    sendSysex = msg => {\n        console.log(\"sendSysex\", msg);\n        if (this.state.output) {\n            this.setState(\n                {data: null},\n                () => outputById(this.state.output).sendSysex(SYSEX_SIGNATURE, msg)\n            );\n        }\n    };\n\n    handleMidiInputEvent = (event) => {\n        console.log(\"Presets.handleMidiInputEvent\", event, event.data);\n        // if (event instanceof MIDIMessageEvent) {\n        if (isSysexData(event.data)) {\n            this.setState(\n                produce(draft => {\n                    draft.data = mergeDeep(draft.data || {}, parseSysexDump(event.data));\n                    // this.props.onBusy(false);\n                })\n            )\n        } else {\n            console.log(\"MIDI message is not a sysex message\")\n        }\n        // }\n    };\n\n    renderPort = (port, selected, clickHandler) => {\n        if (port === undefined || port === null) return null;\n        return (\n            <MidiPort key={port.id} port={port} selected={selected} clickHandler={clickHandler} />\n        )\n    };\n\n    setOutput = (port_id) => {\n        console.log(`Page.setOutput ${port_id}`);\n        this.setState({output: port_id});\n    };\n\n    sendSysex = msg => {\n        console.log(\"sendSysex\", msg);\n        if (!this.state.output) return;\n        let out = outputById(this.state.output);\n        if (!out) {\n            console.warn(`send: output ${this.state.output} not found`);\n            return;\n        }\n        this.setState(\n            {data: null},\n            () => out.sendSysex(SYSEX_SIGNATURE, msg)\n        );\n    };\n\n\n    render() {\n        const { presetIndex, controlId, data } = this.state;\n\n        let ok = false;\n\n        if (data) {\n\n            ok = true;\n\n            if (!(\"1\" in data)) {        // TODO: replace \"1\" by a constant\n                console.log(`Presets: invalid data`, data);\n                ok = false;\n            }\n\n            if (ok && !(presetIndex in data[\"1\"])) {        // TODO: replace \"1\" by a constant\n                console.log(`Presets: preset ${presetIndex} not found in data`);\n                ok = false;\n            }\n\n            if (ok && !(\"controls\" in data[\"1\"][presetIndex])) {\n                console.log(`Presets: controls not found in data`);\n                ok = false;\n            }\n\n            if (ok && !(controlId in data[\"1\"][presetIndex][\"controls\"])) {\n                console.log(`Presets: control ${controlId} not found in data`);\n                ok = false;\n            }\n\n            if (ok && !(\"steps\" in data[\"1\"][presetIndex][\"controls\"][controlId])) {\n                console.log(`Presets: steps not found in data`);\n                ok = false;\n            }\n        }\n\n        if (ok) {\n            console.log(\"Presets.render\", ok, Object.keys(data[\"1\"][presetIndex][\"controls\"][controlId][\"steps\"]).length, data);\n        } else {\n            console.log(\"Presets.render\", ok);\n        }\n\n        ok = ok && (Object.keys(data[\"1\"][presetIndex][\"controls\"][controlId][\"steps\"]).length === 6);\n\n        const showEditor = ok;  // && presetIndex && controlId;\n\n        let updateMessages;\n        if (ok) {\n            updateMessages = buildControlStepSysex(presetIndex, controlId, data[\"1\"][presetIndex][\"controls\"][controlId][\"steps\"]);\n        }\n\n        return (\n            <div className=\"wrapper\">\n                <div className=\"content\">\n\n                    <h2>1. Enable the input and output MIDI ports used with your Pacer:</h2>\n\n                    {/*<div className=\"sub-header\">*/}\n\n                        <Midi inputRenderer={this.renderPort} outputRenderer={this.renderPort}\n                              autoConnect={/Pacer midi1/i} onMidiInputEvent={this.handleMidiInputEvent}\n                              setOutput={this.setOutput}\n                              className=\"sub-header\" />\n\n                        {/*{this.props.inputPorts && <MidiPorts ports={this.props.inputPorts} type=\"input\" onMidiEvent={this.handleMidiInputEvent} />}*/}\n                        {/*{this.props.outputPorts && <MidiPorts ports={this.props.outputPorts} type=\"output\" onPortSelection={this.enablePort} />}*/}\n                    {/*</div>*/}\n\n                    <div className=\"main\">\n\n                        <div>\n                            <h2>2. Choose the preset and the control to view/edit:</h2>\n\n                            <PresetSelectors currentPreset={presetIndex} onClick={this.selectPreset} />\n\n                            {presetIndex && <Controls currentControl={controlId} onClick={this.selectControl} />}\n                        </div>\n\n                        {/* presetIndex && controlId &&\n                        <div>\n                            <h3>preset {presetIndexToXY(presetIndex)}, control {CONTROLS[controlId]}</h3>\n                            <div>\n                                sysex message to request config: <span className=\"code\">{hs(message)}</span>\n                            </div>\n\n                            <h3>Response:</h3>\n                            <div className=\"message code\">\n                                <DumpSysex data={data} />\n                            </div>\n                        </div>\n                        */}\n\n                        {showEditor && <ControlStepsEditor controlId={controlId}\n                                                           steps={data[\"1\"][presetIndex][\"controls\"][controlId][\"steps\"]}\n                                                           onUpdate={(stepIndex, dataType, dataIndex, value) => this.controlStepsUpdate(controlId, stepIndex, dataType, dataIndex, value)} />}\n                        {/*<ControlEditor presetIndex={5} config={A5SW5[\"1\"][\"5\"][\"controls\"][\"17\"]} />*/}\n\n                        {showEditor &&\n                        <div>\n                            Update message to send:\n                            {updateMessages.map(m => <pre>{hs(m)}</pre>)}\n                        </div>\n                        }\n\n                        <pre>{JSON.stringify(data, null, 4)}</pre>\n\n                    </div>\n                </div>\n\n                <div className=\"help\">\n                    <h2>Help</h2>\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\nexport default Presets;\n","import React, {Component} from 'react';\nimport Midi from \"../components/Midi\";\nimport {produce} from \"immer\";\nimport MidiPort from \"../components/MidiPort\";\nimport parseMidi from 'parse-midi';\n\nclass Monitor extends Component {\n\n    state = {\n        messages: []\n    };\n\n    handleMidiInputEvent = (event) => {\n        console.log(\"Monitor.handleMidiInputEvent\", event, event.type, event.data);\n        // if (event instanceof MIDIMessageEvent) {\n        this.setState(\n            produce(draft => { draft.messages.push(event.data) })\n        )\n        // }\n    };\n\n    renderPort = (port, selected, clickHandler) => {\n        if (port === undefined || port === null) return null;\n        return (\n            <MidiPort key={port.id} port={port} selected={selected} clickHandler={clickHandler} />\n        )\n    };\n\n    render() {\n\n        return (\n\n            <div className=\"wrapper\">\n                <div className=\"content\">\n                    <div>\n\n                        <Midi inputRenderer={this.renderPort} outputRenderer={this.renderPort}\n                              autoConnect={/Pacer midi1/i} onMidiInputEvent={this.handleMidiInputEvent}\n\n                              className=\"sub-header\" />\n\n                        <div className=\"main\">\n                            <div>\n                                <h2>2. MIDI messages:</h2>\n                            </div>\n                            <div>\n                                {this.state.messages.map((msg, i) => {\n                                    let m = parseMidi(msg);\n                                    console.log(m);\n                                    return <div key={i}>{Object.keys(m).map(k => <span>{`${k}: ${m[k]}`} </span>)}</div>\n                                    // return <pre key={i}>{hs(msg)} {parseMidi(msg)}</pre>\n                                })}\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className=\"help\">\n                    <h2>Help</h2>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Monitor;\n","import React from 'react';\nimport \"./Footer.css\";\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <p>“Nektar Technology”, the logo and all other Nektar Technology product, technology or service names and\n                logos are trademarks or registered trademarks of Nektar Technology, Inc.</p>\n            <p>This web site is not endorsed by, directly affiliated with, maintained, or sponsored by Nektar Technology.\n                This web site is published under <a href=\"https://www.gnu.org/licenses/gpl-3.0.en.html\" target=\"_blank\" rel=\"noopener noreferrer\">GNU General Public License v3</a>\n            </p>\n        </div>\n    );\n};\n\nexport default Footer;\n","import React, {Component} from 'react';\n\nclass Global extends Component {\n\n    render() {\n\n        return (\n\n            <div className=\"wrapper\">\n                <div className=\"content\">\n                    <div>\n\n                        Sorry, this feature is not implemented yet.\n\n{/*\n                        <h2>1. Enable the input and output MIDI ports used with your Pacer:</h2>\n\n                        <div className=\"sub-header\">\n                        </div>\n\n                        <div className=\"main\">\n                            <div>\n                                <h2>2. MIDI messages:</h2>\n                            </div>\n                        </div>\n*/}\n\n                    </div>\n                </div>\n\n                <div className=\"help\">\n                    <h2>Help</h2>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Global;\n","import React, {Component} from 'react';\nimport Dropzone from \"react-dropzone\";\nimport {produce} from \"immer\";\nimport {isSysexData, mergeDeep, parseSysexDump} from \"../utils/sysex\";\nimport DumpSysex from \"../components/DumpSysex\";\nimport './DumpDecoder.css';\nimport {hs} from \"../utils/hexstring\";\nimport Midi from \"../components/Midi\";\nimport MidiPort from \"../components/MidiPort\";\n\nconst MAX_FILE_SIZE = 5 * 1024*1024;\n\nclass DumpDecoder extends Component {\n\n    state = {\n        data: null\n    };\n\n    /**\n     *\n     * @param files\n     * @returns {Promise<void>}\n     */\n    async readFiles(files) {\n        await Promise.all(files.map(\n            async file => {\n                if (file.size > MAX_FILE_SIZE) {\n                    console.warn(`${file.name}: file too big, ${file.size}`);\n                } else {\n                    const data = new Uint8Array(await new Response(file).arrayBuffer());\n                    if (isSysexData(data)) {\n                        this.setState(\n                            produce(draft => {\n                                draft.data = mergeDeep(draft.data || {}, parseSysexDump(data));\n                                this.props.onBusy(false);\n                            })\n                        )\n                    } else {\n                        console.log(\"readFiles: not a sysfile\", hs(data.slice(0, 5)));\n                    }\n                    // non sysex files are ignored\n                }\n                // too big files are ignored\n            }\n        ));\n    }\n\n    /**\n     * Drop Zone handler\n     * @param files\n     */\n    onDrop = (files) => {\n        console.log('drop', files);\n        this.props.onBusy(true);\n        this.readFiles(files);  // returned promise is ignored, this is normal.\n    };\n\n    handleMidiInputEvent = (event) => {\n        console.log(\"DumpDecoder.handleMidiInputEvent\", event, event.data);\n        // if (event instanceof MIDIMessageEvent) {\n        if (isSysexData(event.data)) {\n            console.log(\"DumpDecoder.handleMidiInputEvent: data is SysEx\");\n            this.setState(\n                produce(draft => {\n                    draft.data = mergeDeep(draft.data || {}, parseSysexDump(event.data));\n                    // this.props.onBusy(false);\n                })\n            )\n        } else {\n            console.log(\"MIDI message is not a sysex message\")\n        }\n        // }\n    };\n\n    renderPort = (port, selected, clickHandler) => {\n        if (port === undefined || port === null) return null;\n        return (\n            <MidiPort key={port.id} port={port} selected={selected} clickHandler={clickHandler} />\n        )\n    };\n\n\n    /**\n     * @returns {*}\n     */\n    render() {\n\n        const { data } = this.state;\n\n        console.log(\"DumpDecoder.render\", this.props);\n\n        return (\n            <div className=\"wrapper\">\n                <div className=\"content\">\n\n                    <h2>1. Enable the input MIDI port used with your Pacer:</h2>\n\n                    {/* TODO: select only input port in Midi */}\n                    <Midi inputRenderer={this.renderPort} outputRenderer={this.renderPort}\n                          autoConnect={/Pacer midi1/i} onMidiInputEvent={this.handleMidiInputEvent}\n                          className=\"sub-header\" />\n\n                    <div className=\"main\">\n\n                        <h2>2. Send a dump from the Pacer or drop a dump file:</h2>\n\n                        <Dropzone onDrop={this.onDrop} className=\"drop-zone\">\n                            Drop a binary sysex file here or click to open the file dialog\n                        </Dropzone>\n\n                        <DumpSysex data={data} />\n\n                    </div>\n                </div>\n\n                <div className=\"help\">\n                    <h2>Help</h2>\n                </div>\n\n            </div>\n\n        );\n    }\n}\n\nexport default DumpDecoder;\n","import React, {Component} from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport TestSender from \"./pages/TestSender\";\nimport Presets from \"./pages/Presets\";\nimport Monitor from \"./pages/Monitor\";\nimport Footer from \"./components/Footer\";\nimport Global from \"./pages/Global\";\nimport DumpDecoder from \"./pages/DumpDecoder\";\n\n\nconst MenuLink = ({ label, to, activeOnlyWhenExact }) => (\n    <Route\n        path={to}\n        exact={activeOnlyWhenExact}\n        children={({ match }) => (\n            <span className={match ? \"header-link active\" : \"header-link\"}>\n                <Link to={to}>{label}</Link>\n            </span>\n        )}\n    />\n);\n\n\nclass App extends Component {\n\n    state = {\n        busy: false\n    };\n\n    /**\n     *\n     * @param busy boolean\n     */\n    onBusy = (busy) => {\n        this.setState({ busy });\n    };\n\n    /**\n     * Main app render\n     * @returns {*}\n     */\n    render() {\n        const { busy } = this.state;\n\n        return (\n            <Router>\n                <div className=\"app\">\n\n                    <header className=\"header\">\n                        {/*<h1>Pacer Editor</h1>*/}\n                        <MenuLink activeOnlyWhenExact={true} to=\"/\" label=\"Home\" />\n                        <MenuLink to=\"/presets\" label=\"Presets\" />\n                        <MenuLink to=\"/global\" label=\"Global config\" />\n                        <MenuLink to=\"/monitor\" label=\"MIDI monitor\" />\n                        <MenuLink to=\"/dumpdecoder\" label=\"Dump decoder\" />\n                        <MenuLink to=\"/testsender\" label=\"Debug\" />\n                        <div className=\"spacer\">\n                        </div>\n                        {busy && <div className=\"busy\">busy</div>}\n                    </header>\n\n                    {/*<div className=\"wrapper\">*/}\n                        {/*<div className=\"content\">*/}\n                            <Switch>\n                                <Route exact={true} path=\"/\" render={\n                                    props => (\n                                        <Home />\n                                    )\n                                }/>\n                                <Route path=\"/presets\" render={\n                                    props => (\n                                        <Presets onBusy={this.onBusy} />\n                                    )\n                                }/>\n                                <Route path=\"/global\" render={\n                                    props => (\n                                        <Global onBusy={this.onBusy} />\n                                    )\n                                }/>\n                                <Route path=\"/monitor\" render={\n                                    props => (\n                                        <Monitor onBusy={this.onBusy} />\n                                    )\n                                }/>\n                                <Route path=\"/dumpdecoder\" render={\n                                    props => (\n                                        <DumpDecoder onBusy={this.onBusy} />\n                                    )\n                                }/>\n                                <Route path=\"/testsender\" render={\n                                    props => (\n                                        <TestSender onBusy={this.onBusy} />\n                                    )\n                                }/>\n                            </Switch>\n                        {/*</div>*/}\n                    {/*</div>*/}\n\n                    <Footer />\n\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nfunction noop() {}\nif (process.env.NODE_ENV !== 'development') {\n    console.log = noop;\n    console.warn = noop;\n    console.error = noop;\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}