{"version":3,"sources":["pages/Home.js","utils/hexstring.js","pacer/index.js","utils/sysex.js","utils/ports.js","components/DumpSysex.js","components/Midi.js","components/MidiPort.js","pages/TestSender.js","components/PresetSelector.js","components/ControlSelector.js","components/ControlStepsEditor.js","pages/Presets.js","utils/midi.js","pages/Monitor.js","components/Footer.js","pages/Global.js","pages/DumpDecoder.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","href","target","rel","Component","h","v","undefined","str","len","char","s","c","n","length","padZero","toString","toUpperCase","hs","data","Array","from","map","join","fromHexString","string","sep","replace","Uint8Array","i","parseInt","substr","SYSEX_SIGNATURE","SYSEX_HEADER","checksum","bytes","reduce","previousValue","currentValue","requestPresetObj","index","obj","msg","cs","push","concat","TARGETS","_TARGETS","Object","defineProperty","CONTROLS","1","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","54","55","126","127","STOMPSWITCHES_TOP","STOMPSWITCHES_BOTTOM","FOOTSWITCHES","EXPPEDALS","MSG_TYPES","_MSG_TYPES","MSG_TYPES_FULLNAME","_MSG_TYPES_FULLNAME","SYSEX_START","SYSEX_END","CMD","TGT","IDX","OBJ","ELM","isObject","item","isArray","mergeDeep","_len","arguments","sources","_key","source","shift","key","assign","apply","isSysexData","byteLength","parseSysexMessage","obj_type","message","cmd","tgt","idx","console","warn","log","steps","e","config","channel","msg_type","active","getControlStep","slice","error","midi","on_color","off_color","getControlLED","parseSysexDump","d","presets","indexOf","k","manufacturer_id","NEKTAR_TECHNOLOGY_INC","portById","id","p","WebMidi","inputs","find","outputs","outputById","Midis","_ref","midis","ControlTable","_ref2","colSpan","keys","Note","Controls","_ref3","controls","DumpSysex_ControlTable","Preset","_ref4","b","Math","floor","String","fromCharCode","presetIndexToXY","DumpSysex_Controls","DumpSysex_Midis","Presets","_ref5","DumpSysex_Preset","DumpSysex","_ref6","DumpSysex_Presets","Midi","state","input","output","connectInput","port","hasListener","_this","props","onMidiInputEvent","addListener","disconnectInput","removeListener","connectOutput","setState","setOutput","disconnectOutput","autoConnectInput","autoConnect","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","name","type","match","err","return","autoConnectOutput","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","registerInputs","registerOutputs","unRegisterInputs","unRegisterOutputs","handleMidiConnectEvent","group","groupEnd","togglePort","port_id","prev","midiOn","this","_this2","_this$state","inputRenderer","outputRenderer","MidiPorts","isSelected","selected","clickHandler","react_switch_default","onChange","checked","height","width","TestSender","messages","requestPreset","customMessage","updateCustomMessage","event","sendCustomMessage","sendSysex","handleMidiInputEvent","produce","draft","renderPort","components_MidiPort","out","sendMessage","components_Midi","onClick","disabled","size","placeholder","src_components_DumpSysex","Selector","PresetSelector","currentPreset","letter","react","digit","xy","charCodeAt","PresetSelector_Selector","Control","ControlSelector","currentControl","ControlSelector_Control","MidiNote","note","defaultValue","Step","d0","d1","d2","updateCallback","ControlStepsEditor_MidiNote","ControlStepsEditor","onStepUpdate","stepIndex","dataType","dataIndex","onUpdate","ControlStepsEditor_Step","presetIndex","controlId","changed","onDrop","files","readFiles","selectPreset","selectControl","controlStepsUpdate","Promise","all","asyncToGenerator","regenerator_default","mark","_callee","file","wrap","_context","t0","Response","arrayBuffer","t1","sent","pId","cId","stop","_x2","_this3","showEditor","updateMessages","msgs","_arr","_i","step","buildControlStepSysex","src_components_PresetSelector","src_components_ControlSelector","src_components_ControlStepsEditor","m","JSON","stringify","es","MESSAGE","128","144","160","176","192","208","224","CONTROLER","0","2","4","5","6","7","8","10","11","12","32","33","34","36","37","38","39","40","42","43","44","45","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","91","92","93","94","95","96","97","98","99","100","101","120","121","122","123","124","125","Monitor","unshift","pop","parseMidi","info2","info3","messageCode","velocity","controlNumber","controlValue","program","pitchBend","pitchBendMultiplier","Footer","aria-label","title","viewBox","version","aria-hidden","fillRule","Global","DumpDecoder","onBusy","MenuLink","label","to","activeOnlyWhenExact","Route","path","exact","children","Link","App","busy","HashRouter","App_MenuLink","Switch","render","src_pages_Home","src_pages_Presets","pages_Global","src_pages_Monitor","src_pages_DumpDecoder","src_pages_TestSender","src_components_Footer","Boolean","window","location","hostname","noop","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b92d379e.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport \"./Home.css\";\n\n\nclass Home extends Component {\n\n\n    render() {\n\n        return (\n            <div className=\"content\">\n\n                <h1>Requirements</h1>\n\n                <div className=\"doc\">\n                    <p>This application requires a browser that support\n                        the <a href=\"http://webaudio.github.io/web-midi-api/\" target=\"_blank\" rel=\"noopener noreferrer\">Web MIDI API</a>.</p>\n\n                    <p>Currently, only <span className=\"strong\">Chrome</span> and <span className=\"strong\">Opera</span> support this standard.\n                        This application will therefore <span className=\"italic\">not</span> work in Firefox, Safari, IE or Edge.</p>\n                </div>\n\n                <h1>Limitations</h1>\n\n                <div className=\"doc\">\n                    <p>The current version only allows you to edit the Controls' Steps.</p>\n                    <p><i>To be completed...</i></p>\n                </div>\n\n{/*\n                <h2>Usage</h2>\n\n                <div className=\"doc\">\n                    <ol>\n                        <li>Connect your Pacer to your computer</li>\n                    </ol>\n                </div>\n*/}\n\n                <h1>FAQ</h1>\n\n                <div className=\"doc\">\n                    <p><i>To be completed...</i></p>\n                </div>\n\n                <h1>Contribute</h1>\n\n                <div className=\"doc\">\n                    <p>This editor is an Open Source project. You are welcome to contribute.</p>\n                    <p>The source-code is hosted\n                    by GitHub: <a href=\"https://github.com/francoisgeorgy/pacer-editor\" target=\"_blank\" rel=\"noopener noreferrer\">pacer-editor</a></p>\n                    <p>To contribute your bug fixes, new features, etc.: 1) fork the project, 2) create a pull-request.</p>\n                </div>\n\n                <h1>Thanks</h1>\n\n                <div className=\"doc\">\n                    Thank you to the Nektar support service for having provided precious informations regarding the SysEx data format of the Pacer.<br />\n                    This editor would not have been possible without their support.\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\nexport default Home;\n","\n/*\nString.prototype.padZero = function (len, c) {\n    var s = '', c = c || '0', len = (len || 2) - this.length;\n    while (s.length < len) s += c;\n    return s + this;\n};\n*/\n\nexport const padZero = (str, len, char) => {\n    let s = '';\n    let c = char || '0';\n    let n = (len || 2) - str.length;\n    while (s.length < n) s += c;\n    return s + str;\n};\n\nexport const h = v => {\n    return (v === null || v === undefined) ? \"\" : padZero(v.toString(16).toUpperCase(), 2);\n};\n\nexport const hs = data => (data === null || data === undefined) ? \"\" : (Array.from(data).map(n => h(n))).join(\" \");    // Array.from() is necessary to get a non-typed array\n\n\n/**\n *\n * @param string\n * @param sep\n * @returns {*}\n */\nexport const fromHexString = function(string, sep) {\n    let s = sep ? string.replace(sep, '') : string;\n    if ((s.length % 2) > 0) {\n        return null;\n    }\n    if (s.length === 0) return null;\n    let a = new Uint8Array(s.length / 2);\n    for (let i=0; i < (s.length / 2); i++) {\n        a[i] = parseInt(s.substr(i * 2, 2), 16);\n    }\n    return a;\n};\n","\nexport const SYSEX_SIGNATURE = [0x00, 0x01, 0x77];\n\nexport const SYSEX_HEADER = [0x7F];\n\nexport function checksum(bytes) {\n    if (bytes === null || bytes === undefined || bytes.length === 0) return 128;\n    let sum = Uint8Array.from(bytes).reduce((previousValue, currentValue) => previousValue + currentValue);\n    return 128 - (sum % 128);\n}\n\n\n/**\n * return the sysex message to send to the Pacer to request some data\n */\nexport function requestPreset(index) {\n    let msg = [0x02, 0x01, index];      // TODO: replace numbers by constants\n    let cs = checksum(msg);\n    msg.push(cs);\n    return SYSEX_HEADER.concat(msg);\n}\n\n/**\n * return the sysex message to send to the Pacer to request some data\n */\nexport function requestPresetObj(index, obj) {\n    // TODO: replace numbers by constants\n    let msg = [\n        0x02,       // cmd = Get\n        0x01,       // target = preset\n        index,      // preset #\n        obj         // (control)\n    ];\n    let cs = checksum(msg);\n    msg.push(cs);\n    return SYSEX_HEADER.concat(msg);\n}\n\n// ============================================================================\n\n/**\n * Example: 23 => \"D5\"\n * @param index\n * @returns {string}\n */\nexport const presetIndexToXY = index => {\n    if (index === 0) return \"CUR\";\n    //TODO: check valid range\n    let b = Math.floor((index - 1) / 6);\n    let i = (index - 1) % 6 + 1;\n    return String.fromCharCode(b + 65) + i.toString();\n};\n\n/**\n * Exampe: \"D5\" => 23\n * @param xy\n * @returns {number}\n */\nexport const presetXYToIndex = xy => {\n    if (xy === \"CUR\") return 0;\n    //TODO: check valid range\n    //TODO: convert to uppercase before parsing\n    let bank = xy.charCodeAt(0) - 65;\n    let num = parseInt(xy[1], 10);\n    return bank * 6 + num;\n};\n\n// ============================================================================\n\nexport const TARGET_PRESET = 0x01;\nexport const TARGET_GLOBAL = 0x05;\nexport const TARGET_BACKUP = 0x07;\n\nexport const TARGETS = {\n    [TARGET_PRESET]: \"preset\",\n    [TARGET_GLOBAL]: \"global\",\n    [TARGET_BACKUP]: \"full backup\"\n};\n\n// ============================================================================\n\n// objects:\nexport const CONTROLS = {\n    0x01: \"name\",\n    0x0D: \"1\",\n    0x0E: \"2\",\n    0x0F: \"3\",\n    0x10: \"4\",\n    0x11: \"5\",\n    0x12: \"6\",\n    0x13: \"RESERVED\",\n    0x14: \"A\",\n    0x15: \"B\",\n    0x16: \"C\",\n    0x17: \"D\",\n    0x18: \"FS 1\",\n    0x19: \"FS 2\",\n    0x1A: \"FS 3\",\n    0x1B: \"FS 4\",\n    0x36: \"EXP 1\",\n    0x37: \"EXP 2\",\n    0x7E: \"MIDI configuration\",\n    0x7F: \"ALL\"\n};\n\nexport const CONTROLS_FULLNAME = {\n    0x01: \"Preset Name\",\n    0x0D: \"Stompswitch 1\",\n    0x0E: \"Stompswitch 2\",\n    0x0F: \"Stompswitch 3\",\n    0x10: \"Stompswitch 4\",\n    0x11: \"Stompswitch 5\",\n    0x12: \"Stompswitch 6\",\n    0x13: \"RESERVED\",\n    0x14: \"Stompswitch A\",\n    0x15: \"Stompswitch B\",\n    0x16: \"Stompswitch C\",\n    0x17: \"Stompswitch D\",\n    0x18: \"Footswitch 1\",\n    0x19: \"Footswitch  2\",\n    0x1A: \"Footswitch  3\",\n    0x1B: \"Footswitch  4\",\n    0x36: \"Expression Pedal 1\",\n    0x37: \"Expression Pedal 2\",\n    0x7E: \"MIDI configuration\",\n    0x7F: \"ALL\"\n};\n\n// subsets of CONTROLS keys:\nexport const STOMPSWITCHES = [0x0D, 0x0E, 0x0F, 0x10, 0x11, 0x12, 0x14, 0x15, 0x16, 0x17];\nexport const STOMPSWITCHES_TOP = [0x14, 0x15, 0x16, 0x17];\nexport const STOMPSWITCHES_BOTTOM = [0x0D, 0x0E, 0x0F, 0x10, 0x11, 0x12];\nexport const FOOTSWITCHES = [0x18, 0x19, 0x1A, 0x1B];\nexport const EXPPEDALS = [0x36, 0x37];\n\n\n\n// ============================================================================\n// message types:\n\nexport const MSG_AD_MIDICC = 0x00;\nexport const MSG_AD_NRPNC = 0x03;\nexport const MSG_AD_NRPNF = 0x04;\nexport const MSG_AD_PITCH = 0x01;\nexport const MSG_AD_ATCHAN = 0x02;\nexport const MSG_DAWFUNC = 0x7E;\nexport const MSG_CTRL_OFF = 0x61;\n\nexport const MSG_SW_MIDICC_TGGLE = 0x47;\nexport const MSG_SW_MIDICC = 0x40;\nexport const MSG_SW_MIDICC_STEP = 0x48;\nexport const MSG_SW_NOTE = 0x43;\nexport const MSG_SW_NOTE_TGGLE = 0x44;\nexport const MSG_SW_PRGBANK = 0x45;\nexport const MSG_SW_PRG_STEP = 0x46;\nexport const MSG_SW_NRPNCOARSE = 0x57;\nexport const MSG_SW_NRPNFINE = 0x58;\nexport const MSG_SW_MMC = 0x55;\nexport const MSG_SW_RELAY = 0x59;\nexport const MSG_SW_PRESETSELECT = 0x62;\nexport const MSG_SW_PRESETINCDEC = 0x56;\nexport const MSG_SW_STEPSELECT = 0x63;\nexport const MSG_SW_STEPINCDEC = 0x64;\n\nexport const MSG_ENC_CC = 0x12;\nexport const MSG_ENC_MIDICC_REL = 0x11;\nexport const MSG_ENC_NRPNC = 0x15;\nexport const MSG_ENC_NRPNF = 0x16;\nexport const MSG_ENC_PITCH = 0x13;\nexport const MSG_ENC_ATCHAN = 0x14;\nexport const MSG_ENC_PROGRAM = 0x10;\nexport const MSG_ENC_PRESETSELECT = 0x17;\nexport const MSG_ENC_STEPSELECT = 0x18;\n\nexport const MSG_LOAD_CC = 0x65;\n\nexport const MSG_TYPES = {\n\n    [MSG_AD_MIDICC]: \"CC\",\n    [MSG_AD_NRPNC]: \"NRPN C\",\n    [MSG_AD_NRPNF]: \"NRPN F\",\n    [MSG_AD_PITCH]: \"PITCH\",\n    [MSG_AD_ATCHAN]: \"AT CHAN\",\n    [MSG_DAWFUNC]: \"DAW FUNC\",\n    [MSG_CTRL_OFF]: \"CTRL_OFF\",\n\n    [MSG_SW_MIDICC_TGGLE]: \"CC TOGGLE\",\n    [MSG_SW_MIDICC]: \"CC\",\n    [MSG_SW_MIDICC_STEP]: \"CC STEP\",\n    [MSG_SW_NOTE]: \"NOTE\",\n    [MSG_SW_NOTE_TGGLE]: \"NOTE TOGGLE\",\n    [MSG_SW_PRGBANK]: \"PRG BANK\",\n    [MSG_SW_PRG_STEP]: \"PRG STEP\",\n    [MSG_SW_NRPNCOARSE]: \"NRPN COARSE\",\n    [MSG_SW_NRPNFINE]: \"NRPN FINE\",\n    [MSG_SW_MMC]: \"MMC\",\n    [MSG_SW_RELAY]: \"RELAY\",\n    [MSG_SW_PRESETSELECT]: \"PRESET SELECT\",\n    [MSG_SW_PRESETINCDEC]: \"PRESET INC DEC\",\n    [MSG_SW_STEPSELECT]: \"STEP SELECT\",\n    [MSG_SW_STEPINCDEC]: \"STEP INC DEC\",\n\n    [MSG_ENC_CC]: \"CC\",\n    [MSG_ENC_MIDICC_REL]: \"CC REL\",\n    [MSG_ENC_NRPNC]: \"NRPN C\",\n    [MSG_ENC_NRPNF]: \"NRPN F\",\n    [MSG_ENC_PITCH]: \"PITCH\",\n    [MSG_ENC_ATCHAN]: \"AT CHAN\",\n    [MSG_ENC_PROGRAM]: \"PRG\",\n    [MSG_ENC_PRESETSELECT]: \"PRESET SEL\",\n    [MSG_ENC_STEPSELECT]: \"STEP SEL\",\n\n    [MSG_LOAD_CC]: \"CC\"\n\n};\n\nexport const MSG_TYPES_FULLNAME = {\n\n    [MSG_AD_MIDICC]: \"MIDI CC\",\n    [MSG_AD_NRPNC]: \"MIDI NRPN Coarse\",\n    [MSG_AD_NRPNF]: \"MIDI NRPN Fine\",\n    [MSG_AD_PITCH]: \"Pitch Bend\",\n    [MSG_AD_ATCHAN]: \"AT CHAN\",\n    [MSG_DAWFUNC]: \"DAW FUNC\",\n    [MSG_CTRL_OFF]: \"CTRL_OFF\",\n\n    [MSG_SW_MIDICC_TGGLE]: \"MIDI CC Toggle\",\n    [MSG_SW_MIDICC]: \"CC\",\n    [MSG_SW_MIDICC_STEP]: \"CC STEP\",\n    [MSG_SW_NOTE]: \"MIDI Note\",\n    [MSG_SW_NOTE_TGGLE]: \"MIDI Note Toggle\",\n    [MSG_SW_PRGBANK]: \"PRG BANK\",\n    [MSG_SW_PRG_STEP]: \"PRG STEP\",\n    [MSG_SW_NRPNCOARSE]: \"MIDI NRPN Coarse\",\n    [MSG_SW_NRPNFINE]: \"MIDI NRPN Fine\",\n    [MSG_SW_MMC]: \"MMC\",\n    [MSG_SW_RELAY]: \"RELAY\",\n    [MSG_SW_PRESETSELECT]: \"PRESET SELECT\",\n    [MSG_SW_PRESETINCDEC]: \"PRESET INC DEC\",\n    [MSG_SW_STEPSELECT]: \"STEP SELECT\",\n    [MSG_SW_STEPINCDEC]: \"STEP INC DEC\",\n\n    [MSG_ENC_CC]: \"CC\",\n    [MSG_ENC_MIDICC_REL]: \"CC REL\",\n    [MSG_ENC_NRPNC]: \"MIDI NRPN Coarse\",\n    [MSG_ENC_NRPNF]: \"MIDI NRPN Fine\",\n    [MSG_ENC_PITCH]: \"Pitch Bend\",\n    [MSG_ENC_ATCHAN]: \"AT CHAN\",\n    [MSG_ENC_PROGRAM]: \"PRG\",\n    [MSG_ENC_PRESETSELECT]: \"PRESET SEL\",\n    [MSG_ENC_STEPSELECT]: \"STEP SEL\",\n\n    [MSG_LOAD_CC]: \"CC\"\n\n};\n// ============================================================================\n\n\nexport const CONTROL_ELEMENT = {\n    // 0x00: \"\",\n\n    0x01: \"step 1: channel\",\n    0x02: \"step 1: message type\",\n    0x03: \"step 1: data 1\",\n    0x04: \"step 1: data 2\",\n    0x05: \"step 1: data 3\",\n    0x06: \"step 1: step active\",\n\n    0x07: \"step 2: channel\",\n    0x08: \"step 2: message type\",\n    0x09: \"step 2: data 1\",\n    0x0A: \"step 2: data 2\",\n    0x0B: \"step 2: data 3\",\n    0x0C: \"step 2: step active\",\n\n    0x0D: \"step 3: channel\",\n    0x0E: \"step 3: message type\",\n    0x0F: \"step 3: data 1\",\n    0x10: \"step 3: data 2\",\n    0x11: \"step 3: data 3\",\n    0x12: \"step 3: step active\",\n\n    0x13: \"step 4: channel\",\n    0x14: \"step 4: message type\",\n    0x15: \"step 4: data 1\",\n    0x16: \"step 4: data 2\",\n    0x17: \"step 4: data 3\",\n    0x18: \"step 4: step active\",\n\n    0x19: \"step 5: channel\",\n    0x1A: \"step 5: message type\",\n    0x1B: \"step 5: data 1\",\n    0x1C: \"step 5: data 2\",\n    0x1D: \"step 5: data 3\",\n    0x1E: \"step 5: step active\",\n\n    0x1F: \"step 6: channel\",\n    0x20: \"step 6: message type\",\n    0x21: \"step 6: data 1\",\n    0x22: \"step 6: data 2\",\n    0x23: \"step 6: data 3\",\n    0x24: \"step 6: step active\",\n\n    // 0x25: \"\",\n    // 0x26: \"\",\n    // 0x27: \"\",\n    // 0x28: \"\",\n    // 0x29: \"\",\n    // 0x2A: \"\",\n    // 0x2B: \"\",\n    // 0x2C: \"\",\n    // 0x2D: \"\",\n    // 0x2E: \"\",\n    // 0x2F: \"\",\n    // 0x30: \"\",\n    // 0x31: \"\",\n    // 0x32: \"\",\n    // 0x33: \"\",\n    // 0x34: \"\",\n    // 0x35: \"\",\n    // 0x36: \"\",\n    // 0x37: \"\",\n    // 0x38: \"\",\n    // 0x39: \"\",\n    // 0x3A: \"\",\n    // 0x3B: \"\",\n    // 0x3C: \"\",\n    // 0x3D: \"\",\n    // 0x3E: \"\",\n    // 0x3F: \"\",\n    // 0x40: \"\",\n    // 0x41: \"\",\n    // 0x42: \"\",\n    // 0x43: \"\",\n\n    0x40: \"control mode\",\n    0x41: \"LED MIDI Ctrl\",\n    0x42: \"LED On Color\",\n    0x43: \"LED Off Color\",\n\n    // 0x44: \"\",\n    // 0x45: \"\",\n    // 0x46: \"\",\n    // 0x47: \"\",\n    // 0x48: \"\",\n    // 0x49: \"\",\n    // 0x4A: \"\",\n    // 0x4B: \"\",\n    // 0x4C: \"\",\n    // 0x4D: \"\",\n    // 0x4E: \"\",\n    // 0x4F: \"\",\n    // 0x50: \"\",\n    // 0x51: \"\",\n    // 0x52: \"\",\n    // 0x53: \"\",\n    // 0x54: \"\",\n    // 0x55: \"\",\n    // 0x56: \"\",\n    // 0x57: \"\",\n    // 0x58: \"\",\n    // 0x59: \"\",\n    // 0x5A: \"\",\n    // 0x5B: \"\",\n    // 0x5C: \"\",\n    // 0x5D: \"\",\n    // 0x5E: \"\",\n    // 0x5F: \"\",\n\n    // 0x60: \"control mode\",\n    // 0x61: \"LED MIDI Ctrl\",\n    // 0x62: \"LED On Color\",\n    // 0x63: \"LED Off Color\",\n\n    // 0x64: \"\",\n    // 0x65: \"\",\n    // 0x66: \"\",\n    // 0x67: \"\",\n    // 0x68: \"\",\n    // 0x69: \"\",\n    // 0x6A: \"\",\n    // 0x6B: \"\",\n    // 0x6C: \"\",\n    // 0x6D: \"\",\n    // 0x6E: \"\",\n    // 0x6F: \"\",\n    // 0x70: \"\",\n    // 0x71: \"\",\n    // 0x72: \"\",\n    // 0x73: \"\",\n    // 0x74: \"\",\n    // 0x75: \"\",\n    // 0x76: \"\",\n    // 0x77: \"\",\n    // 0x78: \"\",\n    // 0x79: \"\",\n    // 0x7A: \"\",\n    // 0x7B: \"\",\n    // 0x7C: \"\",\n    // 0x7D: \"\",\n    // 0x7E: \"\",\n\n    0x7F: \"ALL\"\n};\n\nexport const MIDI_ELEMENT = {\n    // 0x00: \"\",\n    0x01: \"setting 1: channel\",\n    0x02: \"setting 1: message type\",\n    0x03: \"setting 1: data 1\",\n    0x04: \"setting 1: data 2\",\n    0x05: \"setting 1: data 3\",\n    // 0x06: \"\",\n\n    0x07: \"setting 2: channel\",\n    0x08: \"setting 2: message type\",\n    0x09: \"setting 2: data 1\",\n    0x0A: \"setting 2: data 2\",\n    0x0B: \"setting 2: data 3\",\n    // 0x0C: \"\",\n\n    0x0D: \"setting 3: channel\",\n    0x0E: \"setting 3: message type\",\n    0x0F: \"setting 3: data 1\",\n    0x10: \"setting 3: data 2\",\n    0x11: \"setting 3: data 3\",\n    // 0x12: \"\",\n\n    0x13: \"setting 4: channel\",\n    0x14: \"setting 4: message type\",\n    0x15: \"setting 4: data 1\",\n    0x16: \"setting 4: data 2\",\n    0x17: \"setting 4: data 3\",\n    // 0x18: \"\",\n\n    0x19: \"setting 5: channel\",\n    0x1A: \"setting 5: message type\",\n    0x1B: \"setting 5: data 1\",\n    0x1C: \"setting 5: data 2\",\n    0x1D: \"setting 5: data 3\",\n    // 0x1E: \"\",\n\n    0x1F: \"setting 6: channel\",\n    0x20: \"setting 6: message type\",\n    0x21: \"setting 6: data 1\",\n    0x22: \"setting 6: data 2\",\n    0x23: \"setting 6: data 3\",\n    // 0x24: \"\",\n\n    0x25: \"setting 7: channel\",\n    0x26: \"setting 7: message type\",\n    0x27: \"setting 7: data 1\",\n    0x28: \"setting 7: data 2\",\n    0x29: \"setting 7: data 3\",\n    // 0x2A: \"\",\n\n    0x2B: \"setting 8: channel\",\n    0x2C: \"setting 8: message type\",\n    0x2D: \"setting 8: data 1\",\n    0x2E: \"setting 8: data 2\",\n    0x2F: \"setting 8: data 3\",\n    0x30: \"\",\n\n    0x31: \"setting 9: channel\",\n    0x32: \"setting 9: message type\",\n    0x33: \"setting 9: data 1\",\n    0x34: \"setting 9: data 2\",\n    0x35: \"setting 9: data 3\",\n    // 0x36: \"\",\n\n    0x37: \"setting 10: channel\",\n    0x38: \"setting 10: message type\",\n    0x39: \"setting 10: data 1\",\n    0x3A: \"setting 10: data 2\",\n    0x3B: \"setting 10: data 3\",\n    // 0x3C: \"\",\n\n    0x3D: \"setting 11: channel\",\n    0x3E: \"setting 11: message type\",\n    0x3F: \"setting 11: data 1\",\n    0x40: \"setting 11: data 2\",\n    0x41: \"setting 11: data 3\",\n    // 0x42: \"\",\n\n    0x43: \"setting 12: channel\",\n    0x44: \"setting 12: message type\",\n    0x45: \"setting 12: data 1\",\n    0x46: \"setting 12: data 2\",\n    0x47: \"setting 12: data 3\",\n    // 0x48: \"\",\n\n    0x49: \"setting 13: channel\",\n    0x4A: \"setting 13: message type\",\n    0x4B: \"setting 13: data 1\",\n    0x4C: \"setting 13: data 2\",\n    0x4D: \"setting 13: data 3\",\n    // 0x4E: \"\",\n\n    0x4F: \"setting 14: channel\",\n    0x50: \"setting 14: message type\",\n    0x51: \"setting 14: data 1\",\n    0x52: \"setting 14: data 2\",\n    0x53: \"setting 14: data 3\",\n    // 0x54: \"\",\n\n    0x55: \"setting 15: channel\",\n    0x56: \"setting 15: message type\",\n    0x57: \"setting 15: data 1\",\n    0x58: \"setting 15: data 2\",\n    0x59: \"setting 15: data 3\",\n    // 0x5A: \"\",\n\n    0x5B: \"setting 16: channel\",\n    0x5C: \"setting 16: message type\",\n    0x5D: \"setting 16: data 1\",\n    0x5E: \"setting 16: data 2\",\n    0x5F: \"setting 16: data 3\",\n    // 0x60: \"\",\n\n    // 0x61: \"\",\n    // 0x62: \"\",\n    // 0x63: \"\",\n    // 0x64: \"\",\n    // 0x65: \"\",\n    // 0x66: \"\",\n    // 0x67: \"\",\n    // 0x68: \"\",\n    // 0x69: \"\",\n    // 0x6A: \"\",\n    // 0x6B: \"\",\n    // 0x6C: \"\",\n    // 0x6D: \"\",\n    // 0x6E: \"\",\n    // 0x6F: \"\",\n    // 0x70: \"\",\n    // 0x71: \"\",\n    // 0x72: \"\",\n    // 0x73: \"\",\n    // 0x74: \"\",\n    // 0x75: \"\",\n    // 0x76: \"\",\n    // 0x77: \"\",\n    // 0x78: \"\",\n    // 0x79: \"\",\n    // 0x7A: \"\",\n    // 0x7B: \"\",\n    // 0x7C: \"\",\n    // 0x7D: \"\",\n    // 0x7E: \"\",\n\n    0x7F: \"ALL\"\n};\n","import {NEKTAR_TECHNOLOGY_INC} from \"midi-manufacturers\";\nimport {h, hs} from \"./hexstring\";\nimport {TARGETS, CONTROLS, checksum, SYSEX_HEADER} from \"../pacer\";\nexport const SYSEX_START = 0xF0;\nexport const SYSEX_END = 0xF7;\n\n// offsets from start of sysex data, right after SYSEX_START\nconst CMD = 4;\nconst TGT = 5;\nconst IDX = 6;\nconst OBJ = 7;\nconst ELM = 8;\n\n/**\n * https://stackoverflow.com/questions/27936772/how-to-deep-merge-instead-of-shallow-merge/34749873#34749873\n * Simple object check.\n * @param item\n * @returns {boolean}\n */\nfunction isObject(item) {\n    return (item && typeof item === 'object' && !Array.isArray(item));\n}\n\n/**\n * https://stackoverflow.com/questions/27936772/how-to-deep-merge-instead-of-shallow-merge/34749873#34749873\n * Deep merge two objects.\n * @param target\n * @param ...sources\n */\nexport function mergeDeep(target, ...sources) {\n    if (!sources.length) return target;\n    const source = sources.shift();\n\n    if (isObject(target) && isObject(source)) {\n        for (const key in source) {\n            if (isObject(source[key])) {\n                if (!target[key]) Object.assign(target, { [key]: {} });\n                mergeDeep(target[key], source[key]);\n            } else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        }\n    }\n\n    return mergeDeep(target, ...sources);\n}\n\n/**\n *\n * @param data Uint8Array\n */\nfunction isSysexData(data) {\n    // let view = new Uint8Array(data);\n    // if (view[0] !== SYSEX_START) return false;\n    // if (view[view.byteLength - 1] !== SYSEX_END) return false;\n    if (data[0] !== SYSEX_START) return false;\n    if (data[data.byteLength - 1] !== SYSEX_END) return false;\n    return true;\n}\n\n/*\nfunction getManufacturerName(id) {\n    return id in midi_name ? midi_name[id] : \"manufacturer unknown\";\n}\n*/\n\nfunction getControlStep(data) {\n\n    // console.log(\"getControlStep\", hs(data));\n\n    // 01 01 0F 00      midi channel\n    // 02 01 47 00      message type\n    // 03 01 44 00      data 1\n    // 04 01 55 00      data 2\n    // 05 01 66 00      data 3\n    // 06 01 01         active\n\n    // the second byte is the length of the data that follows\n\n    //FIXME: use length\n\n    return {\n        index: (data[0] - 1) / 6 + 1,\n        config: {\n            channel: data[2],\n            msg_type: data[6],\n            data: [data[10], data[14], data[18]],\n            active: data[22]\n        }\n    };\n}\n\n\nfunction getControlLED(data) {\n\n    // console.log(\"getControlLED\", hs(data));\n\n    // 01 01 0F 00      midi channel\n    // 02 01 47 00      message type\n    // 03 01 44 00      data 1\n    // 04 01 55 00      data 2\n    // 05 01 66 00      data 3\n    // 06 01 01         active\n\n    // we ignore the first byte, which seems to always be 0x01\n\n    return {\n        midi: data[2],\n        on_color: data[6],\n        off_color: data[10]\n    };\n}\n\n\n/**\n * Parse a single sysex message\n * @param data\n * @returns {*}\n */\nfunction parseSysexMessage(data) {\n\n    // console.log(\"parseSysex\", hs(data));\n\n    //TODO: verify checksum\n\n    const message = {};\n\n    let cmd = data[CMD];\n    let tgt = data[TGT];\n    let idx = data[IDX];\n    let obj = data[OBJ];\n\n    switch (cmd) {\n        case 0x01:\n            // console.log(`command is set_data (${h(cmd)})`);\n            break;\n        case 0x02:\n            // console.log(`command is get_data (${h(cmd)})`);\n            break;\n        default:\n            console.warn(`parseSysexMessage: invalid command (${h(cmd)})`);\n            return null;\n    }\n\n    if (!(tgt in TARGETS)) {\n        console.warn(\"parseSysexMessage: invalid target\", h(tgt), tgt, TARGETS);\n        return null;\n    }\n\n    message[tgt] = {};\n\n    if (idx >= 0x19 && idx <= 0x7E) {\n        console.warn(\"parseSysexMessage: invalid/ignored idx\", idx);\n    }\n\n    message[tgt][idx] = {};\n\n    if (!(obj in CONTROLS)) {\n        console.warn(\"parseSysexMessage: invalid/ignored object\", h(obj));\n        return null;\n    }\n\n    let obj_type;\n    if (obj === 0x01) {\n        obj_type = \"name\";\n    } else if ((obj >= 0x0D && obj <= 0x12) ||\n        (obj >= 0x14 && obj <= 0x1B) ||\n        (obj >= 0x36 && obj <= 0x37)) {\n        obj_type = \"control\";\n    } else if (obj === 0x7E) {\n        obj_type = \"midi\";\n    } else {\n        console.warn('parseSysexMessage: invalid obj', obj);\n        return null;\n    }\n\n    // console.log(`target=${TARGET[tgt]} (${h(tgt)}), idx=${h(idx)}, object=${OBJECT[obj]} (${h(obj)}), type=${obj_type}`);\n    console.log(`${TARGETS[tgt]} ${h(idx)} : ${CONTROLS[obj]} ${obj_type}`);\n\n    if (obj_type === \"name\") {\n        //TODO: parse name\n    }\n\n    if (obj_type === \"control\") {\n\n        message[tgt][idx][\"controls\"] = {\n            [obj]: {\n                steps: {}\n            }\n        };\n\n        // which element?\n        let e = data[ELM];\n        if (e >= 0x01 && e <= 0x24) {\n\n            // STEPS\n            if (data.length > ELM+22) {\n                let s = getControlStep(data.slice(ELM, ELM + 23));\n                message[tgt][idx][\"controls\"][obj][\"steps\"][s.index] = s.config;\n            } else {\n                console.warn(`parseSysexMessage: data does not contains steps. data.length=${data.length}`, hs(data));\n            }\n\n        } else if (e === 0x60) {\n\n            // CONTROL MODE\n            console.log('parseSysexMessage: CONTROL MODE');\n\n        } else if (e === 0x40) {\n\n            // CONTROL MODE\n            console.log('parseSysexMessage: LED MIDI CTRL');\n\n        // } else if (e >= 0x61 && e <= 0x63) {\n        } else if (e >= 0x41 && e <= 0x43) {\n\n            // LED\n            console.error('parseSysexMessage: LED');\n            message[tgt][idx][\"controls\"][obj][\"led\"] = getControlLED(data.slice(ELM, ELM + 3));\n\n        } else if (e === 0x7F) {\n\n            // ALL\n            console.log('parseSysexMessage: ALL');\n\n        } else {\n            console.warn(`parseSysexMessage: unknown element: ${h(e)}`);\n            return null;\n        }\n\n    }\n\n    if (obj_type === \"midi\") {\n        //TODO: parse midi\n    }\n\n    // console.log('MESSAGE', message);\n\n    return message;\n\n} // parseSysex()\n\n\n/**\n * Parse a sysex dump. A dump can contains multiple sysex messages.\n * Return a array of presets.\n * @param data ArrayBuffer\n */\nfunction parseSysexDump(data) {\n\n    console.log(\"parseSysexDump\", hs(data));\n\n    if (data === null) return null;\n\n    // let d = new Uint8Array(data);\n    let d = data;   //TODO: use data variable\n    let presets = {};   // Collection of presets. The key is the preset's index. The value is the preset.\n    // let global = {};    // global conf\n\n    // let k = data[0] === SYSEX_START ? 1 : 0;\n\n    let i = 0;\n    let cont = true;\n    while (cont) {\n\n        i = d.indexOf(SYSEX_START, i);\n        if (i < 0) break;\n\n        i++;\n\n        let k = d.indexOf(SYSEX_END, i);\n\n        let manufacturer_id = (Array.from(d.slice(i, i+3)).map(n => h(n))).join(\" \");    // Array.from() is necessary to get a non-typed array\n        if (manufacturer_id !== NEKTAR_TECHNOLOGY_INC) {\n            console.log(\"parseSysexDump: file does not contain a Nektar Pacer patch\", i, k, manufacturer_id, \"-\", hs(d));\n            return null;\n        }\n\n        if (d[i+3] !== 0x7F) {\n            console.warn(`parseSysexDump: invalid byte after manufacturer id: ${d[i+1 +3]}`);\n            return null;\n        }\n\n        let config = parseSysexMessage(d.slice(i, k));  // d.slice(i, k) are the data between SYSEX_START and SYSEX_END\n\n        if (config) {\n            mergeDeep(presets, config);\n        }\n\n    }\n\n    // console.log(JSON.stringify(presets));\n\n    return presets;\n\n}\n\n\n/**\n * Return an array of sysex messages to update a control's steps.\n * @param presetIndex\n * @param controlId\n * @param steps\n * @returns {*}\n */\nfunction buildControlStepSysex(presetIndex, controlId, steps) {\n\n    console.log(`buildControlStepSysex(${presetIndex}, ${controlId}, ...)`);\n\n    // 00 01 77\n    // 7F SYSEX_HEADER\n    // 01 cmd\n    // 01 tgt\n    // 05 presetIndex\n    // 0D controlId\n    // 01 01 00 00      channel\n    // 02 01 43 00      msg type\n    // 03 01 34 00      data 1\n    // 04 01 7F 00      data 2\n    // 05 01 00 00      data 3\n    // 06 01 01         active\n\n    let msgs = [];\n\n    for (let i of Object.keys(steps)) {\n\n        let step = steps[i];\n\n        if (!step.changed) continue;\n\n        let msg = [\n            0x01,       // cmd                   // TODO: replace numbers by constants\n            0x01,       // tgt is preset\n            presetIndex,\n            controlId];\n\n        msg.push(i*6 + 0x01, 0x01, step.channel, 0x00);\n        msg.push(i*6 + 0x02, 0x01, step.msg_type, 0x00);\n        msg.push(i*6 + 0x03, 0x01, step.data[0], 0x00);\n        msg.push(i*6 + 0x04, 0x01, step.data[1], 0x00);\n        msg.push(i*6 + 0x05, 0x01, step.data[2], 0x00);\n        msg.push(i*6 + 0x06, 0x01, step.active);\n\n        let cs = checksum(msg);\n        msg.push(cs);\n\n        msgs.push(SYSEX_HEADER.concat(msg));\n    }\n\n    console.log(\"buildControlStepSysex\", msgs);\n\n    return msgs;\n}\n\n\nexport {\n    isSysexData,\n    parseSysexDump,\n    buildControlStepSysex\n};\n\n","import WebMidi from \"webmidi\";\n\nfunction portById(id) {\n    let p = WebMidi.inputs.find(item => item.id === id);\n    if (p) {\n        return p;\n    } else {\n        return WebMidi.outputs.find(item => item.id === id);\n    }\n}\n\nfunction inputById(id) {\n    return WebMidi.inputs.find(item => item.id === id);\n}\n\n/**\n * Return webmidi input name from input id\n * @param id\n */\nfunction inputName(id) {\n    let i = WebMidi.inputs.find(item => item.id === id);\n    return i ? i.name : null;\n}\n\nfunction outputById(id) {\n    return WebMidi.outputs.find(item => item.id === id);\n}\n\nexport {\n    portById,\n    inputById,\n    inputName,\n    outputById\n}\n","import React from \"react\";\nimport \"./DumpSysex.css\";\nimport {\n    MSG_SW_NOTE,\n    CONTROLS,\n    TARGET_PRESET,\n    MSG_TYPES,\n    presetIndexToXY\n} from \"../pacer\";\nimport {h, hs} from \"../utils/hexstring\";\nimport \"./DumpSysex.css\";\nimport * as Note from \"tonal-note\";\n\n/*\nconst presetCoord = index => {\n    if (index === 0) return \"CUR\";\n    // 23 => D5\n    let b = Math.floor((index - 1) / 6);\n    let i = (index - 1) % 6 + 1;\n    return String.fromCharCode(b + 65) + i.toString();\n};\n*/\n\n/*\nconst ControlElement = ({ data }) => {\n    if (data.element === undefined) return null;\n    if (!(data.element in CONTROL_ELEMENT)) return null;\n    return <div>{CONTROL_ELEMENT[data.element]} = {h(data.element_data)}</div>;\n};\n*/\n\n/*\nconst MidiElement = ({ data }) => {\n    return <span>midi element</span>;\n};\n*/\n\nconst Midis = ({ midis }) => {\n    if (midis === null) return null;\n    return (\n        <div></div>\n    );\n};\n\n/*\nconst Control = ({ obj, config }) => {\n    if (config === null || config === undefined) return null;\n    return (\n        <div>\n            <h3>{CONTROLS[obj]}</h3>\n            <div>\n                <h4>steps</h4>\n                <div>\n                {Object.keys(config[\"steps\"]).map(i =>\n                    <div key={`${obj}.${i}`}>\n                        <div>step {i}</div>\n                        <ul>\n                            <li>MIDI channel: {h(config[\"steps\"][i][\"channel\"])}</li>\n                            <li>message type: {h(config[\"steps\"][i][\"msg_type\"])}</li>\n                            <li>data: {hs(config[\"steps\"][i][\"data\"])}</li>\n                            <li>active: {config[\"steps\"][i][\"active\"]}</li>\n                        </ul>\n                    </div>\n                )}\n                </div>\n                <h4>LED</h4>\n                <h4>control</h4>\n            </div>\n        </div>\n    );\n};\n*/\n\nconst ControlTable = ({ obj, config }) => {\n    if (config === null || config === undefined) return null;\n    return (\n        <div className=\"dump-control\">\n            <table>\n                <tbody>\n                    <tr>\n                        <td colSpan={7} className=\"name\">{CONTROLS[obj]}</td>\n                    </tr>\n                    {Object.keys(config[\"steps\"]).map(i =>\n                        <tr key={`${obj}.${i}`}>\n                            <td>step {i}</td>\n                            <td>ch. {h(config[\"steps\"][i][\"channel\"])}</td>\n                            <td>msg {h(config[\"steps\"][i][\"msg_type\"])}</td>\n                            <td>{MSG_TYPES[config[\"steps\"][i][\"msg_type\"]]}</td>\n                            <td>{hs(config[\"steps\"][i][\"data\"])}</td>\n                            <td>{config[\"steps\"][i][\"msg_type\"] === MSG_SW_NOTE ? Note.fromMidi(config[\"steps\"][i][\"data\"][0], true) : \"  \"}</td>\n                            <td>active {config[\"steps\"][i][\"active\"]}</td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nconst Controls = ({ controls }) => {\n    if (controls === null || controls === undefined) return null;\n    return (\n        <div className=\"dump-controls\">\n            {Object.keys(controls).map(obj => <ControlTable key={obj} obj={obj} config={controls[obj]} />)}\n        </div>\n    );\n};\n\nconst Preset = ({ index, data }) => {\n    if (data === null || data === undefined) return null;\n    return (\n        <div>\n            <h2>Preset {presetIndexToXY(parseInt(index, 10))} (#{index})</h2>\n            <Controls controls={data[\"controls\"]} />\n            <Midis controls={data[\"controls\"]} />\n            {/*<pre>{JSON.stringify(data, null, 4)}</pre>*/}\n            {/*<pre>{JSON.stringify(data, null, 4)}</pre>*/}\n        </div>\n    );\n};\n\nconst Presets = ({ presets }) => {\n    if (presets === null || presets === undefined) return null;\n    return (\n        <div>\n            {Object.keys(presets).map(idx => <Preset key={idx} index={idx} data={presets[idx]} />)}\n        </div>\n    );\n};\n\nconst DumpSysex = ({ data }) => {\n    return (\n        <div className=\"dump code\">\n            {\n                // _.map(data, (value, key) => <Preset name={key} data={value} />)\n                data && <Presets presets={data[TARGET_PRESET]} />\n            }\n{/*\n            {\n                JSON.stringify(data, null, 4)\n            }\n*/}\n        </div>\n    );\n};\n\n\nexport default DumpSysex;\n","import React, {Component} from 'react';\nimport * as WebMidi from \"webmidi\";\nimport {inputById, portById} from \"../utils/ports\";\n\n/**\n *\n * @param props\n * @constructor\n */\nclass Midi extends Component {\n\n    //TODO: allow specification of channel and message types to listen to\n\n    state = {\n        inputs: [],         // array of MIDI inputs (copied from WebMidi object)\n        outputs: [],        // array of MIDI outputs (copied from WebMidi object)\n        input: null,        // MIDI output port enabled\n        output: null,       // MIDI output port enabled\n    };\n\n    connectInput = port => {\n        if (port) {\n            if (port.hasListener('midimessage', 'all', this.props.onMidiInputEvent)) {\n                console.warn(`Midi.connectInput: sysex messages on all channels listener already connected`);\n            } else {\n                console.log(`Midi.connectInput: add listener for sysex messages on all channels`);\n                port.addListener('midimessage', 'all', this.props.onMidiInputEvent);\n            }\n        }\n    };\n\n    disconnectInput = port => {\n        if (port) {\n            port.removeListener();\n            console.log(`disconnectInput: input ${port.id} disconnected`);\n        }\n    };\n\n    connectOutput = port => {\n        if (port) {\n            this.setState({output: port.id});\n            console.log(`connectOutput: input ${port.id} connected`);\n            if (this.props.setOutput) {\n                this.props.setOutput(port.id);\n            }\n        }\n    };\n\n    disconnectOutput = () => {\n        // if (port) {\n            this.setState({output: null});\n            console.log(`disconnectInput: output disconnected`);\n            if (this.props.setOutput) {\n                this.props.setOutput(null);\n            // }\n        }\n    };\n\n    autoConnectInput = () => {\n\n        if (this.props.autoConnect) {\n\n            console.log(`Midi.autoConnectInput: autoConnect ${this.props.autoConnect}`, this.state.inputs);\n\n            if (this.state.input === null) {\n\n                for (let port of this.state.inputs) {      //WebMidi.inputs) {\n\n                    console.log(`Midi.autoConnectInput: port ${port.name} ${port.id}`);\n\n                    if (port.type === 'input' && port.name.match(this.props.autoConnect)) {  // TODO: check manufacturer too; TODO: match case insensitive\n\n                        console.log(`Midi.autoConnectInput: connect ${port.name}`);\n\n                        this.setState({input: port.id});\n\n                        this.connectInput(port);\n\n                        // if (port.hasListener('noteon', 'all', this.props.onMidiInputEvent)) {\n                        //     console.warn(`Midi.autoConnectInput: autoConnect: listener already connected`);\n                        // } else {\n                        //     console.log(`Midi.autoConnectInput: autoConnect: add listener`);\n                        //     port.addListener('noteon', 'all', this.props.onMidiInputEvent);\n                        // }\n                        break;\n                    }\n                }\n\n            } else {\n                console.log(`Midi.autoConnectInput: autoConnect skipped, already connected`);\n            }\n        }\n    };\n\n    autoConnectOutput = () => {\n\n        if (this.props.autoConnect) {\n\n            console.log(`Midi.autoConnectOutput: autoConnect ${this.props.autoConnect}`);\n\n            if (this.state.output === null) {\n\n                for (let port of this.state.outputs) {\n\n                    console.log(`Midi.autoConnectOutput: port ${port.name} ${port.id}`);\n\n                    if (port.type === 'output' && port.name.match(this.props.autoConnect)) {  // TODO: check manufacturer too; TODO: match case insensitive\n\n                        console.log(`Midi.autoConnectOutput: autoConnect: auto-connect ${port.name}`);\n\n                        // this.setState({output: port.id});\n                        this.connectOutput(port);\n\n                        break;\n                    }\n                }\n\n            } else {\n                console.log(`Midi.autoConnectOutput: autoConnect skipped, already connected`);\n            }\n        }\n    };\n\n    registerInputs = () => {\n        console.log(\"Midi.registerInputs\");\n        this.setState({ inputs: WebMidi.inputs }, () => this.autoConnectInput());\n    };\n\n    registerOutputs = () => {\n        console.log(\"Midi.registerOutputs\");\n        this.setState({ outputs: WebMidi.outputs }, () => this.autoConnectOutput());\n    };\n\n    unRegisterInputs = () => {\n        console.log(\"Midi.registerInputs\");\n        this.disconnectInput(portById(this.state.input));\n        this.setState({ inputs: [], input: null });\n    };\n\n    unRegisterOutputs = () => {\n        console.log(\"Midi.registerOutputs\");\n        this.setState({ outputs: [], output: null });\n    };\n\n    handleMidiConnectEvent = e => {\n\n        console.group(`Midi: handleMidiConnectEvent: ${e.port.type} ${e.type}: ${e.port.name}`, e);\n\n        // TODO: is disconnect event, remove the existing input listeners\n        /*\n        if (e.type === \"disconnected\") {\n            // console.log(`must disconnect ${e.port} ${e.port.id}`);\n            this.disconnectInput(e.port.id);\n        }\n        */\n\n        if (e.port.type === 'input') {\n            // console.log(`ignore MIDI input connect event`);\n            console.log(\"Midi: call registerInputs\");\n            this.registerInputs();\n        }\n\n        if (e.port.type === 'output') {\n            console.log(\"Midi: call registerOutputs\");\n            this.registerOutputs();\n        }\n\n        // Note: if we don't display the events, than the UI will not be updated if we don't update the state.\n\n        console.groupEnd();\n\n    };\n\n    togglePort = (port_id) => {\n        let p = portById(port_id);\n        if (p.type === 'input') {\n            console.log(\"toggle input\");\n            let prev = this.state.input;\n            if (this.state.input) {\n                this.disconnectInput(portById(this.state.input));\n                // this.setState({ input: null });\n            }\n            if (port_id !== prev) {\n                this.connectInput(inputById(port_id));\n                // this.setState({ input: port_id });\n            }\n            this.setState({ input: port_id === prev ? null : port_id });\n        } else {\n            console.log(\"toggle output\");\n            // There is nothing to \"connect\" for an output port since this type of port does not generate any event.\n            // if (this.state.output) this.disconnectOutput(this.state.output);\n            this.setState({ output: port_id === this.state.output ? null : port_id });\n        }\n    };\n\n    midiOn = err => {\n        if (err) {\n            console.warn(\"Midi.midiOn: WebMidi could not be enabled.\", err);\n        } else {\n            console.log(\"Midi.midiOn: WebMidi enabled\");\n            WebMidi.addListener(\"connected\", this.handleMidiConnectEvent);\n            WebMidi.addListener(\"disconnected\", this.handleMidiConnectEvent);\n\n            /*\n            if (WebMidi.hasListener(\"connected\", this.handleMidiConnectEvent)) {\n                console.log(\"MidiPorts.componentDidMount: handleMidiConnectEvent already set on 'connected' event\");\n            } else {\n                WebMidi.addListener(\"connected\", this.handleMidiConnectEvent);\n            }\n            if (WebMidi.hasListener(\"disconnected\", this.handleMidiConnectEvent)) {\n                console.log(\"MidiPorts.componentDidMount: handleMidiConnectEvent already set on 'disconnected' event\");\n            } else {\n                WebMidi.addListener(\"disconnected\", this.handleMidiConnectEvent);\n            }\n            */\n        }\n    };\n\n    componentDidMount() {\n        console.log(`Midi: component did mount: WebMidi.enabled=${WebMidi.enabled}`);\n        if (WebMidi.enabled) {\n            console.log(`Midi: component did mount: already enabled, register ports`);\n            this.registerInputs();\n            this.registerOutputs();\n        } else {\n            console.log(\"Midi: component did mount: Calling WebMidi.enable\");\n            WebMidi.enable(this.midiOn, true);  // true to enable sysex support\n        }\n    }\n\n    componentWillUnmount() {\n        console.log(\"Midi: component will unmount: unregister ports\");\n        this.unRegisterInputs();\n        this.unRegisterOutputs();\n    }\n\n    render() {\n        let {inputs, outputs} = this.state;\n        return (\n            <div className={this.props.className}>\n                {inputs.map(port => this.props.inputRenderer(port, port.id === this.state.input, this.togglePort))}\n                {outputs.map(port => this.props.outputRenderer(port, port.id === this.state.output, this.togglePort))}\n            </div>\n        );\n    }\n\n}\n\nexport default Midi;\n\n","import React, {Component} from \"react\";\nimport \"./MidiPort.css\";\nimport Switch from \"react-switch\";\n\nclass MidiPorts extends Component {\n\n    render() {\n\n        let port = this.props.port;\n        let isSelected = this.props.selected;\n        let clickHandler = this.props.clickHandler;\n\n        // console.log(\"MidiPort.render\", port.type, port.name, isSelected);\n\n        //TODO: display MIDI channel when connected\n        return (\n            <div key={port.id} className={isSelected ? `port ${port.type} enabled` : `port ${port.type}`}>\n                {/*<div className={\"port-description\"}>*/}\n                    <div className=\"port-type\">{port.type === 'input' ? 'IN' : 'OUT'}</div>\n                    <div className=\"port-name\">{port.name} </div>\n                    <div className=\"port-switch\">\n                        <Switch\n                            onChange={() => clickHandler(port.id)}\n                            checked={isSelected}\n                            className=\"react-switch\"\n                            id=\"normal-switch\"\n                            height={20} width={42}\n                        />\n                    </div>\n                {/*</div>*/}\n            </div>\n        );\n\n/*\n        return (\n            <div key={port.id} className={isSelected ? `port ${port.type} enabled` : `port ${port.type}`}>\n                <div className={\"port-description\"}>\n                    <div className=\"type\">{port.type} {port.type === 'input' ? 'from' : 'to'}</div>\n                    <div className=\"port-name\">{port.name}</div>\n                </div>\n                <div className={\"port-state\"}>\n                    <Switch\n                        onChange={() => clickHandler(port.id)}\n                        checked={isSelected}\n                        className=\"react-switch\"\n                        id=\"normal-switch\"\n                        height={20} width={42}\n                    />\n                    <span className={isSelected ? \"port-usage selected\" : \"port-usage\"}\n                          onClick={() => clickHandler(port.id)}>{isSelected ? \"enabled\" : \"disabled\"}</span>\n                </div>\n            </div>\n        );\n*/\n    }\n\n}\n\nexport default MidiPorts;\n","import React, {Component} from 'react';\nimport {isSysexData, mergeDeep, parseSysexDump} from \"../utils/sysex\";\nimport {requestPreset, requestPresetObj, SYSEX_SIGNATURE} from \"../pacer/index\";\nimport {outputById} from \"../utils/ports\";\nimport {fromHexString, h, hs} from \"../utils/hexstring\";\nimport \"./TestSender.css\";\nimport {produce} from \"immer\";\nimport DumpSysex from \"../components/DumpSysex\";\nimport {checksum, SYSEX_HEADER} from \"../pacer\";\nimport Midi from \"../components/Midi\";\nimport MidiPort from \"../components/MidiPort\";\n\nclass TestSender extends Component {\n\n    state = {\n        output: null,           // MIDI output port used for output\n        data: null,\n        messages: [\n            requestPreset(5),\n            requestPresetObj(5, 0x0D)\n        ],\n        customMessage: \"\"\n    };\n\n    updateCustomMessage = (event) => {\n        let s = (event.target.value.match(/[0-9a-fA-F]+/g) || []).join('');\n        let h = '';\n        for (let i=0; i<s.length; i++) {\n            if ((i > 0) && (i % 2 === 0)) h += ' ';\n            h += s[i];\n        }\n        this.setState({\n            customMessage: h    //,\n            // cs: checksum(fromHexString(h, / /g))\n        });\n    };\n\n    sendCustomMessage = () => {\n        let data = Array.from(fromHexString(this.state.customMessage, / /g));\n        if (data && data.length > 0) {\n            data.push(checksum(data));\n            this.sendSysex(SYSEX_HEADER.concat(data));\n        }\n    };\n\n    handleMidiInputEvent = (event) => {\n        console.log(\"TestSender.handleMidiInputEvent\", event, event.data);\n        // if (event instanceof MIDIMessageEvent) {\n        if (isSysexData(event.data)) {\n            console.log(\"TestSender.handleMidiInputEvent: update state\");\n            this.setState(\n                produce(draft => {\n                    draft.data = mergeDeep(draft.data || {}, parseSysexDump(event.data));\n                    // this.props.onBusy(false);\n                })\n            )\n        } else {\n            console.log(\"MIDI message is not a sysex message\")\n        }\n        // }\n    };\n\n    renderPort = (port, selected, clickHandler) => {\n        if (port === undefined || port === null) return null;\n        return (\n            <MidiPort key={port.id} port={port} selected={selected} clickHandler={clickHandler} />\n        )\n    };\n\n    setOutput = (port_id) => {\n        console.log(`Page.setOutput ${port_id}`);\n        this.setState({output: port_id});\n    };\n\n    sendSysex = msg => {\n        console.log(\"sendSysex\", msg);\n        if (!this.state.output) return;\n        let out = outputById(this.state.output);\n        if (!out) {\n            console.warn(`send: output ${this.state.output} not found`);\n            return;\n        }\n        this.setState(\n            {data: null},\n            () => out.sendSysex(SYSEX_SIGNATURE, msg)\n        );\n    };\n\n    sendMessage = (msg) => {\n        this.sendSysex(msg);\n    };\n\n    /**\n     * @returns {*}\n     */\n    render() {\n\n        // console.log(\"SendTester.render\", this.props);\n\n        const { data, messages, customMessage } = this.state;\n\n        // console.log(\"SendTester.render\", messages, customMessage.length % 2);\n\n        const cs = checksum(fromHexString(customMessage, / /g));\n\n        return (\n            <div className=\"wrapper\">\n                <div className=\"content\">\n                    <div className=\"content-row step-1\">\n                        <div className=\"background\">\n                            Connect\n                        </div>\n                        <div className=\"content-row-header\">\n                            1\n                        </div>\n                        <div className=\"content-row-content row-middle-aligned\">\n                            <Midi inputRenderer={this.renderPort} outputRenderer={this.renderPort}\n                                  autoConnect={/Pacer midi1/i} onMidiInputEvent={this.handleMidiInputEvent}\n                                  setOutput={this.setOutput}\n                                  className=\"sub-header\" />\n                        </div>\n                    </div>\n                    <div className=\"content-row step-2\">\n                        <div className=\"background\">\n                            Send\n                        </div>\n                        <div className=\"content-row-header\">\n                            2\n                        </div>\n                        <div className=\"content-row-content\">\n                            <h2>Test messages:</h2>\n                            <div>\n                            {messages.map((msg, i) =>\n                                <div key={i} className=\"send-message\">\n                                    <button onClick={() => this.sendMessage(msg)}>send</button>\n                                    <span className=\"code light\">{ hs(SYSEX_SIGNATURE.concat(msg.slice(0, 1))) } </span>\n                                    <span className=\"code\">{ hs(msg.slice(1, -1)) } </span>\n                                    <span className=\"code light\"> {hs(msg.slice(-1))}</span>\n                                </div>\n                            )}\n                            </div>\n                            <h2>Custom message:</h2>\n                            <div>\n                                <div className=\"send-message\">\n                                    <button onClick={this.sendCustomMessage} disabled={customMessage.length === 0}>send</button>\n                                    <span className=\"code light\">{hs(SYSEX_SIGNATURE)} {hs(SYSEX_HEADER)} </span>\n                                    <input type=\"text\" className=\"code\" size=\"30\" value={customMessage}\n                                           placeholder={\"hex digits only\"} onChange={this.updateCustomMessage} />\n                                    <span className=\"code light\"> {h(cs)}</span>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                    <div className=\"content-row step-3\">\n                        <div className=\"background\">\n                            Receive\n                        </div>\n                        <div className=\"content-row-header\">\n                            3\n                        </div>\n                        <div className=\"content-row-content\">\n                            <h2>Response:</h2>\n                            <div className=\"message code\">\n                                {/*{data && JSON.stringify(data)}*/}\n                                <DumpSysex data={data} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"help\">\n                    <h2>Help</h2>\n                </div>\n\n            </div>\n\n        );\n    }\n}\n\nexport default TestSender;\n","import React, {Fragment} from \"react\";\nimport \"./PresetSelector.css\";\nimport {presetXYToIndex} from \"../pacer\";\n\nconst Selector = ({ name, id, selected, onClick }) =>\n    <div className={selected ? \"selected\" : \"\"} onClick={() => onClick(id)}>{name}</div>;\n\n\n/*\nconst PresetSelectors = ({ currentPreset, onClick }) =>\n    <div className=\"preset-selectors\">\n        {\n            Array.from(Array(6).keys()).map(\n                digit => {\n                    return (\n                        <Fragment>{\n                            ['A', 'B', 'C', 'D'].map(\n                                letter => {\n                                    let name = letter + (digit + 1);\n                                    let id = presetXYToIndex(name);\n                                    return <PresetSelector name={name} id={id} selected={id === currentPreset} onClick={onClick} key={id} />\n                                })\n                        }</Fragment>)\n                }\n            )\n        }\n    </div>;\n*/\n\n//FIXME: allow the selection of preset #0 (CUR)\n\nconst PresetSelector = ({ currentPreset, onClick }) =>\n    <div className=\"preset-selectors\">\n    {\n        ['A', 'B', 'C', 'D'].map(\n            letter => {\n                return (\n                    <Fragment key={letter}>{\n                        Array.from(Array(6).keys()).map(\n                            digit => {\n                                let name = letter + (digit + 1);\n                                let id = presetXYToIndex(name);\n                                return <Selector name={name} id={id} selected={id === currentPreset} onClick={onClick} key={id} />\n                            })\n                    }</Fragment>)\n            }\n        )\n    }\n    </div>;\n\n/*\n\n    with CSS grid\n\nconst PresetSelectors = ({ currentPreset }) =>\n    <div>\n        <h2>Preset:</h2>\n        <div className=\"selectors\">\n            {\n                ['A', 'B', 'C', 'D'].map(\n                    e => {\n                        return Array.from(Array(6).keys()).map(\n                            i => {\n                                let id = e + (i+1);\n                                console.log(id, currentPreset);\n                                return <PresetSelector name={id} selected={id === currentPreset} />\n                            }\n                        )\n                    }\n                )\n            }\n        </div>\n    </div>;\n*/\n\nexport default PresetSelector;\n","import React from \"react\";\nimport {FOOTSWITCHES, STOMPSWITCHES_TOP, STOMPSWITCHES_BOTTOM, EXPPEDALS, CONTROLS} from \"../pacer\";\nimport \"./ControlSelector.css\";\n\nconst Control = ({ name, id, selected, onClick }) =>\n    <div className={selected ? \"selected\" : \"\"} onClick={() => onClick(id)}>\n        <div className=\"name\">{name}</div>\n    </div>;\n\n\nconst ControlSelector = ({ currentControl, onClick }) =>\n    <div className=\"controls\">\n        {\n            FOOTSWITCHES.map(\n                key => <Control key={key} name={CONTROLS[key]} id={key} selected={key === currentControl} onClick={onClick} />\n            )\n        }\n        {\n            EXPPEDALS.map(\n                key => <Control key={key} name={CONTROLS[key]} id={key} selected={key === currentControl} onClick={onClick} />\n            )\n        }\n        <div className=\"no-control\">&nbsp;</div>\n        {\n            STOMPSWITCHES_TOP.map(\n                key => <Control key={key} name={CONTROLS[key]} id={key} selected={key === currentControl} onClick={onClick} />\n            )\n        }\n        <div className=\"no-control\">&nbsp;</div>\n        {\n            STOMPSWITCHES_BOTTOM.map(\n                key => <Control key={key} name={CONTROLS[key]} id={key} selected={key === currentControl} onClick={onClick} />\n            )\n        }\n    </div>;\n\n\nexport default ControlSelector;\n","import React, {Component, Fragment} from 'react';\nimport {MSG_SW_NOTE, MSG_TYPES_FULLNAME} from \"../pacer\";\nimport * as Note from \"tonal-note\";\nimport \"./ControlStepsEditor.css\";\n\n\nconst MidiNote = ({ note, onChange }) => {\n    console.log(`MidiNote ${note}`, typeof note);\n    return (\n        <select onChange={(event) => onChange(event.target.value)} defaultValue={note}>\n            {\n                Array.from(Array(127).keys()).map(\n                    i => {\n                        let n = Note.fromMidi(i, true);\n                        return <option key={i} value={i}>{n}</option>\n                    })\n            }\n        </select>\n    );\n};\n\nconst Step = ({ index, config, updateCallback }) => {\n\n    let d0, d1, d2;\n    if (config.msg_type === MSG_SW_NOTE) {\n        // d0 = `note ${Note.fromMidi(config.data[0], true)}`;\n        d0 = <MidiNote note={config.data[0]} onChange={(value) => updateCallback(\"data\", 0, value)} />;\n        d1 = <input type=\"text\" value={config.data[1]} size=\"4\" onChange={(event) => updateCallback(\"data\", 1, event.target.value)} />;\n        d2 = '';\n    } else {\n        d0 = <input type=\"text\" value={config.data[0]} size=\"4\" onChange={(event) => updateCallback(\"data\", 0, event.target.value)} />;\n        d1 = <input type=\"text\" value={config.data[1]} size=\"4\" onChange={(event) => updateCallback(\"data\", 1, event.target.value)} />;\n        d2 = <input type=\"text\" value={config.data[2]} size=\"4\" onChange={(event) => updateCallback(\"data\", 2, event.target.value)} />;\n    }\n\n    return (\n        <Fragment>\n            <div>step {index}:</div>\n            <div>\n                <select onChange={(event) => updateCallback(\"msg_type\", null, event.target.value)} defaultValue={config.msg_type}>\n                {\n                    Object.keys(MSG_TYPES_FULLNAME).map(\n                        key => {\n                            // let n = Note.fromMidi(i, true);\n                            return <option key={key} value={key}>{MSG_TYPES_FULLNAME[key]}</option>\n                        })\n                }\n                </select>\n            </div>\n            <div>{d0}</div>\n            <div>{d1}</div>\n            <div>{d2}</div>\n            <div>\n                <select onChange={(event) => updateCallback(\"channel\", null, event.target.value)} defaultValue={config.channel}>\n                {\n                    Array.from(Array(16).keys()).map(i => <option key={i} value={i}>{i}</option>)\n                }\n                </select>\n            </div>\n        </Fragment>\n    );\n};\n\nclass ControlStepsEditor extends Component {\n\n    // state = {\n    //     config: this.props.config\n    // };\n\n    onStepUpdate = (stepIndex, dataType, dataIndex, value) => {\n        console.log(`ControlStepsEditor.onStepUpdate`, stepIndex, dataIndex, value);\n        //\n        // produce(draft => {\n        //     draft.config.steps[stepIndex].data[dataIndex] = value;\n        //     // this.props.onBusy(false);\n        // });\n        //\n        this.props.onUpdate(stepIndex, dataType, dataIndex, value);    // stepIndex, dataIndex, value\n    };\n\n    render() {\n\n        // const presetIndex = this.props.presetIndex;\n        // const controlId = this.props.controlId;\n\n        //config={data[\"1\"][\"5\"][\"controls\"][controlId]}\n\n        const steps = this.props.steps;\n\n        console.log(\"ControlStepsEditor.render\", steps);\n\n        // let c = config[\"1\"][presetIndex][\"controls\"][controlId];\n        /*\n            <div className=\"control-editor\">\n                <h2>{CONTROLS_FULLNAME[controlId]}</h2>\n                <div>\n                    <h3>setup</h3>\n                    <div></div>\n                    <h3>steps</h3>\n*/\n\n        return (\n                    <div className=\"steps\">\n                        <div></div>\n                        <div>Type</div>\n                        <div>Data 1</div>\n                        <div>Data 2</div>\n                        <div>Data 3</div>\n                        <div>MIDI Channel</div>\n                        {Object.keys(steps).map(i =>\n                            <Step key={i} index={i} config={steps[i]} updateCallback={(dataType, dataIndex, value) => this.onStepUpdate(i, dataType, dataIndex, value)} />\n                        )}\n                    </div>\n\n/*\n                </div>\n            </div>\n*/\n        );\n    }\n}\n\nexport default ControlStepsEditor;","import React, {Component, Fragment} from 'react';\nimport PresetSelector from \"../components/PresetSelector\";\nimport {buildControlStepSysex, isSysexData, mergeDeep, parseSysexDump} from \"../utils/sysex\";\nimport ControlSelector from \"../components/ControlSelector\";\nimport {requestPresetObj, SYSEX_SIGNATURE} from \"../pacer\";\nimport {hs} from \"../utils/hexstring\";\nimport {produce} from \"immer\";\nimport {outputById} from \"../utils/ports\";\nimport ControlStepsEditor from \"../components/ControlStepsEditor\";\nimport Midi from \"../components/Midi\";\nimport MidiPort from \"../components/MidiPort\";\nimport Dropzone from \"react-dropzone\";\nimport \"./Presets.css\";\n\nconst MAX_FILE_SIZE = 5 * 1024*1024;\n\nclass Presets extends Component {\n\n    state = {\n        output: null,       // MIDI output port used for output\n        presetIndex: \"\",    // preset name, like \"B2\"\n        controlId: \"\",      //\n        changed: false,     // true when the control has been edited\n        data: null\n    };\n\n    /**\n     *\n     * @param files\n     * @returns {Promise<void>}\n     */\n    async readFiles(files) {\n        await Promise.all(files.map(\n            async file => {\n                if (file.size > MAX_FILE_SIZE) {\n                    console.warn(`${file.name}: file too big, ${file.size}`);\n                } else {\n                    const data = new Uint8Array(await new Response(file).arrayBuffer());\n                    if (isSysexData(data)) {\n                        this.setState(\n                            produce(draft => {\n                                // draft.data = mergeDeep(draft.data || {}, parseSysexDump(data));\n                                draft.data = parseSysexDump(data);\n                                // this.props.onBusy(false);\n                                // data[\"1\"]\n                                let pId = Object.keys(draft.data[\"1\"])[0];\n                                // console.log(pId);\n                                let cId = Object.keys(draft.data[\"1\"][pId][\"controls\"])[0];\n                                // console.log(cId);\n                                draft.presetIndex = parseInt(pId, 10);\n                                draft.controlId = parseInt(cId, 10);\n                            })\n                        )\n                    } else {\n                        console.log(\"readFiles: not a sysfile\", hs(data.slice(0, 5)));\n                    }\n                    // non sysex files are ignored\n                }\n                // too big files are ignored\n            }\n        ));\n    }\n\n    /**\n     * Drop Zone handler\n     * @param files\n     */\n    onDrop = (files) => {\n        console.log('drop', files);\n        // this.props.onBusy(true);\n        this.readFiles(files);  // returned promise is ignored, this is normal.\n    };\n\n    selectPreset = (id) => {\n        console.log(`selectPreset ${id}`);\n        this.setState({\n            presetIndex: id\n        });\n        if (id && this.state.controlId) {\n            this.sendSysex(requestPresetObj(id, this.state.controlId));\n        }\n    };\n\n    selectControl = (id) => {\n        console.log(`selectControl ${id}`);\n        this.setState({\n            controlId: id\n        });\n        if (this.state.presetIndex && id) {\n            this.sendSysex(requestPresetObj(this.state.presetIndex, id));\n        }\n    };\n\n    /**\n     * dataIndex is only used when dataType == \"data\"\n     */\n    controlStepsUpdate = (controlId, stepIndex, dataType, dataIndex, value) => {\n        console.log(\"Presets.controlStepsUpdate\", controlId, stepIndex, dataIndex, value);\n        this.setState(\n            produce(draft => {\n                if (dataType === \"data\") {\n                    draft.data[\"1\"][draft.presetIndex][\"controls\"][controlId][\"steps\"][stepIndex][\"data\"][dataIndex] = parseInt(value, 10);\n                } else {\n                    draft.data[\"1\"][draft.presetIndex][\"controls\"][controlId][\"steps\"][stepIndex][dataType] = parseInt(value, 10);\n                }\n                draft.data[\"1\"][draft.presetIndex][\"controls\"][controlId][\"steps\"][stepIndex][\"changed\"] = true;\n                draft.changed = true;\n                // this.props.onBusy(false);\n            })\n        );\n    };\n\n\n    handleMidiInputEvent = (event) => {\n        console.log(\"Presets.handleMidiInputEvent\", event, event.data);\n        // if (event instanceof MIDIMessageEvent) {\n        if (isSysexData(event.data)) {\n            this.setState(\n                produce(draft => {\n                    draft.data = mergeDeep(draft.data || {}, parseSysexDump(event.data));\n                    // this.props.onBusy(false);\n                })\n            )\n        } else {\n            console.log(\"MIDI message is not a sysex message\")\n        }\n        // }\n    };\n\n    renderPort = (port, selected, clickHandler) => {\n        if (port === undefined || port === null) return null;\n        return (\n            <MidiPort key={port.id} port={port} selected={selected} clickHandler={clickHandler} />\n        )\n    };\n\n    setOutput = (port_id) => {\n        console.log(`Page.setOutput ${port_id}`);\n        this.setState({output: port_id});\n    };\n\n    sendSysex = msg => {\n        console.log(\"sendSysex\", msg);\n        if (!this.state.output) return;\n        let out = outputById(this.state.output);\n        if (!out) {\n            console.warn(`send: output ${this.state.output} not found`);\n            return;\n        }\n        this.setState(\n            {data: null},\n            () => out.sendSysex(SYSEX_SIGNATURE, msg)\n        );\n    };\n\n    render() {\n        const { presetIndex, controlId, data, changed } = this.state;\n\n        let showEditor = false;\n\n        if (data) {\n\n            showEditor = true;\n\n            if (!(\"1\" in data)) {        // TODO: replace \"1\" by a constant\n                console.log(`Presets: invalid data`, data);\n                showEditor = false;\n            }\n\n            if (showEditor && !(presetIndex in data[\"1\"])) {        // TODO: replace \"1\" by a constant\n                console.log(`Presets: preset ${presetIndex} not found in data`);\n                showEditor = false;\n            }\n\n            if (showEditor && !(\"controls\" in data[\"1\"][presetIndex])) {\n                console.log(`Presets: controls not found in data`);\n                showEditor = false;\n            }\n\n            if (showEditor && !(controlId in data[\"1\"][presetIndex][\"controls\"])) {\n                console.log(`Presets: control ${controlId} not found in data`);\n                showEditor = false;\n            }\n\n            if (showEditor && !(\"steps\" in data[\"1\"][presetIndex][\"controls\"][controlId])) {\n                console.log(`Presets: steps not found in data`);\n                showEditor = false;\n            }\n        }\n\n        // if (showEditor) {\n        //     console.log(\"Presets.render\", showEditor, Object.keys(data[\"1\"][presetIndex][\"controls\"][controlId][\"steps\"]).length, data);\n        // } else {\n            console.log(\"Presets.render\", showEditor, presetIndex, controlId);\n        // }\n\n        showEditor = showEditor && (Object.keys(data[\"1\"][presetIndex][\"controls\"][controlId][\"steps\"]).length === 6);\n\n        console.log(\"Presets.render\", showEditor, presetIndex, controlId);\n\n        let updateMessages = [];\n        if (showEditor) {\n            updateMessages = buildControlStepSysex(presetIndex, controlId, data[\"1\"][presetIndex][\"controls\"][controlId][\"steps\"]);\n        }\n\n        return (\n            <div className=\"wrapper\">\n                <div className=\"content\">\n\n                    <div className=\"content-row step-1\">\n                        <div className=\"background\">\n                            Connect\n                        </div>\n                        <div className=\"content-row-header\">\n                            1\n                        </div>\n                        <div className=\"content-row-content row-middle-aligned\">\n                            <Midi inputRenderer={this.renderPort} outputRenderer={this.renderPort}\n                                  autoConnect={/Pacer midi1/i} onMidiInputEvent={this.handleMidiInputEvent}\n                                  setOutput={this.setOutput}\n                                  className=\"sub-header\" />\n                        </div>\n                    </div>\n                    <div className=\"content-row step-2\">\n                        <div className=\"background\">\n                            Select\n                        </div>\n                        <div className=\"content-row-header\">\n                            2\n                        </div>\n                        <div className=\"content-row-content\">\n\n                            <h2>Choose the preset and the control to view/edit:</h2>\n\n                            <div className=\"selectors\">\n\n                                <PresetSelector currentPreset={presetIndex} onClick={this.selectPreset} />\n\n                                {presetIndex && <ControlSelector currentControl={controlId} onClick={this.selectControl} />}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"content-row step-3\">\n                        <div className=\"background\">\n                            Edit\n                        </div>\n                        <div className=\"content-row-header\">\n                            3\n                        </div>\n                        <div className=\"content-row-content\">\n                            {showEditor &&\n                            <Fragment>\n                                <h2>Edit the selected control:</h2>\n                                <ControlStepsEditor controlId={controlId}\n                                                    steps={data[\"1\"][presetIndex][\"controls\"][controlId][\"steps\"]}\n                                                    onUpdate={(stepIndex, dataType, dataIndex, value) => this.controlStepsUpdate(controlId, stepIndex, dataType, dataIndex, value)} />\n                            </Fragment>\n                            }\n                        </div>\n                    </div>\n\n                    <div className=\"content-row step-4\">\n                        <div className=\"background\">\n                            Write\n                        </div>\n                        <div className=\"content-row-header\">\n                            4\n                        </div>\n                        <div className=\"content-row-content\">\n                            {changed &&\n                            <Fragment>\n                                <h2>Send the updated config to the Pacer:</h2>\n                                <div className=\"actions\">\n                                    <button>Update Pacer</button>\n                                </div>\n                            </Fragment>\n                            }\n                        </div>\n                    </div>\n\n                    <div>\n                        {showEditor && <div className=\"debug\">\n                            <h4>[Debug] update message to send to Pacer:</h4>\n                            <div className=\"message-to-send\">\n                                {updateMessages.map(m => <div className=\"code\">{hs(m)}</div>)}\n                            </div>\n                        </div>}\n\n                        {data && <div className=\"debug\">\n                            <h4>[Debug] sysex data:</h4>\n                            <pre>{JSON.stringify(data, null, 4)}</pre>\n                        </div>}\n\n                    </div>\n                </div>\n\n                <div className=\"help\">\n\n                    <Dropzone onDrop={this.onDrop} className=\"drop-zone\">\n                        Drop a binary sysex file here<br />or click to open the file dialog\n                    </Dropzone>\n\n                    {/*<h2>Help</h2>*/}\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\nexport default Presets;\n","export const MESSAGE = {\n    0x80: \"Note Off\",\n    0x90: \"Note On\",\n    0xA0: \"AfterTouch\",\n    0xB0: \"Control Change\",\n    0xC0: \"Program Change\",\n    0xD0: \"Channel Pressure\",\n    0xE0: \"Pitch Wheel\"\n};\n\nexport const CONTROLER = {\n    0: \"Bank Select (coarse)\",\n    1: \"Modulation Wheel (coarse)\",\n    2: \"Breath controller (coarse)\",\n    4: \"Foot Pedal (coarse)\",\n    5: \"Portamento Time (coarse)\",\n    6: \"Data Entry (coarse)\",\n    7: \"Volume (coarse)\",\n    8: \"Balance (coarse)\",\n    10: \"Pan position (coarse)\",\n    11: \"Expression (coarse)\",\n    12: \"Effect Control 1 (coarse)\",\n    13: \"Effect Control 2 (coarse)\",\n    16: \"General Purpose Slider 1\",\n    17: \"General Purpose Slider 2\",\n    18: \"General Purpose Slider 3\",\n    19: \"General Purpose Slider 4\",\n    32: \"Bank Select (fine)\",\n    33: \"Modulation Wheel (fine)\",\n    34: \"Breath controller (fine)\",\n    36: \"Foot Pedal (fine)\",\n    37: \"Portamento Time (fine)\",\n    38: \"Data Entry (fine)\",\n    39: \"Volume (fine)\",\n    40: \"Balance (fine)\",\n    42: \"Pan position (fine)\",\n    43: \"Expression (fine)\",\n    44: \"Effect Control 1 (fine)\",\n    45: \"Effect Control 2 (fine)\",\n    64: \"Hold Pedal (on/off)\",\n    65: \"Portamento (on/off)\",\n    66: \"Sustenuto Pedal (on/off)\",\n    67: \"Soft Pedal (on/off)\",\n    68: \"Legato Pedal (on/off)\",\n    69: \"Hold 2 Pedal (on/off)\",\n    70: \"Sound Variation\",\n    71: \"Sound Timbre\",\n    72: \"Sound Release Time\",\n    73: \"Sound Attack Time\",\n    74: \"Sound Brightness\",\n    75: \"Sound Control 6\",\n    76: \"Sound Control 7\",\n    77: \"Sound Control 8\",\n    78: \"Sound Control 9\",\n    79: \"Sound Control 10\",\n    80: \"General Purpose Button 1 (on/off)\",\n    81: \"General Purpose Button 2 (on/off)\",\n    82: \"General Purpose Button 3 (on/off)\",\n    83: \"General Purpose Button 4 (on/off)\",\n    91: \"Effects Level\",\n    92: \"Tremulo Level\",\n    93: \"Chorus Level\",\n    94: \"Celeste Level\",\n    95: \"Phaser Level\",\n    96: \"Data Button increment\",\n    97: \"Data Button decrement\",\n    98: \"Non-registered Parameter (fine)\",\n    99: \"Non-registered Parameter (coarse)\",\n    100: \"Registered Parameter (fine)\",\n    101: \"Registered Parameter (coarse)\",\n    120: \"All Sound Off\",\n    121: \"All Controllers Off\",\n    122: \"Local Keyboard (on/off)\",\n    123: \"All Notes Off\",\n    124: \"Omni Mode Off\",\n    125: \"Omni Mode On\",\n    126: \"Mono Operation\",\n    127: \"Poly Operation\"\n};\n","import React, {Component} from 'react';\nimport Midi from \"../components/Midi\";\nimport {produce} from \"immer\";\nimport MidiPort from \"../components/MidiPort\";\nimport parseMidi from 'parse-midi';\nimport {hs} from \"../utils/hexstring\";\nimport {CONTROLER, MESSAGE} from \"../utils/midi\";\nimport * as Note from \"tonal-note\";\nimport \"./Monitor.css\";\n\nclass Monitor extends Component {\n\n    state = {\n        messages: []\n    };\n\n    handleMidiInputEvent = (event) => {\n        // console.log(\"Monitor.handleMidiInputEvent\", event, event.type, event.data);\n        // if (event instanceof MIDIMessageEvent) {\n        this.setState(\n            produce(draft => {\n                let len = draft.messages.unshift(event.data);\n                if (len > 20) draft.messages.pop();\n            })\n        )\n        // }\n    };\n\n    renderPort = (port, selected, clickHandler) => {\n        if (port === undefined || port === null) return null;\n        return (\n            <MidiPort key={port.id} port={port} selected={selected} clickHandler={clickHandler} />\n        )\n    };\n\n    render() {\n\n        return (\n\n            <div className=\"wrapper\">\n                <div className=\"content\">\n                    <div>\n                        <div className=\"content-row step-1\">\n                            <div className=\"background\">\n                                Connect\n                            </div>\n                            <div className=\"content-row-header\">\n                                1\n                            </div>\n                            <div className=\"content-row-content row-middle-aligned\">\n                                <Midi inputRenderer={this.renderPort} outputRenderer={this.renderPort}\n                                      autoConnect={/.*/i} onMidiInputEvent={this.handleMidiInputEvent}\n                                      className=\"sub-header\" />\n                            </div>\n                        </div>\n                        <div className=\"content-row step-2\">\n                            <div className=\"background\">\n                                View\n                            </div>\n                            <div className=\"content-row-header\">\n                                2\n                            </div>\n                            <div className=\"content-row-content\">\n                                <div>\n                                    <h2>MIDI messages</h2>\n                                    <p>The messages are displayed in reverse chronological order (the most recent on top). Only the last 20 messages are displayed.</p>\n                                </div>\n                                <div className=\"messages\">\n                                    {this.state.messages.map((msg, i) => {\n                                        let m = parseMidi(msg);\n                                        // console.log(m, h(m.messageCode));\n                                        let info2 = '';\n                                        let info3 = '';\n                                        switch (m.messageCode) {\n                                            case 0x80:      // {messageCode: 144, channel: 1, messageType: \"noteon\", key: 70, velocity: 21}\n                                            case 0x90:\n                                                info2 = Note.fromMidi(m.key);\n                                                info3 = `velocity: ${m.velocity}`;\n                                                break;\n                                            case 0xA0:  // \"AfterTouch\",\n                                                break;\n                                            case 0xB0:\n                                                info2 = CONTROLER[m.controlNumber];\n                                                info3 = m.controlValue;\n                                                break;\n                                            case 0xC0:          // {messageCode: 192, channel: 4, messageType: \"programchange\", program: 102} \"C0\"\n                                                info2 = `program: ${m.program}`;\n                                                info3 = '';\n                                                break;\n                                            case 0xD0:  // \"Channel Pressure\\\",\\n\"\n                                                break;\n                                            case 0xE0:          // {messageCode: 224, channel: 1, messageType: \"pitchbendchange\", pitchBend: 8283, pitchBendMultiplier: 0.011109754608716884}\n                                                info2 = `bend: ${m.pitchBend}`;\n                                                info3 = `multiplier: ${m.pitchBendMultiplier}`;\n                                                break;\n                                            default:\n                                                break;\n                                        }\n                                        return (\n                                            <div>\n                                                <span className=\"code\">[{hs(msg)}]</span>\n                                                <span className=\"msg-channel\">Channel {m.channel}</span>\n                                                <span className=\"msg-name\">{MESSAGE[m.messageCode]}</span>\n                                                <span className=\"msg-data\">{info2}</span>\n                                                <span className=\"msg-data\">{info3}</span>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"help\">\n                    <h2>Help</h2>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Monitor;\n","import React from 'react';\nimport \"./Footer.css\";\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <div className=\"gh\">\n                <a href=\"https://github.com/francoisgeorgy/pacer-editor\" target=\"_blank\" rel=\"noopener noreferrer\">Source code available on GitHub</a>\n                <a aria-label=\"Homepage\" title=\"project on github\" href=\"https://github.com/francoisgeorgy/pacer-editor\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <svg height=\"24\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"24\" aria-hidden=\"true\">\n                        <path fillRule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"></path>\n                    </svg>\n                </a>\n            </div>\n            <div>\n                <p>“Nektar Technology”, the logo and all other Nektar Technology product, technology or service names and\n                    logos are trademarks or registered trademarks of Nektar Technology, Inc.</p>\n                <p>This web site is not endorsed by, directly affiliated with, maintained, or sponsored by Nektar Technology.\n                    This web site is published under <a href=\"https://www.gnu.org/licenses/gpl-3.0.en.html\" target=\"_blank\" rel=\"noopener noreferrer\">GNU General Public License v3</a>\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default Footer;\n","import React, {Component} from 'react';\n\nclass Global extends Component {\n\n    render() {\n\n        return (\n            <div className=\"wrapper\">\n                <div className=\"content\">\n                    <div className=\"content-row step-1\">\n                        <div className=\"background\">\n                            Connect\n                        </div>\n                        <div className=\"content-row-header\">\n                            1\n                        </div>\n                        <div className=\"content-row-content\">\n                            <h2>Sorry, this feature is not implemented yet.</h2>\n                        </div>\n                    </div>\n                    <div className=\"content-row step-2\">\n                        <div className=\"background\">\n                            Select\n                        </div>\n                        <div className=\"content-row-header\">\n                            2\n                        </div>\n                        <div className=\"content-row-content\">\n                        </div>\n                    </div>\n                    <div className=\"content-row step-3\">\n                        <div className=\"background\">\n                            Edit\n                        </div>\n                        <div className=\"content-row-header\">\n                            3\n                        </div>\n                        <div className=\"content-row-content\">\n                        </div>\n                    </div>\n                    <div className=\"content-row step-4\">\n                        <div className=\"background\">\n                            Write\n                        </div>\n                        <div className=\"content-row-header\">\n                            4\n                        </div>\n                        <div className=\"content-row-content\">\n                        </div>\n                    </div>\n                </div>\n                <div className=\"help\">\n                    <h2>Help</h2>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Global;\n","import React, {Component} from 'react';\nimport Dropzone from \"react-dropzone\";\nimport {produce} from \"immer\";\nimport {isSysexData, mergeDeep, parseSysexDump} from \"../utils/sysex\";\nimport DumpSysex from \"../components/DumpSysex\";\nimport './DumpDecoder.css';\nimport {hs} from \"../utils/hexstring\";\nimport Midi from \"../components/Midi\";\nimport MidiPort from \"../components/MidiPort\";\n\nconst MAX_FILE_SIZE = 5 * 1024*1024;\n\nclass DumpDecoder extends Component {\n\n    state = {\n        data: null\n    };\n\n    /**\n     *\n     * @param files\n     * @returns {Promise<void>}\n     */\n    async readFiles(files) {\n        await Promise.all(files.map(\n            async file => {\n                if (file.size > MAX_FILE_SIZE) {\n                    console.warn(`${file.name}: file too big, ${file.size}`);\n                } else {\n                    const data = new Uint8Array(await new Response(file).arrayBuffer());\n                    if (isSysexData(data)) {\n                        this.setState(\n                            produce(draft => {\n                                draft.data = mergeDeep(draft.data || {}, parseSysexDump(data));\n                                this.props.onBusy(false);\n                            })\n                        )\n                    } else {\n                        console.log(\"readFiles: not a sysfile\", hs(data.slice(0, 5)));\n                    }\n                    // non sysex files are ignored\n                }\n                // too big files are ignored\n            }\n        ));\n    }\n\n    /**\n     * Drop Zone handler\n     * @param files\n     */\n    onDrop = (files) => {\n        console.log('drop', files);\n        this.props.onBusy(true);\n        this.readFiles(files);  // returned promise is ignored, this is normal.\n    };\n\n    handleMidiInputEvent = (event) => {\n        console.log(\"DumpDecoder.handleMidiInputEvent\", event, event.data);\n        // if (event instanceof MIDIMessageEvent) {\n        if (isSysexData(event.data)) {\n            console.log(\"DumpDecoder.handleMidiInputEvent: data is SysEx\");\n            this.setState(\n                produce(draft => {\n                    draft.data = mergeDeep(draft.data || {}, parseSysexDump(event.data));\n                    // this.props.onBusy(false);\n                })\n            )\n        } else {\n            console.log(\"MIDI message is not a sysex message\")\n        }\n        // }\n    };\n\n    renderPort = (port, selected, clickHandler) => {\n        if (port === undefined || port === null) return null;\n        return (\n            <MidiPort key={port.id} port={port} selected={selected} clickHandler={clickHandler} />\n        )\n    };\n\n\n    /**\n     * @returns {*}\n     */\n    render() {\n\n        const { data } = this.state;\n\n        console.log(\"DumpDecoder.render\", this.props);\n\n        return (\n            <div className=\"wrapper\">\n                <div className=\"content\">\n                    <div className=\"content-row step-1\">\n                        <div className=\"background\">\n                            Connect\n                        </div>\n                        <div className=\"content-row-header\">\n                            1\n                        </div>\n                        <div className=\"content-row-content row-middle-aligned\">\n                            <Midi inputRenderer={this.renderPort} outputRenderer={this.renderPort}\n                                  autoConnect={/Pacer midi1/i} onMidiInputEvent={this.handleMidiInputEvent}\n                                  className=\"sub-header\" />\n                        </div>\n                    </div>\n                    <div className=\"content-row step-2\">\n                        <div className=\"background\">\n                            Get dump\n                        </div>\n                        <div className=\"content-row-header\">\n                            2\n                        </div>\n                        <div className=\"content-row-content row-middle-aligned\">\n                            {/*<Dropzone onDrop={this.onDrop} className=\"drop-zone\">*/}\n                                {/*Drop a binary sysex file here or click to open the file dialog*/}\n                            {/*</Dropzone>*/}\n                            Send a dump from your Pacer or drop a binary sysex file onto the drop zone on the right.\n                        </div>\n                    </div>\n                    <div className=\"content-row step-3\">\n                        <div className=\"background\">\n                            Decode\n                        </div>\n                        <div className=\"content-row-header\">\n                            3\n                        </div>\n                        <div className=\"content-row-content\">\n                            <DumpSysex data={data} />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"help\">\n                    <Dropzone onDrop={this.onDrop} className=\"drop-zone\">\n                        Drop a binary sysex file here<br />or click to open the file dialog\n                    </Dropzone>\n\n                    {/*<h2>Help</h2>*/}\n                </div>\n\n            </div>\n\n        );\n    }\n}\n\nexport default DumpDecoder;\n","import React, {Component} from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport TestSender from \"./pages/TestSender\";\nimport Presets from \"./pages/Presets\";\nimport Monitor from \"./pages/Monitor\";\nimport Footer from \"./components/Footer\";\nimport Global from \"./pages/Global\";\nimport DumpDecoder from \"./pages/DumpDecoder\";\n\n\nconst MenuLink = ({ label, to, activeOnlyWhenExact }) => (\n    <Route\n        path={to}\n        exact={activeOnlyWhenExact}\n        children={({ match }) => (\n            <span className={match ? \"header-link active\" : \"header-link\"}>\n                <Link to={to}>{label}</Link>\n            </span>\n        )}\n    />\n);\n\n\nclass App extends Component {\n\n    state = {\n        busy: false\n    };\n\n    /**\n     *\n     * @param busy boolean\n     */\n    onBusy = (busy) => {\n        this.setState({ busy });\n    };\n\n    /**\n     * Main app render\n     * @returns {*}\n     */\n    render() {\n        const { busy } = this.state;\n\n        return (\n            <Router>\n                <div className=\"app\">\n\n                    <header className=\"header\">\n                        {/*<h1>Pacer Editor</h1>*/}\n                        <MenuLink activeOnlyWhenExact={true} to=\"/\" label=\"Home\" />\n                        <MenuLink to=\"/presets\" label=\"Presets\" />\n                        <MenuLink to=\"/global\" label=\"Global config\" />\n                        <MenuLink to=\"/monitor\" label=\"MIDI monitor\" />\n                        <MenuLink to=\"/dumpdecoder\" label=\"Dump decoder\" />\n                        <MenuLink to=\"/testsender\" label=\"Debug\" />\n                        <div className=\"spacer\">\n                        </div>\n                        {busy && <div className=\"busy\">busy</div>}\n                    </header>\n\n                    {/*<div className=\"wrapper\">*/}\n                        {/*<div className=\"content\">*/}\n                            <Switch>\n                                <Route exact={true} path=\"/\" render={\n                                    props => (\n                                        <Home />\n                                    )\n                                }/>\n                                <Route path=\"/presets\" render={\n                                    props => (\n                                        <Presets onBusy={this.onBusy} />\n                                    )\n                                }/>\n                                <Route path=\"/global\" render={\n                                    props => (\n                                        <Global onBusy={this.onBusy} />\n                                    )\n                                }/>\n                                <Route path=\"/monitor\" render={\n                                    props => (\n                                        <Monitor onBusy={this.onBusy} />\n                                    )\n                                }/>\n                                <Route path=\"/dumpdecoder\" render={\n                                    props => (\n                                        <DumpDecoder onBusy={this.onBusy} />\n                                    )\n                                }/>\n                                <Route path=\"/testsender\" render={\n                                    props => (\n                                        <TestSender onBusy={this.onBusy} />\n                                    )\n                                }/>\n                            </Switch>\n                        {/*</div>*/}\n                    {/*</div>*/}\n\n                    <Footer />\n\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nfunction noop() {}\nif (process.env.NODE_ENV !== 'development') {\n    console.log = noop;\n    console.warn = noop;\n    console.error = noop;\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}